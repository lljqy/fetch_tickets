import sys
import json
import time
import secrets
import binascii
import warnings
from pathlib import Path
from typing import Dict, List
from datetime import datetime
from urllib.parse import urljoin
from dataclasses import dataclass
from concurrent.futures import ThreadPoolExecutor, wait, Future

import requests
import pandas as pd
from Crypto.Cipher import AES
from selenium import webdriver
from Crypto.Util import Padding

from utils.common import TIME_FORMAT, time_print

warnings.filterwarnings('ignore')


@dataclass
class Params:
    province: str = None
    city: str = None
    county: str = None
    qualification_type: str = None
    qualification_name: str = None


class JZSC:
    """
    抽象基类
    """
    _base_url = "https://jzsc.mohurd.gov.cn"
    _headers = {
        "Accept": "application/json, text/plain, */*",
        "Accept-Language": "zh-CN,zh;q=0.9",
        "Connection": "keep-alive",
        "Referer": urljoin(_base_url, "data/company?complexname="),
        "Sec-Fetch-Dest": "empty",
        "Sec-Fetch-Mode": "cors",
        "Sec-Fetch-Site": "same-origin",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) "
                      "Chrome/118.0.0.0 Safari/537.36",
        "accessToken": "",
        "sec-ch-ua": "\"Chromium\";v=\"118\", \"Google Chrome\";v=\"118\", \"Not=A?Brand\";v=\"99\"",
        "sec-ch-ua-mobile": "?0",
        "sec-ch-ua-platform": "\"Windows\"",
        "timeout": "30000"
    }
    _province_to_region_id = {'北京': '110000', '天津': '120000', '河北': '130000', '山西': '140000', '内蒙古': '150000',
                              '辽宁': '210000', '吉林': '220000', '黑龙江': '230000', '上海': '310000', '江苏': '320000',
                              '浙江': '330000', '安徽': '340000', '福建': '350000', '江西': '360000', '山东': '370000',
                              '河南': '410000', '湖北': '420000', '湖南': '430000', '广东': '440000', '广西': '450000',
                              '海南': '460000', '重庆': '500000', '四川': '510000', '贵州': '520000', '云南': '530000',
                              '西藏': '540000', '陕西': '610000', '甘肃': '620000', '青海': '630000', '宁夏': '640000',
                              '新疆': '650000', '新疆生产建设兵团': '660000'}
    _city_to_region_id = {'北京@@市辖区': '110100', '天津@@市辖区': '120100', '天津@@县': '120200', '河北@@石家庄': '130100',
                          '河北@@唐山': '130200', '河北@@秦皇岛': '130300', '河北@@邯郸': '130400', '河北@@邢台': '130500',
                          '河北@@保定': '130600', '河北@@张家口': '130700', '河北@@承德': '130800', '河北@@沧州': '130900',
                          '河北@@廊坊': '131000', '河北@@衡水': '131100', '山西@@太原': '140100', '山西@@大同': '140200',
                          '山西@@阳泉': '140300', '山西@@长治': '140400', '山西@@晋城': '140500', '山西@@朔州': '140600',
                          '山西@@晋中': '140700', '山西@@运城': '140800', '山西@@忻州': '140900', '山西@@临汾': '141000',
                          '山西@@吕梁': '141100', '内蒙古@@呼和浩特': '150100', '内蒙古@@包头': '150200', '内蒙古@@乌海': '150300',
                          '内蒙古@@赤峰': '150400', '内蒙古@@通辽': '150500', '内蒙古@@鄂尔多斯': '150600', '内蒙古@@呼伦贝尔': '150700',
                          '内蒙古@@巴彦淖尔': '150800', '内蒙古@@乌兰察布': '150900', '内蒙古@@兴安盟': '152200', '内蒙古@@锡林郭勒盟': '152500',
                          '内蒙古@@阿拉善盟': '152900', '辽宁@@沈阳': '210100', '辽宁@@大连': '210200', '辽宁@@鞍山': '210300',
                          '辽宁@@抚顺': '210400', '辽宁@@本溪': '210500', '辽宁@@丹东': '210600', '辽宁@@锦州': '210700',
                          '辽宁@@营口': '210800', '辽宁@@阜新': '210900', '辽宁@@辽阳': '211000', '辽宁@@盘锦': '211100',
                          '辽宁@@铁岭': '211200', '辽宁@@朝阳': '211300', '辽宁@@葫芦岛': '211400', '吉林@@长春': '220100',
                          '吉林@@吉林': '220200', '吉林@@四平': '220300', '吉林@@辽源': '220400', '吉林@@通化': '220500',
                          '吉林@@白山': '220600', '吉林@@松原': '220700', '吉林@@白城': '220800', '吉林@@延边朝鲜族自治州': '222400',
                          '黑龙江@@哈尔滨': '230100', '黑龙江@@齐齐哈尔': '230200', '黑龙江@@鸡西': '230300', '黑龙江@@鹤岗': '230400',
                          '黑龙江@@双鸭山': '230500', '黑龙江@@大庆': '230600', '黑龙江@@伊春': '230700', '黑龙江@@佳木斯': '230800',
                          '黑龙江@@七台河': '230900', '黑龙江@@牡丹江': '231000', '黑龙江@@黑河': '231100', '黑龙江@@绥化': '231200',
                          '黑龙江@@大兴安岭地区': '232700', '上海@@市辖区': '310100', '江苏@@南京': '320100', '江苏@@无锡': '320200',
                          '江苏@@徐州': '320300', '江苏@@常州': '320400', '江苏@@苏州': '320500', '江苏@@南通': '320600',
                          '江苏@@连云港': '320700', '江苏@@淮安': '320800', '江苏@@盐城': '320900', '江苏@@扬州': '321000',
                          '江苏@@镇江': '321100', '江苏@@泰州': '321200', '江苏@@宿迁': '321300', '浙江@@杭州': '330100',
                          '浙江@@宁波': '330200', '浙江@@温州': '330300', '浙江@@嘉兴': '330400', '浙江@@湖州': '330500',
                          '浙江@@绍兴': '330600', '浙江@@金华': '330700', '浙江@@衢州': '330800', '浙江@@舟山': '330900',
                          '浙江@@台州': '331000', '浙江@@丽水': '331100', '安徽@@合肥': '340100', '安徽@@芜湖': '340200',
                          '安徽@@蚌埠': '340300', '安徽@@淮南': '340400', '安徽@@马鞍山': '340500', '安徽@@淮北': '340600',
                          '安徽@@铜陵': '340700', '安徽@@安庆': '340800', '安徽@@黄山': '341000', '安徽@@滁州': '341100',
                          '安徽@@阜阳': '341200', '安徽@@宿州': '341300', '安徽@@六安': '341500', '安徽@@亳州': '341600',
                          '安徽@@池州': '341700', '安徽@@宣城': '341800', '福建@@福州': '350100', '福建@@厦门': '350200',
                          '福建@@莆田': '350300', '福建@@三明': '350400', '福建@@泉州': '350500', '福建@@漳州': '350600',
                          '福建@@南平': '350700', '福建@@龙岩': '350800', '福建@@宁德': '350900', '江西@@南昌': '360100',
                          '江西@@景德镇': '360200', '江西@@萍乡': '360300', '江西@@九江': '360400', '江西@@新余': '360500',
                          '江西@@鹰潭': '360600', '江西@@赣州': '360700', '江西@@吉安': '360800', '江西@@宜春': '360900',
                          '江西@@抚州': '361000', '江西@@上饶': '361100', '山东@@济南': '370100', '山东@@青岛': '370200',
                          '山东@@淄博': '370300', '山东@@枣庄': '370400', '山东@@东营': '370500', '山东@@烟台': '370600',
                          '山东@@潍坊': '370700', '山东@@济宁': '370800', '山东@@泰安': '370900', '山东@@威海': '371000',
                          '山东@@日照': '371100', '山东@@莱芜': '371200', '山东@@临沂': '371300', '山东@@德州': '371400',
                          '山东@@聊城': '371500', '山东@@滨州': '371600', '山东@@菏泽': '371700', '河南@@郑州': '410100',
                          '河南@@开封': '410200', '河南@@洛阳': '410300', '河南@@平顶山': '410400', '河南@@安阳': '410500',
                          '河南@@鹤壁': '410600', '河南@@新乡': '410700', '河南@@焦作': '410800', '河南@@濮阳': '410900',
                          '河南@@许昌': '411000', '河南@@漯河': '411100', '河南@@三门峡': '411200', '河南@@南阳': '411300',
                          '河南@@商丘': '411400', '河南@@信阳': '411500', '河南@@周口': '411600', '河南@@驻马店': '411700',
                          '河南@@省直辖县级行政区划': '419000', '湖北@@武汉': '420100', '湖北@@黄石': '420200', '湖北@@十堰': '420300',
                          '湖北@@宜昌': '420500', '湖北@@襄阳': '420600', '湖北@@鄂州': '420700', '湖北@@荆门': '420800',
                          '湖北@@孝感': '420900', '湖北@@荆州': '421000', '湖北@@黄冈': '421100', '湖北@@咸宁': '421200',
                          '湖北@@随州': '421300', '湖北@@恩施土家族苗族自治州': '422800', '湖北@@省直辖县级行政区划': '429000', '湖南@@长沙': '430100',
                          '湖南@@株洲': '430200', '湖南@@湘潭': '430300', '湖南@@衡阳': '430400', '湖南@@邵阳': '430500',
                          '湖南@@岳阳': '430600', '湖南@@常德': '430700', '湖南@@张家界': '430800', '湖南@@益阳': '430900',
                          '湖南@@郴州': '431000', '湖南@@永州': '431100', '湖南@@怀化': '431200', '湖南@@娄底': '431300',
                          '湖南@@湘西土家族苗族自治州': '433100', '广东@@广州': '440100', '广东@@韶关': '440200', '广东@@深圳': '440300',
                          '广东@@珠海': '440400', '广东@@汕头': '440500', '广东@@佛山': '440600', '广东@@江门': '440700',
                          '广东@@湛江': '440800', '广东@@茂名': '440900', '广东@@肇庆': '441200', '广东@@惠州': '441300',
                          '广东@@梅州': '441400', '广东@@汕尾': '441500', '广东@@河源': '441600', '广东@@阳江': '441700',
                          '广东@@清远': '441800', '广东@@东莞': '441900', '广东@@中山': '442000', '广东@@潮州': '445100',
                          '广东@@揭阳': '445200', '广东@@云浮': '445300', '广西@@南宁': '450100', '广西@@柳州': '450200',
                          '广西@@桂林': '450300', '广西@@梧州': '450400', '广西@@北海': '450500', '广西@@防城港': '450600',
                          '广西@@钦州': '450700', '广西@@贵港': '450800', '广西@@玉林': '450900', '广西@@百色': '451000',
                          '广西@@贺州': '451100', '广西@@河池': '451200', '广西@@来宾': '451300', '广西@@崇左': '451400',
                          '海南@@海口': '460100', '海南@@三亚': '460200', '海南@@三沙': '460300', '海南@@儋州': '460400',
                          '海南@@省直辖县级行政区划': '469000', '重庆@@市辖区': '500100', '重庆@@县': '500200', '四川@@成都': '510100',
                          '四川@@自贡': '510300', '四川@@攀枝花': '510400', '四川@@泸州': '510500', '四川@@德阳': '510600',
                          '四川@@绵阳': '510700', '四川@@广元': '510800', '四川@@遂宁': '510900', '四川@@内江': '511000',
                          '四川@@乐山': '511100', '四川@@南充': '511300', '四川@@眉山': '511400', '四川@@宜宾': '511500',
                          '四川@@广安': '511600', '四川@@达州': '511700', '四川@@雅安': '511800', '四川@@巴中': '511900',
                          '四川@@资阳': '512000', '四川@@阿坝藏族羌族自治州': '513200', '四川@@甘孜藏族自治州': '513300',
                          '四川@@凉山彝族自治州': '513400', '贵州@@贵阳': '520100', '贵州@@六盘水': '520200', '贵州@@遵义': '520300',
                          '贵州@@安顺': '520400', '贵州@@毕节': '520500', '贵州@@铜仁': '520600', '贵州@@黔西南布依族苗族自治州': '522300',
                          '贵州@@黔东南苗族侗族自治州': '522600', '贵州@@黔南布依族苗族自治州': '522700', '云南@@昆明': '530100',
                          '云南@@曲靖': '530300', '云南@@玉溪': '530400', '云南@@保山': '530500', '云南@@昭通': '530600',
                          '云南@@丽江': '530700', '云南@@普洱': '530800', '云南@@临沧': '530900', '云南@@楚雄彝族自治州': '532300',
                          '云南@@红河哈尼族彝族自治州': '532500', '云南@@文山壮族苗族自治州': '532600', '云南@@西双版纳傣族自治州': '532800',
                          '云南@@大理白族自治州': '532900', '云南@@德宏傣族景颇族自治州': '533100', '云南@@怒江傈僳族自治州': '533300',
                          '云南@@迪庆藏族自治州': '533400', '西藏@@拉萨': '540100', '西藏@@日喀则': '540200', '西藏@@昌都': '540300',
                          '西藏@@林芝': '540400', '西藏@@山南': '540500', '西藏@@那曲地区': '542400', '西藏@@阿里地区': '542500',
                          '陕西@@西安': '610100', '陕西@@铜川': '610200', '陕西@@宝鸡': '610300', '陕西@@咸阳': '610400',
                          '陕西@@渭南': '610500', '陕西@@延安': '610600', '陕西@@汉中': '610700', '陕西@@榆林': '610800',
                          '陕西@@安康': '610900', '陕西@@商洛': '611000', '甘肃@@兰州': '620100', '甘肃@@嘉峪关': '620200',
                          '甘肃@@金昌': '620300', '甘肃@@白银': '620400', '甘肃@@天水': '620500', '甘肃@@武威': '620600',
                          '甘肃@@张掖': '620700', '甘肃@@平凉': '620800', '甘肃@@酒泉': '620900', '甘肃@@庆阳': '621000',
                          '甘肃@@定西': '621100', '甘肃@@陇南': '621200', '甘肃@@临夏回族自治州': '622900', '甘肃@@甘南藏族自治州': '623000',
                          '青海@@西宁': '630100', '青海@@海东': '630200', '青海@@海北藏族自治州': '632200', '青海@@黄南藏族自治州': '632300',
                          '青海@@海南藏族自治州': '632500', '青海@@果洛藏族自治州': '632600', '青海@@玉树藏族自治州': '632700',
                          '青海@@海西蒙古族藏族自治州': '632800', '宁夏@@银川': '640100', '宁夏@@石嘴山': '640200', '宁夏@@吴忠': '640300',
                          '宁夏@@固原': '640400', '宁夏@@中卫': '640500', '新疆@@乌鲁木齐': '650100', '新疆@@克拉玛依': '650200',
                          '新疆@@吐鲁番': '650400', '新疆@@哈密': '650500', '新疆@@昌吉回族自治州': '652300', '新疆@@博尔塔拉蒙古自治州': '652700',
                          '新疆@@巴音郭楞蒙古自治州': '652800', '新疆@@阿克苏地区': '652900', '新疆@@克孜勒苏柯尔克孜自治州': '653000',
                          '新疆@@喀什地区': '653100', '新疆@@和田地区': '653200', '新疆@@伊犁哈萨克自治州': '654000', '新疆@@塔城地区': '654200',
                          '新疆@@阿勒泰地区': '654300', '新疆@@自治区直辖县级行政区划': '659000', '新疆生产建设兵团@@第一师': '660100',
                          '新疆生产建设兵团@@第二师': '660200', '新疆生产建设兵团@@第三师': '660300', '新疆生产建设兵团@@第四师': '660400',
                          '新疆生产建设兵团@@第五师': '660500', '新疆生产建设兵团@@第六师': '660600', '新疆生产建设兵团@@第七师': '660700',
                          '新疆生产建设兵团@@第八师': '660800', '新疆生产建设兵团@@第九师': '660900', '新疆生产建设兵团@@第十师': '661000',
                          '新疆生产建设兵团@@第十一师': '661100', '新疆生产建设兵团@@第十二师': '661200', '新疆生产建设兵团@@第十三师': '661300',
                          '新疆生产建设兵团@@第十四师': '661400'}
    _county_to_region_id = {'北京@@市辖区@@东城区': '110101', '北京@@市辖区@@西城区': '110102', '北京@@市辖区@@朝阳区': '110105',
                            '北京@@市辖区@@丰台区': '110106', '北京@@市辖区@@石景山区': '110107', '北京@@市辖区@@海淀区': '110108',
                            '北京@@市辖区@@门头沟区': '110109', '北京@@市辖区@@房山区': '110111', '北京@@市辖区@@通州区': '110112',
                            '北京@@市辖区@@顺义区': '110113', '北京@@市辖区@@昌平区': '110114', '北京@@市辖区@@大兴区': '110115',
                            '北京@@市辖区@@怀柔区': '110116', '北京@@市辖区@@平谷区': '110117', '北京@@市辖区@@密云区': '110118',
                            '北京@@市辖区@@延庆区': '110119', '天津@@市辖区@@和平区': '120101', '天津@@市辖区@@河东区': '120102',
                            '天津@@市辖区@@河西区': '120103', '天津@@市辖区@@南开区': '120104', '天津@@市辖区@@河北区': '120105',
                            '天津@@市辖区@@红桥区': '120106', '天津@@市辖区@@东丽区': '120110', '天津@@市辖区@@西青区': '120111',
                            '天津@@市辖区@@津南区': '120112', '天津@@市辖区@@北辰区': '120113', '天津@@市辖区@@武清区': '120114',
                            '天津@@市辖区@@宝坻区': '120115', '天津@@市辖区@@滨海新区': '120116', '天津@@市辖区@@宁河区': '120117',
                            '天津@@市辖区@@静海区': '120118', '天津@@县@@蓟县': '120225', '河北@@石家庄@@长安区': '130102',
                            '河北@@石家庄@@桥西区': '130104', '河北@@石家庄@@新华区': '130105', '河北@@石家庄@@井陉矿区': '130107',
                            '河北@@石家庄@@裕华区': '130108', '河北@@石家庄@@藁城区': '130109', '河北@@石家庄@@鹿泉区': '130110',
                            '河北@@石家庄@@栾城区': '130111', '河北@@石家庄@@井陉县': '130121', '河北@@石家庄@@正定县': '130123',
                            '河北@@石家庄@@行唐县': '130125', '河北@@石家庄@@灵寿县': '130126', '河北@@石家庄@@高邑县': '130127',
                            '河北@@石家庄@@深泽县': '130128', '河北@@石家庄@@赞皇县': '130129', '河北@@石家庄@@无极县': '130130',
                            '河北@@石家庄@@平山县': '130131', '河北@@石家庄@@元氏县': '130132', '河北@@石家庄@@赵县': '130133',
                            '河北@@石家庄@@辛集': '130181', '河北@@石家庄@@晋州': '130183', '河北@@石家庄@@新乐': '130184',
                            '河北@@唐山@@路南区': '130202', '河北@@唐山@@路北区': '130203', '河北@@唐山@@古冶区': '130204',
                            '河北@@唐山@@开平区': '130205', '河北@@唐山@@丰南区': '130207', '河北@@唐山@@丰润区': '130208',
                            '河北@@唐山@@曹妃甸区': '130209', '河北@@唐山@@滦县': '130223', '河北@@唐山@@滦南县': '130224',
                            '河北@@唐山@@乐亭县': '130225', '河北@@唐山@@迁西县': '130227', '河北@@唐山@@玉田县': '130229',
                            '河北@@唐山@@遵化': '130281', '河北@@唐山@@迁安': '130283', '河北@@秦皇岛@@海港区': '130302',
                            '河北@@秦皇岛@@山海关区': '130303', '河北@@秦皇岛@@北戴河区': '130304', '河北@@秦皇岛@@抚宁区': '130306',
                            '河北@@秦皇岛@@青龙满族自治县': '130321', '河北@@秦皇岛@@昌黎县': '130322', '河北@@秦皇岛@@卢龙县': '130324',
                            '河北@@邯郸@@邯山区': '130402', '河北@@邯郸@@丛台区': '130403', '河北@@邯郸@@复兴区': '130404',
                            '河北@@邯郸@@峰峰矿区': '130406', '河北@@邯郸@@邯郸县': '130421', '河北@@邯郸@@临漳县': '130423',
                            '河北@@邯郸@@成安县': '130424', '河北@@邯郸@@大名县': '130425', '河北@@邯郸@@涉县': '130426',
                            '河北@@邯郸@@磁县': '130427', '河北@@邯郸@@肥乡县': '130428', '河北@@邯郸@@永年县': '130429',
                            '河北@@邯郸@@邱县': '130430', '河北@@邯郸@@鸡泽县': '130431', '河北@@邯郸@@广平县': '130432',
                            '河北@@邯郸@@馆陶县': '130433', '河北@@邯郸@@魏县': '130434', '河北@@邯郸@@曲周县': '130435',
                            '河北@@邯郸@@武安': '130481', '河北@@邢台@@桥东区': '130502', '河北@@邢台@@桥西区': '130503',
                            '河北@@邢台@@邢台县': '130521', '河北@@邢台@@临城县': '130522', '河北@@邢台@@内丘县': '130523',
                            '河北@@邢台@@柏乡县': '130524', '河北@@邢台@@隆尧县': '130525', '河北@@邢台@@任县': '130526',
                            '河北@@邢台@@南和县': '130527', '河北@@邢台@@宁晋县': '130528', '河北@@邢台@@巨鹿县': '130529',
                            '河北@@邢台@@新河县': '130530', '河北@@邢台@@广宗县': '130531', '河北@@邢台@@平乡县': '130532',
                            '河北@@邢台@@威县': '130533', '河北@@邢台@@清河县': '130534', '河北@@邢台@@临西县': '130535',
                            '河北@@邢台@@南宫': '130581', '河北@@邢台@@沙河': '130582', '河北@@保定@@竞秀区': '130602',
                            '河北@@保定@@南市区': '130604', '河北@@保定@@莲池区': '130606', '河北@@保定@@满城区': '130607',
                            '河北@@保定@@清苑区': '130608', '河北@@保定@@徐水区': '130609', '河北@@保定@@涞水县': '130623',
                            '河北@@保定@@阜平县': '130624', '河北@@保定@@定兴县': '130626', '河北@@保定@@唐县': '130627',
                            '河北@@保定@@高阳县': '130628', '河北@@保定@@容城县': '130629', '河北@@保定@@涞源县': '130630',
                            '河北@@保定@@望都县': '130631', '河北@@保定@@安新县': '130632', '河北@@保定@@易县': '130633',
                            '河北@@保定@@曲阳县': '130634', '河北@@保定@@蠡县': '130635', '河北@@保定@@顺平县': '130636',
                            '河北@@保定@@博野县': '130637', '河北@@保定@@雄县': '130638', '河北@@保定@@涿州': '130681',
                            '河北@@保定@@定州': '130682', '河北@@保定@@安国': '130683', '河北@@保定@@高碑店': '130684',
                            '河北@@张家口@@桥东区': '130702', '河北@@张家口@@桥西区': '130703', '河北@@张家口@@宣化区': '130705',
                            '河北@@张家口@@下花园区': '130706', '河北@@张家口@@万全区': '130708', '河北@@张家口@@崇礼区': '130709',
                            '河北@@张家口@@宣化县': '130721', '河北@@张家口@@张北县': '130722', '河北@@张家口@@康保县': '130723',
                            '河北@@张家口@@沽源县': '130724', '河北@@张家口@@尚义县': '130725', '河北@@张家口@@蔚县': '130726',
                            '河北@@张家口@@阳原县': '130727', '河北@@张家口@@怀安县': '130728', '河北@@张家口@@怀来县': '130730',
                            '河北@@张家口@@涿鹿县': '130731', '河北@@张家口@@赤城县': '130732', '河北@@承德@@双桥区': '130802',
                            '河北@@承德@@双滦区': '130803', '河北@@承德@@鹰手营子矿区': '130804', '河北@@承德@@承德县': '130821',
                            '河北@@承德@@兴隆县': '130822', '河北@@承德@@平泉县': '130823', '河北@@承德@@滦平县': '130824',
                            '河北@@承德@@隆化县': '130825', '河北@@承德@@丰宁满族自治县': '130826', '河北@@承德@@宽城满族自治县': '130827',
                            '河北@@承德@@围场满族蒙古族自治县': '130828', '河北@@沧州@@新华区': '130902', '河北@@沧州@@运河区': '130903',
                            '河北@@沧州@@沧县': '130921', '河北@@沧州@@青县': '130922', '河北@@沧州@@东光县': '130923',
                            '河北@@沧州@@海兴县': '130924', '河北@@沧州@@盐山县': '130925', '河北@@沧州@@肃宁县': '130926',
                            '河北@@沧州@@南皮县': '130927', '河北@@沧州@@吴桥县': '130928', '河北@@沧州@@献县': '130929',
                            '河北@@沧州@@孟村回族自治县': '130930', '河北@@沧州@@泊头': '130981', '河北@@沧州@@任丘': '130982',
                            '河北@@沧州@@黄骅': '130983', '河北@@沧州@@河间': '130984', '河北@@廊坊@@安次区': '131002',
                            '河北@@廊坊@@广阳区': '131003', '河北@@廊坊@@固安县': '131022', '河北@@廊坊@@永清县': '131023',
                            '河北@@廊坊@@香河县': '131024', '河北@@廊坊@@大城县': '131025', '河北@@廊坊@@文安县': '131026',
                            '河北@@廊坊@@大厂回族自治县': '131028', '河北@@廊坊@@霸州': '131081', '河北@@廊坊@@三河': '131082',
                            '河北@@衡水@@桃城区': '131102', '河北@@衡水@@冀州区': '131103', '河北@@衡水@@枣强县': '131121',
                            '河北@@衡水@@武邑县': '131122', '河北@@衡水@@武强县': '131123', '河北@@衡水@@饶阳县': '131124',
                            '河北@@衡水@@安平县': '131125', '河北@@衡水@@故城县': '131126', '河北@@衡水@@景县': '131127',
                            '河北@@衡水@@阜城县': '131128', '河北@@衡水@@深州': '131182', '山西@@太原@@小店区': '140105',
                            '山西@@太原@@迎泽区': '140106', '山西@@太原@@杏花岭区': '140107', '山西@@太原@@尖草坪区': '140108',
                            '山西@@太原@@万柏林区': '140109', '山西@@太原@@晋源区': '140110', '山西@@太原@@清徐县': '140121',
                            '山西@@太原@@阳曲县': '140122', '山西@@太原@@娄烦县': '140123', '山西@@太原@@古交': '140181',
                            '山西@@大同@@城区': '140202', '山西@@大同@@矿区': '140203', '山西@@大同@@南郊区': '140211',
                            '山西@@大同@@新荣区': '140212', '山西@@大同@@阳高县': '140221', '山西@@大同@@天镇县': '140222',
                            '山西@@大同@@广灵县': '140223', '山西@@大同@@灵丘县': '140224', '山西@@大同@@浑源县': '140225',
                            '山西@@大同@@左云县': '140226', '山西@@大同@@大同县': '140227', '山西@@阳泉@@城区': '140302',
                            '山西@@阳泉@@矿区': '140303', '山西@@阳泉@@郊区': '140311', '山西@@阳泉@@平定县': '140321',
                            '山西@@阳泉@@盂县': '140322', '山西@@长治@@城区': '140402', '山西@@长治@@郊区': '140411',
                            '山西@@长治@@长治县': '140421', '山西@@长治@@襄垣县': '140423', '山西@@长治@@屯留县': '140424',
                            '山西@@长治@@平顺县': '140425', '山西@@长治@@黎城县': '140426', '山西@@长治@@壶关县': '140427',
                            '山西@@长治@@长子县': '140428', '山西@@长治@@武乡县': '140429', '山西@@长治@@沁县': '140430',
                            '山西@@长治@@沁源县': '140431', '山西@@长治@@潞城': '140481', '山西@@晋城@@城区': '140502',
                            '山西@@晋城@@沁水县': '140521', '山西@@晋城@@阳城县': '140522', '山西@@晋城@@陵川县': '140524',
                            '山西@@晋城@@泽州县': '140525', '山西@@晋城@@高平': '140581', '山西@@朔州@@朔城区': '140602',
                            '山西@@朔州@@平鲁区': '140603', '山西@@朔州@@山阴县': '140621', '山西@@朔州@@应县': '140622',
                            '山西@@朔州@@右玉县': '140623', '山西@@朔州@@怀仁县': '140624', '山西@@晋中@@榆次区': '140702',
                            '山西@@晋中@@榆社县': '140721', '山西@@晋中@@左权县': '140722', '山西@@晋中@@和顺县': '140723',
                            '山西@@晋中@@昔阳县': '140724', '山西@@晋中@@寿阳县': '140725', '山西@@晋中@@太谷县': '140726',
                            '山西@@晋中@@祁县': '140727', '山西@@晋中@@平遥县': '140728', '山西@@晋中@@灵石县': '140729',
                            '山西@@晋中@@介休': '140781', '山西@@运城@@盐湖区': '140802', '山西@@运城@@临猗县': '140821',
                            '山西@@运城@@万荣县': '140822', '山西@@运城@@闻喜县': '140823', '山西@@运城@@稷山县': '140824',
                            '山西@@运城@@新绛县': '140825', '山西@@运城@@绛县': '140826', '山西@@运城@@垣曲县': '140827',
                            '山西@@运城@@夏县': '140828', '山西@@运城@@平陆县': '140829', '山西@@运城@@芮城县': '140830',
                            '山西@@运城@@永济': '140881', '山西@@运城@@河津': '140882', '山西@@忻州@@忻府区': '140902',
                            '山西@@忻州@@定襄县': '140921', '山西@@忻州@@五台县': '140922', '山西@@忻州@@代县': '140923',
                            '山西@@忻州@@繁峙县': '140924', '山西@@忻州@@宁武县': '140925', '山西@@忻州@@静乐县': '140926',
                            '山西@@忻州@@神池县': '140927', '山西@@忻州@@五寨县': '140928', '山西@@忻州@@岢岚县': '140929',
                            '山西@@忻州@@河曲县': '140930', '山西@@忻州@@保德县': '140931', '山西@@忻州@@偏关县': '140932',
                            '山西@@忻州@@原平': '140981', '山西@@临汾@@尧都区': '141002', '山西@@临汾@@曲沃县': '141021',
                            '山西@@临汾@@翼城县': '141022', '山西@@临汾@@襄汾县': '141023', '山西@@临汾@@洪洞县': '141024',
                            '山西@@临汾@@古县': '141025', '山西@@临汾@@安泽县': '141026', '山西@@临汾@@浮山县': '141027',
                            '山西@@临汾@@吉县': '141028', '山西@@临汾@@乡宁县': '141029', '山西@@临汾@@大宁县': '141030',
                            '山西@@临汾@@隰县': '141031', '山西@@临汾@@永和县': '141032', '山西@@临汾@@蒲县': '141033',
                            '山西@@临汾@@汾西县': '141034', '山西@@临汾@@侯马': '141081', '山西@@临汾@@霍州': '141082',
                            '山西@@吕梁@@离石区': '141102', '山西@@吕梁@@文水县': '141121', '山西@@吕梁@@交城县': '141122',
                            '山西@@吕梁@@兴县': '141123', '山西@@吕梁@@临县': '141124', '山西@@吕梁@@柳林县': '141125',
                            '山西@@吕梁@@石楼县': '141126', '山西@@吕梁@@岚县': '141127', '山西@@吕梁@@方山县': '141128',
                            '山西@@吕梁@@中阳县': '141129', '山西@@吕梁@@交口县': '141130', '山西@@吕梁@@孝义': '141181',
                            '山西@@吕梁@@汾阳': '141182', '内蒙古@@呼和浩特@@新城区': '150102', '内蒙古@@呼和浩特@@回民区': '150103',
                            '内蒙古@@呼和浩特@@玉泉区': '150104', '内蒙古@@呼和浩特@@赛罕区': '150105', '内蒙古@@呼和浩特@@土默特左旗': '150121',
                            '内蒙古@@呼和浩特@@托克托县': '150122', '内蒙古@@呼和浩特@@和林格尔县': '150123', '内蒙古@@呼和浩特@@清水河县': '150124',
                            '内蒙古@@呼和浩特@@武川县': '150125', '内蒙古@@包头@@东河区': '150202', '内蒙古@@包头@@昆都仑区': '150203',
                            '内蒙古@@包头@@青山区': '150204', '内蒙古@@包头@@石拐区': '150205', '内蒙古@@包头@@白云鄂博矿区': '150206',
                            '内蒙古@@包头@@九原区': '150207', '内蒙古@@包头@@土默特右旗': '150221', '内蒙古@@包头@@固阳县': '150222',
                            '内蒙古@@包头@@达尔罕茂明安联合旗': '150223', '内蒙古@@乌海@@海勃湾区': '150302', '内蒙古@@乌海@@海南区': '150303',
                            '内蒙古@@乌海@@乌达区': '150304', '内蒙古@@赤峰@@红山区': '150402', '内蒙古@@赤峰@@元宝山区': '150403',
                            '内蒙古@@赤峰@@松山区': '150404', '内蒙古@@赤峰@@阿鲁科尔沁旗': '150421', '内蒙古@@赤峰@@巴林左旗': '150422',
                            '内蒙古@@赤峰@@巴林右旗': '150423', '内蒙古@@赤峰@@林西县': '150424', '内蒙古@@赤峰@@克什克腾旗': '150425',
                            '内蒙古@@赤峰@@翁牛特旗': '150426', '内蒙古@@赤峰@@喀喇沁旗': '150428', '内蒙古@@赤峰@@宁城县': '150429',
                            '内蒙古@@赤峰@@敖汉旗': '150430', '内蒙古@@通辽@@科尔沁区': '150502', '内蒙古@@通辽@@科尔沁左翼中旗': '150521',
                            '内蒙古@@通辽@@科尔沁左翼后旗': '150522', '内蒙古@@通辽@@开鲁县': '150523', '内蒙古@@通辽@@库伦旗': '150524',
                            '内蒙古@@通辽@@奈曼旗': '150525', '内蒙古@@通辽@@扎鲁特旗': '150526', '内蒙古@@通辽@@霍林郭勒': '150581',
                            '内蒙古@@鄂尔多斯@@东胜区': '150602', '内蒙古@@鄂尔多斯@@达拉特旗': '150621', '内蒙古@@鄂尔多斯@@准格尔旗': '150622',
                            '内蒙古@@鄂尔多斯@@鄂托克前旗': '150623', '内蒙古@@鄂尔多斯@@鄂托克旗': '150624', '内蒙古@@鄂尔多斯@@杭锦旗': '150625',
                            '内蒙古@@鄂尔多斯@@乌审旗': '150626', '内蒙古@@鄂尔多斯@@伊金霍洛旗': '150627', '内蒙古@@呼伦贝尔@@海拉尔区': '150702',
                            '内蒙古@@呼伦贝尔@@扎赉诺尔区': '150703', '内蒙古@@呼伦贝尔@@阿荣旗': '150721',
                            '内蒙古@@呼伦贝尔@@莫力达瓦达斡尔族自治旗': '150722', '内蒙古@@呼伦贝尔@@鄂伦春自治旗': '150723',
                            '内蒙古@@呼伦贝尔@@鄂温克族自治旗': '150724', '内蒙古@@呼伦贝尔@@陈巴尔虎旗': '150725', '内蒙古@@呼伦贝尔@@新巴尔虎左旗': '150726',
                            '内蒙古@@呼伦贝尔@@新巴尔虎右旗': '150727', '内蒙古@@呼伦贝尔@@满洲里': '150781', '内蒙古@@呼伦贝尔@@牙克石': '150782',
                            '内蒙古@@呼伦贝尔@@扎兰屯': '150783', '内蒙古@@呼伦贝尔@@额尔古纳': '150784', '内蒙古@@呼伦贝尔@@根河': '150785',
                            '内蒙古@@巴彦淖尔@@临河区': '150802', '内蒙古@@巴彦淖尔@@五原县': '150821', '内蒙古@@巴彦淖尔@@磴口县': '150822',
                            '内蒙古@@巴彦淖尔@@乌拉特前旗': '150823', '内蒙古@@巴彦淖尔@@乌拉特中旗': '150824', '内蒙古@@巴彦淖尔@@乌拉特后旗': '150825',
                            '内蒙古@@巴彦淖尔@@杭锦后旗': '150826', '内蒙古@@乌兰察布@@集宁区': '150902', '内蒙古@@乌兰察布@@卓资县': '150921',
                            '内蒙古@@乌兰察布@@化德县': '150922', '内蒙古@@乌兰察布@@商都县': '150923', '内蒙古@@乌兰察布@@兴和县': '150924',
                            '内蒙古@@乌兰察布@@凉城县': '150925', '内蒙古@@乌兰察布@@察哈尔右翼前旗': '150926', '内蒙古@@乌兰察布@@察哈尔右翼中旗': '150927',
                            '内蒙古@@乌兰察布@@察哈尔右翼后旗': '150928', '内蒙古@@乌兰察布@@四子王旗': '150929', '内蒙古@@乌兰察布@@丰镇': '150981',
                            '内蒙古@@兴安盟@@乌兰浩特': '152201', '内蒙古@@兴安盟@@阿尔山': '152202', '内蒙古@@兴安盟@@科尔沁右翼前旗': '152221',
                            '内蒙古@@兴安盟@@科尔沁右翼中旗': '152222', '内蒙古@@兴安盟@@扎赉特旗': '152223', '内蒙古@@兴安盟@@突泉县': '152224',
                            '内蒙古@@锡林郭勒盟@@二连浩特': '152501', '内蒙古@@锡林郭勒盟@@锡林浩特': '152502', '内蒙古@@锡林郭勒盟@@阿巴嘎旗': '152522',
                            '内蒙古@@锡林郭勒盟@@苏尼特左旗': '152523', '内蒙古@@锡林郭勒盟@@苏尼特右旗': '152524',
                            '内蒙古@@锡林郭勒盟@@东乌珠穆沁旗': '152525', '内蒙古@@锡林郭勒盟@@西乌珠穆沁旗': '152526',
                            '内蒙古@@锡林郭勒盟@@太仆寺旗': '152527', '内蒙古@@锡林郭勒盟@@镶黄旗': '152528', '内蒙古@@锡林郭勒盟@@正镶白旗': '152529',
                            '内蒙古@@锡林郭勒盟@@正蓝旗': '152530', '内蒙古@@锡林郭勒盟@@多伦县': '152531', '内蒙古@@阿拉善盟@@阿拉善左旗': '152921',
                            '内蒙古@@阿拉善盟@@阿拉善右旗': '152922', '内蒙古@@阿拉善盟@@额济纳旗': '152923', '辽宁@@沈阳@@和平区': '210102',
                            '辽宁@@沈阳@@沈河区': '210103', '辽宁@@沈阳@@大东区': '210104', '辽宁@@沈阳@@皇姑区': '210105',
                            '辽宁@@沈阳@@铁西区': '210106', '辽宁@@沈阳@@苏家屯区': '210111', '辽宁@@沈阳@@东陵区': '210112',
                            '辽宁@@沈阳@@沈北新区': '210113', '辽宁@@沈阳@@于洪区': '210114', '辽宁@@沈阳@@辽中区': '210115',
                            '辽宁@@沈阳@@康平县': '210123', '辽宁@@沈阳@@法库县': '210124', '辽宁@@沈阳@@新民': '210181',
                            '辽宁@@大连@@中山区': '210202', '辽宁@@大连@@西岗区': '210203', '辽宁@@大连@@沙河口区': '210204',
                            '辽宁@@大连@@甘井子区': '210211', '辽宁@@大连@@旅顺口区': '210212', '辽宁@@大连@@金州区': '210213',
                            '辽宁@@大连@@普兰店区': '210214', '辽宁@@大连@@长海县': '210224', '辽宁@@大连@@瓦房店': '210281',
                            '辽宁@@大连@@庄河': '210283', '辽宁@@鞍山@@铁东区': '210302', '辽宁@@鞍山@@铁西区': '210303',
                            '辽宁@@鞍山@@立山区': '210304', '辽宁@@鞍山@@千山区': '210311', '辽宁@@鞍山@@台安县': '210321',
                            '辽宁@@鞍山@@岫岩满族自治县': '210323', '辽宁@@鞍山@@海城': '210381', '辽宁@@抚顺@@新抚区': '210402',
                            '辽宁@@抚顺@@东洲区': '210403', '辽宁@@抚顺@@望花区': '210404', '辽宁@@抚顺@@顺城区': '210411',
                            '辽宁@@抚顺@@抚顺县': '210421', '辽宁@@抚顺@@新宾满族自治县': '210422', '辽宁@@抚顺@@清原满族自治县': '210423',
                            '辽宁@@本溪@@平山区': '210502', '辽宁@@本溪@@溪湖区': '210503', '辽宁@@本溪@@明山区': '210504',
                            '辽宁@@本溪@@南芬区': '210505', '辽宁@@本溪@@本溪满族自治县': '210521', '辽宁@@本溪@@桓仁满族自治县': '210522',
                            '辽宁@@丹东@@元宝区': '210602', '辽宁@@丹东@@振兴区': '210603', '辽宁@@丹东@@振安区': '210604',
                            '辽宁@@丹东@@宽甸满族自治县': '210624', '辽宁@@丹东@@东港': '210681', '辽宁@@丹东@@凤城': '210682',
                            '辽宁@@锦州@@古塔区': '210702', '辽宁@@锦州@@凌河区': '210703', '辽宁@@锦州@@太和区': '210711',
                            '辽宁@@锦州@@黑山县': '210726', '辽宁@@锦州@@义县': '210727', '辽宁@@锦州@@凌海': '210781',
                            '辽宁@@锦州@@北镇': '210782', '辽宁@@营口@@站前区': '210802', '辽宁@@营口@@西市区': '210803',
                            '辽宁@@营口@@鲅鱼圈区': '210804', '辽宁@@营口@@老边区': '210811', '辽宁@@营口@@盖州': '210881',
                            '辽宁@@营口@@大石桥': '210882', '辽宁@@阜新@@海州区': '210902', '辽宁@@阜新@@新邱区': '210903',
                            '辽宁@@阜新@@太平区': '210904', '辽宁@@阜新@@清河门区': '210905', '辽宁@@阜新@@细河区': '210911',
                            '辽宁@@阜新@@阜新蒙古族自治县': '210921', '辽宁@@阜新@@彰武县': '210922', '辽宁@@辽阳@@白塔区': '211002',
                            '辽宁@@辽阳@@文圣区': '211003', '辽宁@@辽阳@@宏伟区': '211004', '辽宁@@辽阳@@弓长岭区': '211005',
                            '辽宁@@辽阳@@太子河区': '211011', '辽宁@@辽阳@@辽阳县': '211021', '辽宁@@辽阳@@灯塔': '211081',
                            '辽宁@@盘锦@@双台子区': '211102', '辽宁@@盘锦@@兴隆台区': '211103', '辽宁@@盘锦@@大洼区': '211104',
                            '辽宁@@盘锦@@盘山县': '211122', '辽宁@@铁岭@@银州区': '211202', '辽宁@@铁岭@@清河区': '211204',
                            '辽宁@@铁岭@@铁岭县': '211221', '辽宁@@铁岭@@西丰县': '211223', '辽宁@@铁岭@@昌图县': '211224',
                            '辽宁@@铁岭@@调兵山': '211281', '辽宁@@铁岭@@开原': '211282', '辽宁@@朝阳@@双塔区': '211302',
                            '辽宁@@朝阳@@龙城区': '211303', '辽宁@@朝阳@@朝阳县': '211321', '辽宁@@朝阳@@建平县': '211322',
                            '辽宁@@朝阳@@喀喇沁左翼蒙古族自治县': '211324', '辽宁@@朝阳@@北票': '211381', '辽宁@@朝阳@@凌源': '211382',
                            '辽宁@@葫芦岛@@连山区': '211402', '辽宁@@葫芦岛@@龙港区': '211403', '辽宁@@葫芦岛@@南票区': '211404',
                            '辽宁@@葫芦岛@@绥中县': '211421', '辽宁@@葫芦岛@@建昌县': '211422', '辽宁@@葫芦岛@@兴城': '211481',
                            '吉林@@长春@@南关区': '220102', '吉林@@长春@@宽城区': '220103', '吉林@@长春@@朝阳区': '220104',
                            '吉林@@长春@@二道区': '220105', '吉林@@长春@@绿园区': '220106', '吉林@@长春@@双阳区': '220112',
                            '吉林@@长春@@九台区': '220113', '吉林@@长春@@农安县': '220122', '吉林@@长春@@榆树': '220182',
                            '吉林@@长春@@德惠': '220183', '吉林@@吉林@@昌邑区': '220202', '吉林@@吉林@@龙潭区': '220203',
                            '吉林@@吉林@@船营区': '220204', '吉林@@吉林@@丰满区': '220211', '吉林@@吉林@@永吉县': '220221',
                            '吉林@@吉林@@蛟河': '220281', '吉林@@吉林@@桦甸': '220282', '吉林@@吉林@@舒兰': '220283',
                            '吉林@@吉林@@磐石': '220284', '吉林@@四平@@铁西区': '220302', '吉林@@四平@@铁东区': '220303',
                            '吉林@@四平@@梨树县': '220322', '吉林@@四平@@伊通满族自治县': '220323', '吉林@@四平@@公主岭': '220381',
                            '吉林@@四平@@双辽': '220382', '吉林@@辽源@@龙山区': '220402', '吉林@@辽源@@西安区': '220403',
                            '吉林@@辽源@@东丰县': '220421', '吉林@@辽源@@东辽县': '220422', '吉林@@通化@@东昌区': '220502',
                            '吉林@@通化@@二道江区': '220503', '吉林@@通化@@通化县': '220521', '吉林@@通化@@辉南县': '220523',
                            '吉林@@通化@@柳河县': '220524', '吉林@@通化@@梅河口': '220581', '吉林@@通化@@集安': '220582',
                            '吉林@@白山@@浑江区': '220602', '吉林@@白山@@江源区': '220605', '吉林@@白山@@抚松县': '220621',
                            '吉林@@白山@@靖宇县': '220622', '吉林@@白山@@长白朝鲜族自治县': '220623', '吉林@@白山@@临江': '220681',
                            '吉林@@松原@@宁江区': '220702', '吉林@@松原@@前郭尔罗斯蒙古族自治县': '220721', '吉林@@松原@@长岭县': '220722',
                            '吉林@@松原@@乾安县': '220723', '吉林@@松原@@扶余': '220781', '吉林@@白城@@洮北区': '220802',
                            '吉林@@白城@@镇赉县': '220821', '吉林@@白城@@通榆县': '220822', '吉林@@白城@@洮南': '220881',
                            '吉林@@白城@@大安': '220882', '吉林@@延边朝鲜族自治州@@延吉': '222401', '吉林@@延边朝鲜族自治州@@图们': '222402',
                            '吉林@@延边朝鲜族自治州@@敦化': '222403', '吉林@@延边朝鲜族自治州@@珲春': '222404', '吉林@@延边朝鲜族自治州@@龙井': '222405',
                            '吉林@@延边朝鲜族自治州@@和龙': '222406', '吉林@@延边朝鲜族自治州@@汪清县': '222424', '吉林@@延边朝鲜族自治州@@安图县': '222426',
                            '黑龙江@@哈尔滨@@道里区': '230102', '黑龙江@@哈尔滨@@南岗区': '230103', '黑龙江@@哈尔滨@@道外区': '230104',
                            '黑龙江@@哈尔滨@@平房区': '230108', '黑龙江@@哈尔滨@@松北区': '230109', '黑龙江@@哈尔滨@@香坊区': '230110',
                            '黑龙江@@哈尔滨@@呼兰区': '230111', '黑龙江@@哈尔滨@@阿城区': '230112', '黑龙江@@哈尔滨@@双城区': '230113',
                            '黑龙江@@哈尔滨@@依兰县': '230123', '黑龙江@@哈尔滨@@方正县': '230124', '黑龙江@@哈尔滨@@宾县': '230125',
                            '黑龙江@@哈尔滨@@巴彦县': '230126', '黑龙江@@哈尔滨@@木兰县': '230127', '黑龙江@@哈尔滨@@通河县': '230128',
                            '黑龙江@@哈尔滨@@延寿县': '230129', '黑龙江@@哈尔滨@@尚志': '230183', '黑龙江@@哈尔滨@@五常': '230184',
                            '黑龙江@@齐齐哈尔@@龙沙区': '230202', '黑龙江@@齐齐哈尔@@建华区': '230203', '黑龙江@@齐齐哈尔@@铁锋区': '230204',
                            '黑龙江@@齐齐哈尔@@昂昂溪区': '230205', '黑龙江@@齐齐哈尔@@富拉尔基区': '230206', '黑龙江@@齐齐哈尔@@碾子山区': '230207',
                            '黑龙江@@齐齐哈尔@@梅里斯达斡尔族区': '230208', '黑龙江@@齐齐哈尔@@龙江县': '230221', '黑龙江@@齐齐哈尔@@依安县': '230223',
                            '黑龙江@@齐齐哈尔@@泰来县': '230224', '黑龙江@@齐齐哈尔@@甘南县': '230225', '黑龙江@@齐齐哈尔@@富裕县': '230227',
                            '黑龙江@@齐齐哈尔@@克山县': '230229', '黑龙江@@齐齐哈尔@@克东县': '230230', '黑龙江@@齐齐哈尔@@拜泉县': '230231',
                            '黑龙江@@齐齐哈尔@@讷河': '230281', '黑龙江@@鸡西@@鸡冠区': '230302', '黑龙江@@鸡西@@恒山区': '230303',
                            '黑龙江@@鸡西@@滴道区': '230304', '黑龙江@@鸡西@@梨树区': '230305', '黑龙江@@鸡西@@城子河区': '230306',
                            '黑龙江@@鸡西@@麻山区': '230307', '黑龙江@@鸡西@@鸡东县': '230321', '黑龙江@@鸡西@@虎林': '230381',
                            '黑龙江@@鸡西@@密山': '230382', '黑龙江@@鹤岗@@向阳区': '230402', '黑龙江@@鹤岗@@工农区': '230403',
                            '黑龙江@@鹤岗@@南山区': '230404', '黑龙江@@鹤岗@@兴安区': '230405', '黑龙江@@鹤岗@@东山区': '230406',
                            '黑龙江@@鹤岗@@兴山区': '230407', '黑龙江@@鹤岗@@萝北县': '230421', '黑龙江@@鹤岗@@绥滨县': '230422',
                            '黑龙江@@双鸭山@@尖山区': '230502', '黑龙江@@双鸭山@@岭东区': '230503', '黑龙江@@双鸭山@@四方台区': '230505',
                            '黑龙江@@双鸭山@@宝山区': '230506', '黑龙江@@双鸭山@@集贤县': '230521', '黑龙江@@双鸭山@@友谊县': '230522',
                            '黑龙江@@双鸭山@@宝清县': '230523', '黑龙江@@双鸭山@@饶河县': '230524', '黑龙江@@大庆@@萨尔图区': '230602',
                            '黑龙江@@大庆@@龙凤区': '230603', '黑龙江@@大庆@@让胡路区': '230604', '黑龙江@@大庆@@红岗区': '230605',
                            '黑龙江@@大庆@@大同区': '230606', '黑龙江@@大庆@@肇州县': '230621', '黑龙江@@大庆@@肇源县': '230622',
                            '黑龙江@@大庆@@林甸县': '230623', '黑龙江@@大庆@@杜尔伯特蒙古族自治县': '230624', '黑龙江@@伊春@@伊春区': '230702',
                            '黑龙江@@伊春@@南岔区': '230703', '黑龙江@@伊春@@友好区': '230704', '黑龙江@@伊春@@西林区': '230705',
                            '黑龙江@@伊春@@翠峦区': '230706', '黑龙江@@伊春@@新青区': '230707', '黑龙江@@伊春@@美溪区': '230708',
                            '黑龙江@@伊春@@金山屯区': '230709', '黑龙江@@伊春@@五营区': '230710', '黑龙江@@伊春@@乌马河区': '230711',
                            '黑龙江@@伊春@@汤旺河区': '230712', '黑龙江@@伊春@@带岭区': '230713', '黑龙江@@伊春@@乌伊岭区': '230714',
                            '黑龙江@@伊春@@红星区': '230715', '黑龙江@@伊春@@上甘岭区': '230716', '黑龙江@@伊春@@嘉荫县': '230722',
                            '黑龙江@@伊春@@铁力': '230781', '黑龙江@@佳木斯@@向阳区': '230803', '黑龙江@@佳木斯@@前进区': '230804',
                            '黑龙江@@佳木斯@@东风区': '230805', '黑龙江@@佳木斯@@郊区': '230811', '黑龙江@@佳木斯@@桦南县': '230822',
                            '黑龙江@@佳木斯@@桦川县': '230826', '黑龙江@@佳木斯@@汤原县': '230828', '黑龙江@@佳木斯@@同江': '230881',
                            '黑龙江@@佳木斯@@富锦': '230882', '黑龙江@@佳木斯@@抚远': '230883', '黑龙江@@七台河@@新兴区': '230902',
                            '黑龙江@@七台河@@桃山区': '230903', '黑龙江@@七台河@@茄子河区': '230904', '黑龙江@@七台河@@勃利县': '230921',
                            '黑龙江@@牡丹江@@东安区': '231002', '黑龙江@@牡丹江@@阳明区': '231003', '黑龙江@@牡丹江@@爱民区': '231004',
                            '黑龙江@@牡丹江@@西安区': '231005', '黑龙江@@牡丹江@@林口县': '231025', '黑龙江@@牡丹江@@绥芬河': '231081',
                            '黑龙江@@牡丹江@@海林': '231083', '黑龙江@@牡丹江@@宁安': '231084', '黑龙江@@牡丹江@@穆棱': '231085',
                            '黑龙江@@牡丹江@@东宁': '231086', '黑龙江@@黑河@@爱辉区': '231102', '黑龙江@@黑河@@嫩江县': '231121',
                            '黑龙江@@黑河@@逊克县': '231123', '黑龙江@@黑河@@孙吴县': '231124', '黑龙江@@黑河@@北安': '231181',
                            '黑龙江@@黑河@@五大连池': '231182', '黑龙江@@绥化@@北林区': '231202', '黑龙江@@绥化@@望奎县': '231221',
                            '黑龙江@@绥化@@兰西县': '231222', '黑龙江@@绥化@@青冈县': '231223', '黑龙江@@绥化@@庆安县': '231224',
                            '黑龙江@@绥化@@明水县': '231225', '黑龙江@@绥化@@绥棱县': '231226', '黑龙江@@绥化@@安达': '231281',
                            '黑龙江@@绥化@@肇东': '231282', '黑龙江@@绥化@@海伦': '231283', '黑龙江@@大兴安岭地区@@呼玛县': '232721',
                            '黑龙江@@大兴安岭地区@@塔河县': '232722', '黑龙江@@大兴安岭地区@@漠河县': '232723', '上海@@市辖区@@黄浦区': '310101',
                            '上海@@市辖区@@徐汇区': '310104', '上海@@市辖区@@长宁区': '310105', '上海@@市辖区@@静安区': '310106',
                            '上海@@市辖区@@普陀区': '310107', '上海@@市辖区@@虹口区': '310109', '上海@@市辖区@@杨浦区': '310110',
                            '上海@@市辖区@@闵行区': '310112', '上海@@市辖区@@宝山区': '310113', '上海@@市辖区@@嘉定区': '310114',
                            '上海@@市辖区@@浦东新区': '310115', '上海@@市辖区@@金山区': '310116', '上海@@市辖区@@松江区': '310117',
                            '上海@@市辖区@@青浦区': '310118', '上海@@市辖区@@奉贤区': '310120', '上海@@市辖区@@崇明区': '310151',
                            '江苏@@南京@@玄武区': '320102', '江苏@@南京@@秦淮区': '320104', '江苏@@南京@@建邺区': '320105',
                            '江苏@@南京@@鼓楼区': '320106', '江苏@@南京@@浦口区': '320111', '江苏@@南京@@栖霞区': '320113',
                            '江苏@@南京@@雨花台区': '320114', '江苏@@南京@@江宁区': '320115', '江苏@@南京@@六合区': '320116',
                            '江苏@@南京@@溧水区': '320117', '江苏@@南京@@高淳区': '320118', '江苏@@无锡@@锡山区': '320205',
                            '江苏@@无锡@@惠山区': '320206', '江苏@@无锡@@滨湖区': '320211', '江苏@@无锡@@梁溪区': '320213',
                            '江苏@@无锡@@新吴区': '320214', '江苏@@无锡@@江阴': '320281', '江苏@@无锡@@宜兴': '320282',
                            '江苏@@徐州@@鼓楼区': '320302', '江苏@@徐州@@云龙区': '320303', '江苏@@徐州@@贾汪区': '320305',
                            '江苏@@徐州@@泉山区': '320311', '江苏@@徐州@@铜山区': '320312', '江苏@@徐州@@丰县': '320321',
                            '江苏@@徐州@@沛县': '320322', '江苏@@徐州@@睢宁县': '320324', '江苏@@徐州@@新沂': '320381',
                            '江苏@@徐州@@邳州': '320382', '江苏@@常州@@天宁区': '320402', '江苏@@常州@@钟楼区': '320404',
                            '江苏@@常州@@新北区': '320411', '江苏@@常州@@武进区': '320412', '江苏@@常州@@金坛区': '320413',
                            '江苏@@常州@@溧阳': '320481', '江苏@@苏州@@虎丘区': '320505', '江苏@@苏州@@吴中区': '320506',
                            '江苏@@苏州@@相城区': '320507', '江苏@@苏州@@姑苏区': '320508', '江苏@@苏州@@吴江区': '320509',
                            '江苏@@苏州@@常熟': '320581', '江苏@@苏州@@张家港': '320582', '江苏@@苏州@@昆山': '320583',
                            '江苏@@苏州@@太仓': '320585', '江苏@@南通@@崇川区': '320602', '江苏@@南通@@港闸区': '320611',
                            '江苏@@南通@@通州区': '320612', '江苏@@南通@@海安县': '320621', '江苏@@南通@@如东县': '320623',
                            '江苏@@南通@@启东': '320681', '江苏@@南通@@如皋': '320682', '江苏@@南通@@海门': '320684',
                            '江苏@@连云港@@连云区': '320703', '江苏@@连云港@@海州区': '320706', '江苏@@连云港@@赣榆区??': '320707',
                            '江苏@@连云港@@东海县': '320722', '江苏@@连云港@@灌云县': '320723', '江苏@@连云港@@灌南县': '320724',
                            '江苏@@淮安@@清河区': '320802', '江苏@@淮安@@淮安区': '320803', '江苏@@淮安@@淮阴区': '320804',
                            '江苏@@淮安@@清浦区': '320811', '江苏@@淮安@@洪泽区': '320813', '江苏@@淮安@@涟水县': '320826',
                            '江苏@@淮安@@盱眙县': '320830', '江苏@@淮安@@金湖县': '320831', '江苏@@盐城@@亭湖区': '320902',
                            '江苏@@盐城@@盐都区': '320903', '江苏@@盐城@@大丰区': '320904', '江苏@@盐城@@响水县': '320921',
                            '江苏@@盐城@@滨海县': '320922', '江苏@@盐城@@阜宁县': '320923', '江苏@@盐城@@射阳县': '320924',
                            '江苏@@盐城@@建湖县': '320925', '江苏@@盐城@@东台': '320981', '江苏@@扬州@@广陵区': '321002',
                            '江苏@@扬州@@邗江区': '321003', '江苏@@扬州@@江都区': '321012', '江苏@@扬州@@宝应县': '321023',
                            '江苏@@扬州@@仪征': '321081', '江苏@@扬州@@高邮': '321084', '江苏@@镇江@@京口区': '321102',
                            '江苏@@镇江@@润州区': '321111', '江苏@@镇江@@丹徒区': '321112', '江苏@@镇江@@丹阳': '321181',
                            '江苏@@镇江@@扬中': '321182', '江苏@@镇江@@句容': '321183', '江苏@@泰州@@海陵区': '321202',
                            '江苏@@泰州@@高港区': '321203', '江苏@@泰州@@姜堰区': '321204', '江苏@@泰州@@兴化': '321281',
                            '江苏@@泰州@@靖江': '321282', '江苏@@泰州@@泰兴': '321283', '江苏@@宿迁@@宿城区': '321302',
                            '江苏@@宿迁@@宿豫区': '321311', '江苏@@宿迁@@沭阳县': '321322', '江苏@@宿迁@@泗阳县': '321323',
                            '江苏@@宿迁@@泗洪县': '321324', '浙江@@杭州@@上城区': '330102', '浙江@@杭州@@下城区': '330103',
                            '浙江@@杭州@@江干区': '330104', '浙江@@杭州@@拱墅区': '330105', '浙江@@杭州@@西湖区': '330106',
                            '浙江@@杭州@@滨江区': '330108', '浙江@@杭州@@萧山区': '330109', '浙江@@杭州@@余杭区': '330110',
                            '浙江@@杭州@@富阳区': '330111', '浙江@@杭州@@桐庐县': '330122', '浙江@@杭州@@淳安县': '330127',
                            '浙江@@杭州@@建德': '330182', '浙江@@杭州@@临安': '330185', '浙江@@宁波@@海曙区': '330203',
                            '浙江@@宁波@@江东区': '330204', '浙江@@宁波@@江北区': '330205', '浙江@@宁波@@北仑区': '330206',
                            '浙江@@宁波@@镇海区': '330211', '浙江@@宁波@@鄞州区': '330212', '浙江@@宁波@@象山县': '330225',
                            '浙江@@宁波@@宁海县': '330226', '浙江@@宁波@@余姚': '330281', '浙江@@宁波@@慈溪': '330282',
                            '浙江@@宁波@@奉化': '330283', '浙江@@温州@@鹿城区': '330302', '浙江@@温州@@龙湾区': '330303',
                            '浙江@@温州@@瓯海区': '330304', '浙江@@温州@@洞头区': '330305', '浙江@@温州@@永嘉县': '330324',
                            '浙江@@温州@@平阳县': '330326', '浙江@@温州@@苍南县': '330327', '浙江@@温州@@文成县': '330328',
                            '浙江@@温州@@泰顺县': '330329', '浙江@@温州@@瑞安': '330381', '浙江@@温州@@乐清': '330382',
                            '浙江@@温州@@龙港': '330383', '浙江@@嘉兴@@南湖区': '330402', '浙江@@嘉兴@@秀洲区': '330411',
                            '浙江@@嘉兴@@嘉善县': '330421', '浙江@@嘉兴@@海盐县': '330424', '浙江@@嘉兴@@海宁': '330481',
                            '浙江@@嘉兴@@平湖': '330482', '浙江@@嘉兴@@桐乡': '330483', '浙江@@湖州@@吴兴区': '330502',
                            '浙江@@湖州@@南浔区': '330503', '浙江@@湖州@@德清县': '330521', '浙江@@湖州@@长兴县': '330522',
                            '浙江@@湖州@@安吉县': '330523', '浙江@@绍兴@@越城区': '330602', '浙江@@绍兴@@柯桥区': '330603',
                            '浙江@@绍兴@@上虞区': '330604', '浙江@@绍兴@@新昌县': '330624', '浙江@@绍兴@@诸暨': '330681',
                            '浙江@@绍兴@@嵊州': '330683', '浙江@@金华@@婺城区': '330702', '浙江@@金华@@金东区': '330703',
                            '浙江@@金华@@武义县': '330723', '浙江@@金华@@浦江县': '330726', '浙江@@金华@@磐安县': '330727',
                            '浙江@@金华@@兰溪': '330781', '浙江@@金华@@义乌': '330782', '浙江@@金华@@东阳': '330783',
                            '浙江@@金华@@永康': '330784', '浙江@@衢州@@柯城区': '330802', '浙江@@衢州@@衢江区': '330803',
                            '浙江@@衢州@@常山县': '330822', '浙江@@衢州@@开化县': '330824', '浙江@@衢州@@龙游县': '330825',
                            '浙江@@衢州@@江山': '330881', '浙江@@舟山@@定海区': '330902', '浙江@@舟山@@普陀区': '330903',
                            '浙江@@舟山@@岱山县': '330921', '浙江@@舟山@@嵊泗县': '330922', '浙江@@台州@@椒江区': '331002',
                            '浙江@@台州@@黄岩区': '331003', '浙江@@台州@@路桥区': '331004', '浙江@@台州@@玉环县': '331021',
                            '浙江@@台州@@三门县': '331022', '浙江@@台州@@天台县': '331023', '浙江@@台州@@仙居县': '331024',
                            '浙江@@台州@@温岭': '331081', '浙江@@台州@@临海': '331082', '浙江@@丽水@@莲都区': '331102',
                            '浙江@@丽水@@青田县': '331121', '浙江@@丽水@@缙云县': '331122', '浙江@@丽水@@遂昌县': '331123',
                            '浙江@@丽水@@松阳县': '331124', '浙江@@丽水@@云和县': '331125', '浙江@@丽水@@庆元县': '331126',
                            '浙江@@丽水@@景宁畲族自治县': '331127', '浙江@@丽水@@龙泉': '331181', '安徽@@合肥@@瑶海区': '340102',
                            '安徽@@合肥@@庐阳区': '340103', '安徽@@合肥@@蜀山区': '340104', '安徽@@合肥@@包河区': '340111',
                            '安徽@@合肥@@长丰县': '340121', '安徽@@合肥@@肥东县': '340122', '安徽@@合肥@@肥西县': '340123',
                            '安徽@@合肥@@庐江县': '340124', '安徽@@合肥@@巢湖': '340181', '安徽@@芜湖@@镜湖区': '340202',
                            '安徽@@芜湖@@弋江区': '340203', '安徽@@芜湖@@鸠江区': '340207', '安徽@@芜湖@@三山区': '340208',
                            '安徽@@芜湖@@芜湖县': '340221', '安徽@@芜湖@@繁昌县': '340222', '安徽@@芜湖@@南陵县': '340223',
                            '安徽@@芜湖@@无为县': '340225', '安徽@@蚌埠@@龙子湖区': '340302', '安徽@@蚌埠@@蚌山区': '340303',
                            '安徽@@蚌埠@@禹会区': '340304', '安徽@@蚌埠@@淮上区': '340311', '安徽@@蚌埠@@怀远县': '340321',
                            '安徽@@蚌埠@@五河县': '340322', '安徽@@蚌埠@@固镇县': '340323', '安徽@@淮南@@大通区': '340402',
                            '安徽@@淮南@@田家庵区': '340403', '安徽@@淮南@@谢家集区': '340404', '安徽@@淮南@@八公山区': '340405',
                            '安徽@@淮南@@潘集区': '340406', '安徽@@淮南@@凤台县': '340421', '安徽@@淮南@@寿县': '340422',
                            '安徽@@马鞍山@@花山区': '340503', '安徽@@马鞍山@@雨山区': '340504', '安徽@@马鞍山@@博望区': '340506',
                            '安徽@@马鞍山@@当涂县': '340521', '安徽@@马鞍山@@含山县': '340522', '安徽@@马鞍山@@和县': '340523',
                            '安徽@@淮北@@杜集区': '340602', '安徽@@淮北@@相山区': '340603', '安徽@@淮北@@烈山区': '340604',
                            '安徽@@淮北@@濉溪县': '340621', '安徽@@铜陵@@铜官区': '340705', '安徽@@铜陵@@义安区': '340706',
                            '安徽@@铜陵@@郊区': '340711', '安徽@@铜陵@@枞阳县': '340722', '安徽@@安庆@@迎江区': '340802',
                            '安徽@@安庆@@大观区': '340803', '安徽@@安庆@@宜秀区': '340811', '安徽@@安庆@@怀宁县': '340822',
                            '安徽@@安庆@@潜山县': '340824', '安徽@@安庆@@太湖县': '340825', '安徽@@安庆@@宿松县': '340826',
                            '安徽@@安庆@@望江县': '340827', '安徽@@安庆@@岳西县': '340828', '安徽@@安庆@@桐城': '340881',
                            '安徽@@黄山@@屯溪区': '341002', '安徽@@黄山@@黄山区': '341003', '安徽@@黄山@@徽州区': '341004',
                            '安徽@@黄山@@歙县': '341021', '安徽@@黄山@@休宁县': '341022', '安徽@@黄山@@黟县': '341023',
                            '安徽@@黄山@@祁门县': '341024', '安徽@@滁州@@琅琊区': '341102', '安徽@@滁州@@南谯区': '341103',
                            '安徽@@滁州@@来安县': '341122', '安徽@@滁州@@全椒县': '341124', '安徽@@滁州@@定远县': '341125',
                            '安徽@@滁州@@凤阳县': '341126', '安徽@@滁州@@天长': '341181', '安徽@@滁州@@明光': '341182',
                            '安徽@@阜阳@@颍州区': '341202', '安徽@@阜阳@@颍东区': '341203', '安徽@@阜阳@@颍泉区': '341204',
                            '安徽@@阜阳@@临泉县': '341221', '安徽@@阜阳@@太和县': '341222', '安徽@@阜阳@@阜南县': '341225',
                            '安徽@@阜阳@@颍上县': '341226', '安徽@@阜阳@@界首': '341282', '安徽@@宿州@@埇桥区': '341302',
                            '安徽@@宿州@@砀山县': '341321', '安徽@@宿州@@萧县': '341322', '安徽@@宿州@@灵璧县': '341323',
                            '安徽@@宿州@@泗县': '341324', '安徽@@六安@@金安区': '341502', '安徽@@六安@@裕安区': '341503',
                            '安徽@@六安@@叶集区': '341504', '安徽@@六安@@霍邱县': '341522', '安徽@@六安@@舒城县': '341523',
                            '安徽@@六安@@金寨县': '341524', '安徽@@六安@@霍山县': '341525', '安徽@@亳州@@谯城区': '341602',
                            '安徽@@亳州@@涡阳县': '341621', '安徽@@亳州@@蒙城县': '341622', '安徽@@亳州@@利辛县': '341623',
                            '安徽@@池州@@贵池区': '341702', '安徽@@池州@@东至县': '341721', '安徽@@池州@@石台县': '341722',
                            '安徽@@池州@@青阳县': '341723', '安徽@@宣城@@宣州区': '341802', '安徽@@宣城@@郎溪县': '341821',
                            '安徽@@宣城@@广德县': '341822', '安徽@@宣城@@泾县': '341823', '安徽@@宣城@@绩溪县': '341824',
                            '安徽@@宣城@@旌德县': '341825', '安徽@@宣城@@宁国': '341881', '福建@@福州@@鼓楼区': '350102',
                            '福建@@福州@@台江区': '350103', '福建@@福州@@仓山区': '350104', '福建@@福州@@马尾区': '350105',
                            '福建@@福州@@晋安区': '350111', '福建@@福州@@闽侯县': '350121', '福建@@福州@@连江县': '350122',
                            '福建@@福州@@罗源县': '350123', '福建@@福州@@闽清县': '350124', '福建@@福州@@永泰县': '350125',
                            '福建@@福州@@平潭县': '350128', '福建@@福州@@福清': '350181', '福建@@福州@@长乐': '350182',
                            '福建@@厦门@@思明区': '350203', '福建@@厦门@@海沧区': '350205', '福建@@厦门@@湖里区': '350206',
                            '福建@@厦门@@集美区': '350211', '福建@@厦门@@同安区': '350212', '福建@@厦门@@翔安区': '350213',
                            '福建@@莆田@@城厢区': '350302', '福建@@莆田@@涵江区': '350303', '福建@@莆田@@荔城区': '350304',
                            '福建@@莆田@@秀屿区': '350305', '福建@@莆田@@仙游县': '350322', '福建@@三明@@梅列区': '350402',
                            '福建@@三明@@三元区': '350403', '福建@@三明@@明溪县': '350421', '福建@@三明@@清流县': '350423',
                            '福建@@三明@@宁化县': '350424', '福建@@三明@@大田县': '350425', '福建@@三明@@尤溪县': '350426',
                            '福建@@三明@@沙县': '350427', '福建@@三明@@将乐县': '350428', '福建@@三明@@泰宁县': '350429',
                            '福建@@三明@@建宁县': '350430', '福建@@三明@@永安': '350481', '福建@@泉州@@鲤城区': '350502',
                            '福建@@泉州@@丰泽区': '350503', '福建@@泉州@@洛江区': '350504', '福建@@泉州@@泉港区': '350505',
                            '福建@@泉州@@惠安县': '350521', '福建@@泉州@@安溪县': '350524', '福建@@泉州@@永春县': '350525',
                            '福建@@泉州@@德化县': '350526', '福建@@泉州@@金门县': '350527', '福建@@泉州@@石狮': '350581',
                            '福建@@泉州@@晋江': '350582', '福建@@泉州@@南安': '350583', '福建@@漳州@@芗城区': '350602',
                            '福建@@漳州@@龙文区': '350603', '福建@@漳州@@云霄县': '350622', '福建@@漳州@@漳浦县': '350623',
                            '福建@@漳州@@诏安县': '350624', '福建@@漳州@@长泰县': '350625', '福建@@漳州@@东山县': '350626',
                            '福建@@漳州@@南靖县': '350627', '福建@@漳州@@平和县': '350628', '福建@@漳州@@华安县': '350629',
                            '福建@@漳州@@龙海': '350681', '福建@@南平@@延平区': '350702', '福建@@南平@@建阳区': '350703',
                            '福建@@南平@@顺昌县': '350721', '福建@@南平@@浦城县': '350722', '福建@@南平@@光泽县': '350723',
                            '福建@@南平@@松溪县': '350724', '福建@@南平@@政和县': '350725', '福建@@南平@@邵武': '350781',
                            '福建@@南平@@武夷山': '350782', '福建@@南平@@建瓯': '350783', '福建@@龙岩@@新罗区': '350802',
                            '福建@@龙岩@@永定区': '350803', '福建@@龙岩@@长汀县': '350821', '福建@@龙岩@@上杭县': '350823',
                            '福建@@龙岩@@武平县': '350824', '福建@@龙岩@@连城县': '350825', '福建@@龙岩@@漳平': '350881',
                            '福建@@宁德@@蕉城区': '350902', '福建@@宁德@@霞浦县': '350921', '福建@@宁德@@古田县': '350922',
                            '福建@@宁德@@屏南县': '350923', '福建@@宁德@@寿宁县': '350924', '福建@@宁德@@周宁县': '350925',
                            '福建@@宁德@@柘荣县': '350926', '福建@@宁德@@福安': '350981', '福建@@宁德@@福鼎': '350982',
                            '江西@@南昌@@东湖区': '360102', '江西@@南昌@@西湖区': '360103', '江西@@南昌@@青云谱区': '360104',
                            '江西@@南昌@@湾里区': '360105', '江西@@南昌@@青山湖区': '360111', '江西@@南昌@@新建区': '360112',
                            '江西@@南昌@@南昌县': '360121', '江西@@南昌@@安义县': '360123', '江西@@南昌@@进贤县': '360124',
                            '江西@@景德镇@@昌江区': '360202', '江西@@景德镇@@珠山区': '360203', '江西@@景德镇@@浮梁县': '360222',
                            '江西@@景德镇@@乐平': '360281', '江西@@萍乡@@安源区': '360302', '江西@@萍乡@@湘东区': '360313',
                            '江西@@萍乡@@莲花县': '360321', '江西@@萍乡@@上栗县': '360322', '江西@@萍乡@@芦溪县': '360323',
                            '江西@@九江@@庐山区': '360402', '江西@@九江@@浔阳区': '360403', '江西@@九江@@九江县': '360421',
                            '江西@@九江@@武宁县': '360423', '江西@@九江@@修水县': '360424', '江西@@九江@@永修县': '360425',
                            '江西@@九江@@德安县': '360426', '江西@@九江@@星子县': '360427', '江西@@九江@@都昌县': '360428',
                            '江西@@九江@@湖口县': '360429', '江西@@九江@@彭泽县': '360430', '江西@@九江@@瑞昌': '360481',
                            '江西@@九江@@共青城': '360482', '江西@@新余@@渝水区': '360502', '江西@@新余@@分宜县': '360521',
                            '江西@@鹰潭@@月湖区': '360602', '江西@@鹰潭@@余江县': '360622', '江西@@鹰潭@@贵溪': '360681',
                            '江西@@赣州@@章贡区': '360702', '江西@@赣州@@南康区': '360703', '江西@@赣州@@赣县': '360721',
                            '江西@@赣州@@信丰县': '360722', '江西@@赣州@@大余县': '360723', '江西@@赣州@@上犹县': '360724',
                            '江西@@赣州@@崇义县': '360725', '江西@@赣州@@安远县': '360726', '江西@@赣州@@龙南县': '360727',
                            '江西@@赣州@@定南县': '360728', '江西@@赣州@@全南县': '360729', '江西@@赣州@@宁都县': '360730',
                            '江西@@赣州@@于都县': '360731', '江西@@赣州@@兴国县': '360732', '江西@@赣州@@会昌县': '360733',
                            '江西@@赣州@@寻乌县': '360734', '江西@@赣州@@石城县': '360735', '江西@@赣州@@瑞金': '360781',
                            '江西@@吉安@@吉州区': '360802', '江西@@吉安@@青原区': '360803', '江西@@吉安@@吉安县': '360821',
                            '江西@@吉安@@吉水县': '360822', '江西@@吉安@@峡江县': '360823', '江西@@吉安@@新干县': '360824',
                            '江西@@吉安@@永丰县': '360825', '江西@@吉安@@泰和县': '360826', '江西@@吉安@@遂川县': '360827',
                            '江西@@吉安@@万安县': '360828', '江西@@吉安@@安福县': '360829', '江西@@吉安@@永新县': '360830',
                            '江西@@吉安@@井冈山': '360881', '江西@@宜春@@袁州区': '360902', '江西@@宜春@@奉新县': '360921',
                            '江西@@宜春@@万载县': '360922', '江西@@宜春@@上高县': '360923', '江西@@宜春@@宜丰县': '360924',
                            '江西@@宜春@@靖安县': '360925', '江西@@宜春@@铜鼓县': '360926', '江西@@宜春@@丰城': '360981',
                            '江西@@宜春@@樟树': '360982', '江西@@宜春@@高安': '360983', '江西@@抚州@@临川区': '361002',
                            '江西@@抚州@@南城县': '361021', '江西@@抚州@@黎川县': '361022', '江西@@抚州@@南丰县': '361023',
                            '江西@@抚州@@崇仁县': '361024', '江西@@抚州@@乐安县': '361025', '江西@@抚州@@宜黄县': '361026',
                            '江西@@抚州@@金溪县': '361027', '江西@@抚州@@资溪县': '361028', '江西@@抚州@@东乡县': '361029',
                            '江西@@抚州@@广昌县': '361030', '江西@@上饶@@信州区': '361102', '江西@@上饶@@广丰区': '361103',
                            '江西@@上饶@@上饶县': '361121', '江西@@上饶@@玉山县': '361123', '江西@@上饶@@铅山县': '361124',
                            '江西@@上饶@@横峰县': '361125', '江西@@上饶@@弋阳县': '361126', '江西@@上饶@@余干县': '361127',
                            '江西@@上饶@@鄱阳县': '361128', '江西@@上饶@@万年县': '361129', '江西@@上饶@@婺源县': '361130',
                            '江西@@上饶@@德兴': '361181', '山东@@济南@@历下区': '370102', '山东@@济南@@市中区': '370103',
                            '山东@@济南@@槐荫区': '370104', '山东@@济南@@天桥区': '370105', '山东@@济南@@历城区': '370112',
                            '山东@@济南@@长清区': '370113', '山东@@济南@@平阴县': '370124', '山东@@济南@@济阳县': '370125',
                            '山东@@济南@@商河县': '370126', '山东@@济南@@章丘': '370181', '山东@@青岛@@市南区': '370202',
                            '山东@@青岛@@市北区': '370203', '山东@@青岛@@黄岛区': '370211', '山东@@青岛@@崂山区': '370212',
                            '山东@@青岛@@李沧区': '370213', '山东@@青岛@@城阳区': '370214', '山东@@青岛@@胶州': '370281',
                            '山东@@青岛@@即墨': '370282', '山东@@青岛@@平度': '370283', '山东@@青岛@@莱西': '370285',
                            '山东@@淄博@@淄川区': '370302', '山东@@淄博@@张店区': '370303', '山东@@淄博@@博山区': '370304',
                            '山东@@淄博@@临淄区': '370305', '山东@@淄博@@周村区': '370306', '山东@@淄博@@桓台县': '370321',
                            '山东@@淄博@@高青县': '370322', '山东@@淄博@@沂源县': '370323', '山东@@枣庄@@市中区': '370402',
                            '山东@@枣庄@@薛城区': '370403', '山东@@枣庄@@峄城区': '370404', '山东@@枣庄@@台儿庄区': '370405',
                            '山东@@枣庄@@山亭区': '370406', '山东@@枣庄@@滕州': '370481', '山东@@东营@@东营区': '370502',
                            '山东@@东营@@河口区': '370503', '山东@@东营@@垦利区?': '370505', '山东@@东营@@利津县': '370522',
                            '山东@@东营@@广饶县': '370523', '山东@@烟台@@芝罘区': '370602', '山东@@烟台@@福山区': '370611',
                            '山东@@烟台@@牟平区': '370612', '山东@@烟台@@莱山区': '370613', '山东@@烟台@@长岛县': '370634',
                            '山东@@烟台@@龙口': '370681', '山东@@烟台@@莱阳': '370682', '山东@@烟台@@莱州': '370683',
                            '山东@@烟台@@蓬莱': '370684', '山东@@烟台@@招远': '370685', '山东@@烟台@@栖霞': '370686',
                            '山东@@烟台@@海阳': '370687', '山东@@潍坊@@潍城区': '370702', '山东@@潍坊@@寒亭区': '370703',
                            '山东@@潍坊@@坊子区': '370704', '山东@@潍坊@@奎文区': '370705', '山东@@潍坊@@临朐县': '370724',
                            '山东@@潍坊@@昌乐县': '370725', '山东@@潍坊@@青州': '370781', '山东@@潍坊@@诸城': '370782',
                            '山东@@潍坊@@寿光': '370783', '山东@@潍坊@@安丘': '370784', '山东@@潍坊@@高密': '370785',
                            '山东@@潍坊@@昌邑': '370786', '山东@@济宁@@任城区': '370811', '山东@@济宁@@兖州区': '370812',
                            '山东@@济宁@@微山县': '370826', '山东@@济宁@@鱼台县': '370827', '山东@@济宁@@金乡县': '370828',
                            '山东@@济宁@@嘉祥县': '370829', '山东@@济宁@@汶上县': '370830', '山东@@济宁@@泗水县': '370831',
                            '山东@@济宁@@梁山县': '370832', '山东@@济宁@@曲阜': '370881', '山东@@济宁@@邹城': '370883',
                            '山东@@泰安@@泰山区': '370902', '山东@@泰安@@岱岳区': '370911', '山东@@泰安@@宁阳县': '370921',
                            '山东@@泰安@@东平县': '370923', '山东@@泰安@@新泰': '370982', '山东@@泰安@@肥城': '370983',
                            '山东@@威海@@环翠区': '371002', '山东@@威海@@文登区': '371003', '山东@@威海@@荣成': '371082',
                            '山东@@威海@@乳山': '371083', '山东@@日照@@东港区': '371102', '山东@@日照@@岚山区': '371103',
                            '山东@@日照@@五莲县': '371121', '山东@@日照@@莒县': '371122', '山东@@莱芜@@莱城区': '371202',
                            '山东@@莱芜@@钢城区': '371203', '山东@@临沂@@兰山区': '371302', '山东@@临沂@@罗庄区': '371311',
                            '山东@@临沂@@河东区': '371312', '山东@@临沂@@沂南县': '371321', '山东@@临沂@@郯城县': '371322',
                            '山东@@临沂@@沂水县': '371323', '山东@@临沂@@兰陵县': '371324', '山东@@临沂@@费县': '371325',
                            '山东@@临沂@@平邑县': '371326', '山东@@临沂@@莒南县': '371327', '山东@@临沂@@蒙阴县': '371328',
                            '山东@@临沂@@临沭县': '371329', '山东@@德州@@德城区': '371402', '山东@@德州@@陵城区': '371403',
                            '山东@@德州@@宁津县': '371422', '山东@@德州@@庆云县': '371423', '山东@@德州@@临邑县': '371424',
                            '山东@@德州@@齐河县': '371425', '山东@@德州@@平原县': '371426', '山东@@德州@@夏津县': '371427',
                            '山东@@德州@@武城县': '371428', '山东@@德州@@乐陵': '371481', '山东@@德州@@禹城': '371482',
                            '山东@@聊城@@东昌府区': '371502', '山东@@聊城@@阳谷县': '371521', '山东@@聊城@@莘县': '371522',
                            '山东@@聊城@@茌平县': '371523', '山东@@聊城@@东阿县': '371524', '山东@@聊城@@冠县': '371525',
                            '山东@@聊城@@高唐县': '371526', '山东@@聊城@@临清': '371581', '山东@@滨州@@滨城区': '371602',
                            '山东@@滨州@@沾化区': '371603', '山东@@滨州@@惠民县': '371621', '山东@@滨州@@阳信县': '371622',
                            '山东@@滨州@@无棣县': '371623', '山东@@滨州@@博兴县': '371625', '山东@@滨州@@邹平县': '371626',
                            '山东@@菏泽@@牡丹区': '371702', '山东@@菏泽@@定陶区': '371703', '山东@@菏泽@@曹县': '371721',
                            '山东@@菏泽@@单县': '371722', '山东@@菏泽@@成武县': '371723', '山东@@菏泽@@巨野县': '371724',
                            '山东@@菏泽@@郓城县': '371725', '山东@@菏泽@@鄄城县': '371726', '山东@@菏泽@@东明县': '371728',
                            '河南@@郑州@@中原区': '410102', '河南@@郑州@@二七区': '410103', '河南@@郑州@@管城回族区': '410104',
                            '河南@@郑州@@金水区': '410105', '河南@@郑州@@上街区': '410106', '河南@@郑州@@惠济区': '410108',
                            '河南@@郑州@@中牟县': '410122', '河南@@郑州@@巩义': '410181', '河南@@郑州@@荥阳': '410182',
                            '河南@@郑州@@新密': '410183', '河南@@郑州@@新郑': '410184', '河南@@郑州@@登封': '410185',
                            '河南@@开封@@龙亭区': '410202', '河南@@开封@@顺河回族区': '410203', '河南@@开封@@鼓楼区': '410204',
                            '河南@@开封@@禹王台区': '410205', '河南@@开封@@祥符区': '410212', '河南@@开封@@杞县': '410221',
                            '河南@@开封@@通许县': '410222', '河南@@开封@@尉氏县': '410223', '河南@@开封@@兰考县': '410225',
                            '河南@@洛阳@@老城区': '410302', '河南@@洛阳@@西工区': '410303', '河南@@洛阳@@瀍河回族区': '410304',
                            '河南@@洛阳@@涧西区': '410305', '河南@@洛阳@@吉利区': '410306', '河南@@洛阳@@洛龙区': '410311',
                            '河南@@洛阳@@孟津县': '410322', '河南@@洛阳@@新安县': '410323', '河南@@洛阳@@栾川县': '410324',
                            '河南@@洛阳@@嵩县': '410325', '河南@@洛阳@@汝阳县': '410326', '河南@@洛阳@@宜阳县': '410327',
                            '河南@@洛阳@@洛宁县': '410328', '河南@@洛阳@@伊川县': '410329', '河南@@洛阳@@偃师': '410381',
                            '河南@@平顶山@@新华区': '410402', '河南@@平顶山@@卫东区': '410403', '河南@@平顶山@@石龙区': '410404',
                            '河南@@平顶山@@湛河区': '410411', '河南@@平顶山@@宝丰县': '410421', '河南@@平顶山@@叶县': '410422',
                            '河南@@平顶山@@鲁山县': '410423', '河南@@平顶山@@郏县': '410425', '河南@@平顶山@@舞钢': '410481',
                            '河南@@平顶山@@汝州': '410482', '河南@@安阳@@文峰区': '410502', '河南@@安阳@@北关区': '410503',
                            '河南@@安阳@@殷都区': '410505', '河南@@安阳@@龙安区': '410506', '河南@@安阳@@安阳县': '410522',
                            '河南@@安阳@@汤阴县': '410523', '河南@@安阳@@滑县': '410526', '河南@@安阳@@内黄县': '410527',
                            '河南@@安阳@@林州': '410581', '河南@@鹤壁@@鹤山区': '410602', '河南@@鹤壁@@山城区': '410603',
                            '河南@@鹤壁@@淇滨区': '410611', '河南@@鹤壁@@浚县': '410621', '河南@@鹤壁@@淇县': '410622',
                            '河南@@新乡@@红旗区': '410702', '河南@@新乡@@卫滨区': '410703', '河南@@新乡@@凤泉区': '410704',
                            '河南@@新乡@@牧野区': '410711', '河南@@新乡@@新乡县': '410721', '河南@@新乡@@获嘉县': '410724',
                            '河南@@新乡@@原阳县': '410725', '河南@@新乡@@延津县': '410726', '河南@@新乡@@封丘县': '410727',
                            '河南@@新乡@@长垣县': '410728', '河南@@新乡@@卫辉': '410781', '河南@@新乡@@辉县': '410782',
                            '河南@@焦作@@解放区': '410802', '河南@@焦作@@中站区': '410803', '河南@@焦作@@马村区': '410804',
                            '河南@@焦作@@山阳区': '410811', '河南@@焦作@@修武县': '410821', '河南@@焦作@@博爱县': '410822',
                            '河南@@焦作@@武陟县': '410823', '河南@@焦作@@温县': '410825', '河南@@焦作@@沁阳': '410882',
                            '河南@@焦作@@孟州': '410883', '河南@@濮阳@@华龙区': '410902', '河南@@濮阳@@清丰县': '410922',
                            '河南@@濮阳@@南乐县': '410923', '河南@@濮阳@@范县': '410926', '河南@@濮阳@@台前县': '410927',
                            '河南@@濮阳@@濮阳县': '410928', '河南@@许昌@@魏都区': '411002', '河南@@许昌@@许昌县': '411023',
                            '河南@@许昌@@鄢陵县': '411024', '河南@@许昌@@襄城县': '411025', '河南@@许昌@@禹州': '411081',
                            '河南@@许昌@@长葛': '411082', '河南@@漯河@@源汇区': '411102', '河南@@漯河@@郾城区': '411103',
                            '河南@@漯河@@召陵区': '411104', '河南@@漯河@@舞阳县': '411121', '河南@@漯河@@临颍县': '411122',
                            '河南@@三门峡@@湖滨区': '411202', '河南@@三门峡@@陕州区': '411203', '河南@@三门峡@@渑池县': '411221',
                            '河南@@三门峡@@卢氏县': '411224', '河南@@三门峡@@义马': '411281', '河南@@三门峡@@灵宝': '411282',
                            '河南@@南阳@@宛城区': '411302', '河南@@南阳@@卧龙区': '411303', '河南@@南阳@@南召县': '411321',
                            '河南@@南阳@@方城县': '411322', '河南@@南阳@@西峡县': '411323', '河南@@南阳@@镇平县': '411324',
                            '河南@@南阳@@内乡县': '411325', '河南@@南阳@@淅川县': '411326', '河南@@南阳@@社旗县': '411327',
                            '河南@@南阳@@唐河县': '411328', '河南@@南阳@@新野县': '411329', '河南@@南阳@@桐柏县': '411330',
                            '河南@@南阳@@邓州': '411381', '河南@@商丘@@梁园区': '411402', '河南@@商丘@@睢阳区': '411403',
                            '河南@@商丘@@民权县': '411421', '河南@@商丘@@睢县': '411422', '河南@@商丘@@宁陵县': '411423',
                            '河南@@商丘@@柘城县': '411424', '河南@@商丘@@虞城县': '411425', '河南@@商丘@@夏邑县': '411426',
                            '河南@@商丘@@永城': '411481', '河南@@信阳@@浉河区': '411502', '河南@@信阳@@平桥区': '411503',
                            '河南@@信阳@@罗山县': '411521', '河南@@信阳@@光山县': '411522', '河南@@信阳@@新县': '411523',
                            '河南@@信阳@@商城县': '411524', '河南@@信阳@@固始县': '411525', '河南@@信阳@@潢川县': '411526',
                            '河南@@信阳@@淮滨县': '411527', '河南@@信阳@@息县': '411528', '河南@@周口@@川汇区': '411602',
                            '河南@@周口@@扶沟县': '411621', '河南@@周口@@西华县': '411622', '河南@@周口@@商水县': '411623',
                            '河南@@周口@@沈丘县': '411624', '河南@@周口@@郸城县': '411625', '河南@@周口@@淮阳县': '411626',
                            '河南@@周口@@太康县': '411627', '河南@@周口@@鹿邑县': '411628', '河南@@周口@@项城': '411681',
                            '河南@@驻马店@@驿城区': '411702', '河南@@驻马店@@西平县': '411721', '河南@@驻马店@@上蔡县': '411722',
                            '河南@@驻马店@@平舆县': '411723', '河南@@驻马店@@正阳县': '411724', '河南@@驻马店@@确山县': '411725',
                            '河南@@驻马店@@泌阳县': '411726', '河南@@驻马店@@汝南县': '411727', '河南@@驻马店@@遂平县': '411728',
                            '河南@@驻马店@@新蔡县': '411729', '河南@@省直辖县级行政区划@@济源': '419001', '湖北@@武汉@@江岸区': '420102',
                            '湖北@@武汉@@江汉区': '420103', '湖北@@武汉@@硚口区': '420104', '湖北@@武汉@@汉阳区': '420105',
                            '湖北@@武汉@@武昌区': '420106', '湖北@@武汉@@青山区': '420107', '湖北@@武汉@@洪山区': '420111',
                            '湖北@@武汉@@东西湖区': '420112', '湖北@@武汉@@汉南区': '420113', '湖北@@武汉@@蔡甸区': '420114',
                            '湖北@@武汉@@江夏区': '420115', '湖北@@武汉@@黄陂区': '420116', '湖北@@武汉@@新洲区': '420117',
                            '湖北@@黄石@@黄石港区': '420202', '湖北@@黄石@@西塞山区': '420203', '湖北@@黄石@@下陆区': '420204',
                            '湖北@@黄石@@铁山区': '420205', '湖北@@黄石@@阳新县': '420222', '湖北@@黄石@@大冶': '420281',
                            '湖北@@十堰@@茅箭区': '420302', '湖北@@十堰@@张湾区': '420303', '湖北@@十堰@@郧阳区': '420304',
                            '湖北@@十堰@@郧西县': '420322', '湖北@@十堰@@竹山县': '420323', '湖北@@十堰@@竹溪县': '420324',
                            '湖北@@十堰@@房县': '420325', '湖北@@十堰@@丹江口': '420381', '湖北@@宜昌@@西陵区': '420502',
                            '湖北@@宜昌@@伍家岗区': '420503', '湖北@@宜昌@@点军区': '420504', '湖北@@宜昌@@猇亭区': '420505',
                            '湖北@@宜昌@@夷陵区': '420506', '湖北@@宜昌@@远安县': '420525', '湖北@@宜昌@@兴山县': '420526',
                            '湖北@@宜昌@@秭归县': '420527', '湖北@@宜昌@@长阳土家族自治县': '420528', '湖北@@宜昌@@五峰土家族自治县': '420529',
                            '湖北@@宜昌@@宜都': '420581', '湖北@@宜昌@@当阳': '420582', '湖北@@宜昌@@枝江': '420583',
                            '湖北@@襄阳@@襄城区': '420602', '湖北@@襄阳@@樊城区': '420606', '湖北@@襄阳@@襄州区': '420607',
                            '湖北@@襄阳@@南漳县': '420624', '湖北@@襄阳@@谷城县': '420625', '湖北@@襄阳@@保康县': '420626',
                            '湖北@@襄阳@@老河口': '420682', '湖北@@襄阳@@枣阳': '420683', '湖北@@襄阳@@宜城': '420684',
                            '湖北@@鄂州@@梁子湖区': '420702', '湖北@@鄂州@@华容区': '420703', '湖北@@鄂州@@鄂城区': '420704',
                            '湖北@@荆门@@东宝区': '420802', '湖北@@荆门@@掇刀区': '420804', '湖北@@荆门@@京山县': '420821',
                            '湖北@@荆门@@沙洋县': '420822', '湖北@@荆门@@钟祥': '420881', '湖北@@孝感@@孝南区': '420902',
                            '湖北@@孝感@@孝昌县': '420921', '湖北@@孝感@@大悟县': '420922', '湖北@@孝感@@云梦县': '420923',
                            '湖北@@孝感@@应城': '420981', '湖北@@孝感@@安陆': '420982', '湖北@@孝感@@汉川': '420984',
                            '湖北@@荆州@@沙市区': '421002', '湖北@@荆州@@荆州区': '421003', '湖北@@荆州@@公安县': '421022',
                            '湖北@@荆州@@监利县': '421023', '湖北@@荆州@@江陵县': '421024', '湖北@@荆州@@石首': '421081',
                            '湖北@@荆州@@洪湖': '421083', '湖北@@荆州@@松滋': '421087', '湖北@@黄冈@@黄州区': '421102',
                            '湖北@@黄冈@@团风县': '421121', '湖北@@黄冈@@红安县': '421122', '湖北@@黄冈@@罗田县': '421123',
                            '湖北@@黄冈@@英山县': '421124', '湖北@@黄冈@@浠水县': '421125', '湖北@@黄冈@@蕲春县': '421126',
                            '湖北@@黄冈@@黄梅县': '421127', '湖北@@黄冈@@麻城': '421181', '湖北@@黄冈@@武穴': '421182',
                            '湖北@@咸宁@@咸安区': '421202', '湖北@@咸宁@@嘉鱼县': '421221', '湖北@@咸宁@@通城县': '421222',
                            '湖北@@咸宁@@崇阳县': '421223', '湖北@@咸宁@@通山县': '421224', '湖北@@咸宁@@赤壁': '421281',
                            '湖北@@随州@@曾都区': '421303', '湖北@@随州@@随县': '421321', '湖北@@随州@@广水': '421381',
                            '湖北@@恩施土家族苗族自治州@@恩施': '422801', '湖北@@恩施土家族苗族自治州@@利川': '422802',
                            '湖北@@恩施土家族苗族自治州@@建始县': '422822', '湖北@@恩施土家族苗族自治州@@巴东县': '422823',
                            '湖北@@恩施土家族苗族自治州@@宣恩县': '422825', '湖北@@恩施土家族苗族自治州@@咸丰县': '422826',
                            '湖北@@恩施土家族苗族自治州@@来凤县': '422827', '湖北@@恩施土家族苗族自治州@@鹤峰县': '422828',
                            '湖北@@省直辖县级行政区划@@仙桃': '429004', '湖北@@省直辖县级行政区划@@潜江': '429005', '湖北@@省直辖县级行政区划@@天门': '429006',
                            '湖北@@省直辖县级行政区划@@神农架林区': '429021', '湖南@@长沙@@芙蓉区': '430102', '湖南@@长沙@@天心区': '430103',
                            '湖南@@长沙@@岳麓区': '430104', '湖南@@长沙@@开福区': '430105', '湖南@@长沙@@雨花区': '430111',
                            '湖南@@长沙@@望城区': '430112', '湖南@@长沙@@长沙县': '430121', '湖南@@长沙@@宁乡县': '430124',
                            '湖南@@长沙@@浏阳': '430181', '湖南@@株洲@@荷塘区': '430202', '湖南@@株洲@@芦淞区': '430203',
                            '湖南@@株洲@@石峰区': '430204', '湖南@@株洲@@天元区': '430211', '湖南@@株洲@@株洲县': '430221',
                            '湖南@@株洲@@攸县': '430223', '湖南@@株洲@@茶陵县': '430224', '湖南@@株洲@@炎陵县': '430225',
                            '湖南@@株洲@@醴陵': '430281', '湖南@@湘潭@@雨湖区': '430302', '湖南@@湘潭@@岳塘区': '430304',
                            '湖南@@湘潭@@湘潭县': '430321', '湖南@@湘潭@@湘乡': '430381', '湖南@@湘潭@@韶山': '430382',
                            '湖南@@衡阳@@珠晖区': '430405', '湖南@@衡阳@@雁峰区': '430406', '湖南@@衡阳@@石鼓区': '430407',
                            '湖南@@衡阳@@蒸湘区': '430408', '湖南@@衡阳@@南岳区': '430412', '湖南@@衡阳@@衡阳县': '430421',
                            '湖南@@衡阳@@衡南县': '430422', '湖南@@衡阳@@衡山县': '430423', '湖南@@衡阳@@衡东县': '430424',
                            '湖南@@衡阳@@祁东县': '430426', '湖南@@衡阳@@耒阳': '430481', '湖南@@衡阳@@常宁': '430482',
                            '湖南@@邵阳@@双清区': '430502', '湖南@@邵阳@@大祥区': '430503', '湖南@@邵阳@@北塔区': '430511',
                            '湖南@@邵阳@@邵东县': '430521', '湖南@@邵阳@@新邵县': '430522', '湖南@@邵阳@@邵阳县': '430523',
                            '湖南@@邵阳@@隆回县': '430524', '湖南@@邵阳@@洞口县': '430525', '湖南@@邵阳@@绥宁县': '430527',
                            '湖南@@邵阳@@新宁县': '430528', '湖南@@邵阳@@城步苗族自治县': '430529', '湖南@@邵阳@@武冈': '430581',
                            '湖南@@岳阳@@岳阳楼区': '430602', '湖南@@岳阳@@云溪区': '430603', '湖南@@岳阳@@君山区': '430611',
                            '湖南@@岳阳@@岳阳县': '430621', '湖南@@岳阳@@华容县': '430623', '湖南@@岳阳@@湘阴县': '430624',
                            '湖南@@岳阳@@平江县': '430626', '湖南@@岳阳@@汨罗': '430681', '湖南@@岳阳@@临湘': '430682',
                            '湖南@@常德@@武陵区': '430702', '湖南@@常德@@鼎城区': '430703', '湖南@@常德@@安乡县': '430721',
                            '湖南@@常德@@汉寿县': '430722', '湖南@@常德@@澧县': '430723', '湖南@@常德@@临澧县': '430724',
                            '湖南@@常德@@桃源县': '430725', '湖南@@常德@@石门县': '430726', '湖南@@常德@@津市': '430781',
                            '湖南@@张家界@@永定区': '430802', '湖南@@张家界@@武陵源区': '430811', '湖南@@张家界@@慈利县': '430821',
                            '湖南@@张家界@@桑植县': '430822', '湖南@@益阳@@资阳区': '430902', '湖南@@益阳@@赫山区': '430903',
                            '湖南@@益阳@@南县': '430921', '湖南@@益阳@@桃江县': '430922', '湖南@@益阳@@安化县': '430923',
                            '湖南@@益阳@@沅江': '430981', '湖南@@郴州@@北湖区': '431002', '湖南@@郴州@@苏仙区': '431003',
                            '湖南@@郴州@@桂阳县': '431021', '湖南@@郴州@@宜章县': '431022', '湖南@@郴州@@永兴县': '431023',
                            '湖南@@郴州@@嘉禾县': '431024', '湖南@@郴州@@临武县': '431025', '湖南@@郴州@@汝城县': '431026',
                            '湖南@@郴州@@桂东县': '431027', '湖南@@郴州@@安仁县': '431028', '湖南@@郴州@@资兴': '431081',
                            '湖南@@永州@@零陵区': '431102', '湖南@@永州@@冷水滩区': '431103', '湖南@@永州@@祁阳县': '431121',
                            '湖南@@永州@@东安县': '431122', '湖南@@永州@@双牌县': '431123', '湖南@@永州@@道县': '431124',
                            '湖南@@永州@@江永县': '431125', '湖南@@永州@@宁远县': '431126', '湖南@@永州@@蓝山县': '431127',
                            '湖南@@永州@@新田县': '431128', '湖南@@永州@@江华瑶族自治县': '431129', '湖南@@怀化@@鹤城区': '431202',
                            '湖南@@怀化@@中方县': '431221', '湖南@@怀化@@沅陵县': '431222', '湖南@@怀化@@辰溪县': '431223',
                            '湖南@@怀化@@溆浦县': '431224', '湖南@@怀化@@会同县': '431225', '湖南@@怀化@@麻阳苗族自治县': '431226',
                            '湖南@@怀化@@新晃侗族自治县': '431227', '湖南@@怀化@@芷江侗族自治县': '431228', '湖南@@怀化@@靖州苗族侗族自治县': '431229',
                            '湖南@@怀化@@通道侗族自治县': '431230', '湖南@@怀化@@洪江': '431281', '湖南@@娄底@@娄星区': '431302',
                            '湖南@@娄底@@双峰县': '431321', '湖南@@娄底@@新化县': '431322', '湖南@@娄底@@冷水江': '431381',
                            '湖南@@娄底@@涟源': '431382', '湖南@@湘西土家族苗族自治州@@吉首': '433101', '湖南@@湘西土家族苗族自治州@@泸溪县': '433122',
                            '湖南@@湘西土家族苗族自治州@@凤凰县': '433123', '湖南@@湘西土家族苗族自治州@@花垣县': '433124',
                            '湖南@@湘西土家族苗族自治州@@保靖县': '433125', '湖南@@湘西土家族苗族自治州@@古丈县': '433126',
                            '湖南@@湘西土家族苗族自治州@@永顺县': '433127', '湖南@@湘西土家族苗族自治州@@龙山县': '433130', '广东@@广州@@荔湾区': '440103',
                            '广东@@广州@@越秀区': '440104', '广东@@广州@@海珠区': '440105', '广东@@广州@@天河区': '440106',
                            '广东@@广州@@白云区': '440111', '广东@@广州@@黄埔区': '440112', '广东@@广州@@番禺区': '440113',
                            '广东@@广州@@花都区': '440114', '广东@@广州@@南沙区': '440115', '广东@@广州@@从化区': '440117',
                            '广东@@广州@@增城区': '440118', '广东@@韶关@@武江区': '440203', '广东@@韶关@@浈江区': '440204',
                            '广东@@韶关@@曲江区': '440205', '广东@@韶关@@始兴县': '440222', '广东@@韶关@@仁化县': '440224',
                            '广东@@韶关@@翁源县': '440229', '广东@@韶关@@乳源瑶族自治县': '440232', '广东@@韶关@@新丰县': '440233',
                            '广东@@韶关@@乐昌': '440281', '广东@@韶关@@南雄': '440282', '广东@@深圳@@罗湖区': '440303',
                            '广东@@深圳@@福田区': '440304', '广东@@深圳@@南山区': '440305', '广东@@深圳@@宝安区': '440306',
                            '广东@@深圳@@龙岗区': '440307', '广东@@深圳@@盐田区': '440308', '广东@@珠海@@香洲区': '440402',
                            '广东@@珠海@@斗门区': '440403', '广东@@珠海@@金湾区': '440404', '广东@@汕头@@龙湖区': '440507',
                            '广东@@汕头@@金平区': '440511', '广东@@汕头@@濠江区': '440512', '广东@@汕头@@潮阳区': '440513',
                            '广东@@汕头@@潮南区': '440514', '广东@@汕头@@澄海区': '440515', '广东@@汕头@@南澳县': '440523',
                            '广东@@佛山@@禅城区': '440604', '广东@@佛山@@南海区': '440605', '广东@@佛山@@顺德区': '440606',
                            '广东@@佛山@@三水区': '440607', '广东@@佛山@@高明区': '440608', '广东@@江门@@蓬江区': '440703',
                            '广东@@江门@@江海区': '440704', '广东@@江门@@新会区': '440705', '广东@@江门@@台山': '440781',
                            '广东@@江门@@开平': '440783', '广东@@江门@@鹤山': '440784', '广东@@江门@@恩平': '440785',
                            '广东@@湛江@@赤坎区': '440802', '广东@@湛江@@霞山区': '440803', '广东@@湛江@@坡头区': '440804',
                            '广东@@湛江@@麻章区': '440811', '广东@@湛江@@遂溪县': '440823', '广东@@湛江@@徐闻县': '440825',
                            '广东@@湛江@@廉江': '440881', '广东@@湛江@@雷州': '440882', '广东@@湛江@@吴川': '440883',
                            '广东@@茂名@@茂南区': '440902', '广东@@茂名@@电白区': '440904', '广东@@茂名@@高州': '440981',
                            '广东@@茂名@@化州': '440982', '广东@@茂名@@信宜': '440983', '广东@@肇庆@@端州区': '441202',
                            '广东@@肇庆@@鼎湖区': '441203', '广东@@肇庆@@高要区': '441204', '广东@@肇庆@@广宁县': '441223',
                            '广东@@肇庆@@怀集县': '441224', '广东@@肇庆@@封开县': '441225', '广东@@肇庆@@德庆县': '441226',
                            '广东@@肇庆@@四会': '441284', '广东@@惠州@@惠城区': '441302', '广东@@惠州@@惠阳区': '441303',
                            '广东@@惠州@@博罗县': '441322', '广东@@惠州@@惠东县': '441323', '广东@@惠州@@龙门县': '441324',
                            '广东@@梅州@@梅江区': '441402', '广东@@梅州@@梅县区': '441403', '广东@@梅州@@大埔县': '441422',
                            '广东@@梅州@@丰顺县': '441423', '广东@@梅州@@五华县': '441424', '广东@@梅州@@平远县': '441426',
                            '广东@@梅州@@蕉岭县': '441427', '广东@@梅州@@兴宁': '441481', '广东@@汕尾@@城区': '441502',
                            '广东@@汕尾@@海丰县': '441521', '广东@@汕尾@@陆河县': '441523', '广东@@汕尾@@陆丰': '441581',
                            '广东@@河源@@源城区': '441602', '广东@@河源@@紫金县': '441621', '广东@@河源@@龙川县': '441622',
                            '广东@@河源@@连平县': '441623', '广东@@河源@@和平县': '441624', '广东@@河源@@东源县': '441625',
                            '广东@@阳江@@江城区': '441702', '广东@@阳江@@阳东区': '441704', '广东@@阳江@@阳西县': '441721',
                            '广东@@阳江@@阳春': '441781', '广东@@清远@@清城区': '441802', '广东@@清远@@清新区': '441803',
                            '广东@@清远@@佛冈县': '441821', '广东@@清远@@阳山县': '441823', '广东@@清远@@连山壮族瑶族自治县': '441825',
                            '广东@@清远@@连南瑶族自治县': '441826', '广东@@清远@@英德': '441881', '广东@@清远@@连州': '441882',
                            '广东@@潮州@@湘桥区': '445102', '广东@@潮州@@潮安区': '445103', '广东@@潮州@@饶平县': '445122',
                            '广东@@揭阳@@榕城区': '445202', '广东@@揭阳@@揭东区': '445203', '广东@@揭阳@@揭西县': '445222',
                            '广东@@揭阳@@惠来县': '445224', '广东@@揭阳@@普宁': '445281', '广东@@云浮@@云城区': '445302',
                            '广东@@云浮@@云安区': '445303', '广东@@云浮@@新兴县': '445321', '广东@@云浮@@郁南县': '445322',
                            '广东@@云浮@@罗定': '445381', '广西@@南宁@@兴宁区': '450102', '广西@@南宁@@青秀区': '450103',
                            '广西@@南宁@@江南区': '450105', '广西@@南宁@@西乡塘区': '450107', '广西@@南宁@@良庆区': '450108',
                            '广西@@南宁@@邕宁区': '450109', '广西@@南宁@@武鸣区': '450110', '广西@@南宁@@隆安县': '450123',
                            '广西@@南宁@@马山县': '450124', '广西@@南宁@@上林县': '450125', '广西@@南宁@@宾阳县': '450126',
                            '广西@@南宁@@横县': '450127', '广西@@柳州@@城中区': '450202', '广西@@柳州@@鱼峰区': '450203',
                            '广西@@柳州@@柳南区': '450204', '广西@@柳州@@柳北区': '450205', '广西@@柳州@@柳江县': '450221',
                            '广西@@柳州@@柳城县': '450222', '广西@@柳州@@鹿寨县': '450223', '广西@@柳州@@融安县': '450224',
                            '广西@@柳州@@融水苗族自治县': '450225', '广西@@柳州@@三江侗族自治县': '450226', '广西@@桂林@@秀峰区': '450302',
                            '广西@@桂林@@叠彩区': '450303', '广西@@桂林@@象山区': '450304', '广西@@桂林@@七星区': '450305',
                            '广西@@桂林@@雁山区': '450311', '广西@@桂林@@临桂区': '450312', '广西@@桂林@@阳朔县': '450321',
                            '广西@@桂林@@灵川县': '450323', '广西@@桂林@@全州县': '450324', '广西@@桂林@@兴安县': '450325',
                            '广西@@桂林@@永福县': '450326', '广西@@桂林@@灌阳县': '450327', '广西@@桂林@@龙胜各族自治县': '450328',
                            '广西@@桂林@@资源县': '450329', '广西@@桂林@@平乐县': '450330', '广西@@桂林@@荔浦县': '450331',
                            '广西@@桂林@@恭城瑶族自治县': '450332', '广西@@梧州@@万秀区': '450403', '广西@@梧州@@长洲区': '450405',
                            '广西@@梧州@@龙圩区': '450406', '广西@@梧州@@苍梧县': '450421', '广西@@梧州@@藤县': '450422',
                            '广西@@梧州@@蒙山县': '450423', '广西@@梧州@@岑溪': '450481', '广西@@北海@@海城区': '450502',
                            '广西@@北海@@银海区': '450503', '广西@@北海@@铁山港区': '450512', '广西@@北海@@合浦县': '450521',
                            '广西@@防城港@@港口区': '450602', '广西@@防城港@@防城区': '450603', '广西@@防城港@@上思县': '450621',
                            '广西@@防城港@@东兴': '450681', '广西@@钦州@@钦南区': '450702', '广西@@钦州@@钦北区': '450703',
                            '广西@@钦州@@灵山县': '450721', '广西@@钦州@@浦北县': '450722', '广西@@贵港@@港北区': '450802',
                            '广西@@贵港@@港南区': '450803', '广西@@贵港@@覃塘区': '450804', '广西@@贵港@@平南县': '450821',
                            '广西@@贵港@@桂平': '450881', '广西@@玉林@@玉州区': '450902', '广西@@玉林@@福绵区': '450903',
                            '广西@@玉林@@容县': '450921', '广西@@玉林@@陆川县': '450922', '广西@@玉林@@博白县': '450923',
                            '广西@@玉林@@兴业县': '450924', '广西@@玉林@@北流': '450981', '广西@@百色@@右江区': '451002',
                            '广西@@百色@@田阳县': '451021', '广西@@百色@@田东县': '451022', '广西@@百色@@平果县': '451023',
                            '广西@@百色@@德保县': '451024', '广西@@百色@@那坡县': '451026', '广西@@百色@@凌云县': '451027',
                            '广西@@百色@@乐业县': '451028', '广西@@百色@@田林县': '451029', '广西@@百色@@西林县': '451030',
                            '广西@@百色@@隆林各族自治县': '451031', '广西@@百色@@靖西': '451081', '广西@@贺州@@八步区': '451102',
                            '广西@@贺州@@平桂区': '451103', '广西@@贺州@@昭平县': '451121', '广西@@贺州@@钟山县': '451122',
                            '广西@@贺州@@富川瑶族自治县': '451123', '广西@@河池@@金城江区': '451202', '广西@@河池@@南丹县': '451221',
                            '广西@@河池@@天峨县': '451222', '广西@@河池@@凤山县': '451223', '广西@@河池@@东兰县': '451224',
                            '广西@@河池@@罗城仫佬族自治县': '451225', '广西@@河池@@环江毛南族自治县': '451226', '广西@@河池@@巴马瑶族自治县': '451227',
                            '广西@@河池@@都安瑶族自治县': '451228', '广西@@河池@@大化瑶族自治县': '451229', '广西@@河池@@宜州': '451281',
                            '广西@@来宾@@兴宾区': '451302', '广西@@来宾@@忻城县': '451321', '广西@@来宾@@象州县': '451322',
                            '广西@@来宾@@武宣县': '451323', '广西@@来宾@@金秀瑶族自治县': '451324', '广西@@来宾@@合山': '451381',
                            '广西@@崇左@@江州区': '451402', '广西@@崇左@@扶绥县': '451421', '广西@@崇左@@宁明县': '451422',
                            '广西@@崇左@@龙州县': '451423', '广西@@崇左@@大新县': '451424', '广西@@崇左@@天等县': '451425',
                            '广西@@崇左@@凭祥': '451481', '海南@@海口@@秀英区': '460105', '海南@@海口@@龙华区': '460106',
                            '海南@@海口@@琼山区': '460107', '海南@@海口@@美兰区': '460108', '海南@@三亚@@海棠区': '460202',
                            '海南@@三亚@@吉阳区': '460203', '海南@@三亚@@天涯区': '460204', '海南@@三亚@@崖州区': '460205',
                            '海南@@省直辖县级行政区划@@五指山': '469001', '海南@@省直辖县级行政区划@@琼海': '469002',
                            '海南@@省直辖县级行政区划@@文昌': '469005', '海南@@省直辖县级行政区划@@万宁': '469006', '海南@@省直辖县级行政区划@@东方': '469007',
                            '海南@@省直辖县级行政区划@@定安县': '469021', '海南@@省直辖县级行政区划@@屯昌县': '469022',
                            '海南@@省直辖县级行政区划@@澄迈县': '469023', '海南@@省直辖县级行政区划@@临高县': '469024',
                            '海南@@省直辖县级行政区划@@白沙黎族自治县': '469025', '海南@@省直辖县级行政区划@@昌江黎族自治县': '469026',
                            '海南@@省直辖县级行政区划@@乐东黎族自治县': '469027', '海南@@省直辖县级行政区划@@陵水黎族自治县': '469028',
                            '海南@@省直辖县级行政区划@@保亭黎族苗族自治县': '469029', '海南@@省直辖县级行政区划@@琼中黎族苗族自治县': '469030',
                            '重庆@@市辖区@@万州区': '500101', '重庆@@市辖区@@涪陵区': '500102', '重庆@@市辖区@@渝中区': '500103',
                            '重庆@@市辖区@@大渡口区': '500104', '重庆@@市辖区@@江北区': '500105', '重庆@@市辖区@@沙坪坝区': '500106',
                            '重庆@@市辖区@@九龙坡区': '500107', '重庆@@市辖区@@南岸区': '500108', '重庆@@市辖区@@北碚区': '500109',
                            '重庆@@市辖区@@綦江区': '500110', '重庆@@市辖区@@大足区': '500111', '重庆@@市辖区@@渝北区': '500112',
                            '重庆@@市辖区@@巴南区': '500113', '重庆@@市辖区@@黔江区': '500114', '重庆@@市辖区@@长寿区': '500115',
                            '重庆@@市辖区@@江津区': '500116', '重庆@@市辖区@@合川区': '500117', '重庆@@市辖区@@永川区': '500118',
                            '重庆@@市辖区@@南川区': '500119', '重庆@@市辖区@@璧山区': '500120', '重庆@@市辖区@@铜梁区': '500151',
                            '重庆@@市辖区@@潼南区': '500152', '重庆@@市辖区@@荣昌区': '500153', '重庆@@市辖区@@开州区': '500154',
                            '重庆@@县@@梁平县': '500228', '重庆@@县@@城口县': '500229', '重庆@@县@@丰都县': '500230',
                            '重庆@@县@@垫江县': '500231', '重庆@@县@@武隆县': '500232', '重庆@@县@@忠县': '500233',
                            '重庆@@县@@云阳县': '500235', '重庆@@县@@奉节县': '500236', '重庆@@县@@巫山县': '500237',
                            '重庆@@县@@巫溪县': '500238', '重庆@@县@@石柱土家族自治县': '500240', '重庆@@县@@秀山土家族苗族自治县': '500241',
                            '重庆@@县@@酉阳土家族苗族自治县': '500242', '重庆@@县@@彭水苗族土家族自治县': '500243', '四川@@成都@@锦江区': '510104',
                            '四川@@成都@@青羊区': '510105', '四川@@成都@@金牛区': '510106', '四川@@成都@@武侯区': '510107',
                            '四川@@成都@@成华区': '510108', '四川@@成都@@龙泉驿区': '510112', '四川@@成都@@青白江区': '510113',
                            '四川@@成都@@新都区': '510114', '四川@@成都@@温江区': '510115', '四川@@成都@@双流区': '510116',
                            '四川@@成都@@金堂县': '510121', '四川@@成都@@郫县': '510124', '四川@@成都@@大邑县': '510129',
                            '四川@@成都@@蒲江县': '510131', '四川@@成都@@新津县': '510132', '四川@@成都@@简阳': '510180',
                            '四川@@成都@@都江堰': '510181', '四川@@成都@@彭州': '510182', '四川@@成都@@邛崃': '510183',
                            '四川@@成都@@崇州': '510184', '四川@@自贡@@自流井区': '510302', '四川@@自贡@@贡井区': '510303',
                            '四川@@自贡@@大安区': '510304', '四川@@自贡@@沿滩区': '510311', '四川@@自贡@@荣县': '510321',
                            '四川@@自贡@@富顺县': '510322', '四川@@攀枝花@@东区': '510402', '四川@@攀枝花@@西区': '510403',
                            '四川@@攀枝花@@仁和区': '510411', '四川@@攀枝花@@米易县': '510421', '四川@@攀枝花@@盐边县': '510422',
                            '四川@@泸州@@江阳区': '510502', '四川@@泸州@@纳溪区': '510503', '四川@@泸州@@龙马潭区': '510504',
                            '四川@@泸州@@泸县': '510521', '四川@@泸州@@合江县': '510522', '四川@@泸州@@叙永县': '510524',
                            '四川@@泸州@@古蔺县': '510525', '四川@@德阳@@旌阳区': '510603', '四川@@德阳@@中江县': '510623',
                            '四川@@德阳@@罗江县': '510626', '四川@@德阳@@广汉': '510681', '四川@@德阳@@什邡': '510682',
                            '四川@@德阳@@绵竹': '510683', '四川@@绵阳@@涪城区': '510703', '四川@@绵阳@@游仙区': '510704',
                            '四川@@绵阳@@安州区': '510705', '四川@@绵阳@@三台县': '510722', '四川@@绵阳@@盐亭县': '510723',
                            '四川@@绵阳@@梓潼县': '510725', '四川@@绵阳@@北川羌族自治县': '510726', '四川@@绵阳@@平武县': '510727',
                            '四川@@绵阳@@江油': '510781', '四川@@广元@@利州区': '510802', '四川@@广元@@昭化区': '510811',
                            '四川@@广元@@朝天区': '510812', '四川@@广元@@旺苍县': '510821', '四川@@广元@@青川县': '510822',
                            '四川@@广元@@剑阁县': '510823', '四川@@广元@@苍溪县': '510824', '四川@@遂宁@@船山区': '510903',
                            '四川@@遂宁@@安居区': '510904', '四川@@遂宁@@蓬溪县': '510921', '四川@@遂宁@@射洪县': '510922',
                            '四川@@遂宁@@大英县': '510923', '四川@@内江@@市中区': '511002', '四川@@内江@@东兴区': '511011',
                            '四川@@内江@@威远县': '511024', '四川@@内江@@资中县': '511025', '四川@@内江@@隆昌县': '511028',
                            '四川@@乐山@@市中区': '511102', '四川@@乐山@@沙湾区': '511111', '四川@@乐山@@五通桥区': '511112',
                            '四川@@乐山@@金口河区': '511113', '四川@@乐山@@犍为县': '511123', '四川@@乐山@@井研县': '511124',
                            '四川@@乐山@@夹江县': '511126', '四川@@乐山@@沐川县': '511129', '四川@@乐山@@峨边彝族自治县': '511132',
                            '四川@@乐山@@马边彝族自治县': '511133', '四川@@乐山@@峨眉山': '511181', '四川@@南充@@顺庆区': '511302',
                            '四川@@南充@@高坪区': '511303', '四川@@南充@@嘉陵区': '511304', '四川@@南充@@南部县': '511321',
                            '四川@@南充@@营山县': '511322', '四川@@南充@@蓬安县': '511323', '四川@@南充@@仪陇县': '511324',
                            '四川@@南充@@西充县': '511325', '四川@@南充@@阆中': '511381', '四川@@眉山@@东坡区': '511402',
                            '四川@@眉山@@彭山区': '511403', '四川@@眉山@@仁寿县': '511421', '四川@@眉山@@洪雅县': '511423',
                            '四川@@眉山@@丹棱县': '511424', '四川@@眉山@@青神县': '511425', '四川@@宜宾@@翠屏区': '511502',
                            '四川@@宜宾@@南溪区': '511503', '四川@@宜宾@@宜宾县': '511521', '四川@@宜宾@@江安县': '511523',
                            '四川@@宜宾@@长宁县': '511524', '四川@@宜宾@@高县': '511525', '四川@@宜宾@@珙县': '511526',
                            '四川@@宜宾@@筠连县': '511527', '四川@@宜宾@@兴文县': '511528', '四川@@宜宾@@屏山县': '511529',
                            '四川@@广安@@广安区': '511602', '四川@@广安@@前锋区': '511603', '四川@@广安@@岳池县': '511621',
                            '四川@@广安@@武胜县': '511622', '四川@@广安@@邻水县': '511623', '四川@@广安@@华蓥': '511681',
                            '四川@@达州@@通川区': '511702', '四川@@达州@@达川区': '511703', '四川@@达州@@宣汉县': '511722',
                            '四川@@达州@@开江县': '511723', '四川@@达州@@大竹县': '511724', '四川@@达州@@渠县': '511725',
                            '四川@@达州@@万源': '511781', '四川@@雅安@@雨城区': '511802', '四川@@雅安@@名山区': '511803',
                            '四川@@雅安@@荥经县': '511822', '四川@@雅安@@汉源县': '511823', '四川@@雅安@@石棉县': '511824',
                            '四川@@雅安@@天全县': '511825', '四川@@雅安@@芦山县': '511826', '四川@@雅安@@宝兴县': '511827',
                            '四川@@巴中@@巴州区': '511902', '四川@@巴中@@恩阳区': '511903', '四川@@巴中@@通江县': '511921',
                            '四川@@巴中@@南江县': '511922', '四川@@巴中@@平昌县': '511923', '四川@@资阳@@雁江区': '512002',
                            '四川@@资阳@@安岳县': '512021', '四川@@资阳@@乐至县': '512022', '四川@@阿坝藏族羌族自治州@@马尔康区': '513201',
                            '四川@@阿坝藏族羌族自治州@@汶川县': '513221', '四川@@阿坝藏族羌族自治州@@理县': '513222',
                            '四川@@阿坝藏族羌族自治州@@茂县': '513223', '四川@@阿坝藏族羌族自治州@@松潘县': '513224',
                            '四川@@阿坝藏族羌族自治州@@九寨沟县': '513225', '四川@@阿坝藏族羌族自治州@@金川县': '513226',
                            '四川@@阿坝藏族羌族自治州@@小金县': '513227', '四川@@阿坝藏族羌族自治州@@黑水县': '513228',
                            '四川@@阿坝藏族羌族自治州@@壤塘县': '513230', '四川@@阿坝藏族羌族自治州@@阿坝县': '513231',
                            '四川@@阿坝藏族羌族自治州@@若尔盖县': '513232', '四川@@阿坝藏族羌族自治州@@红原县': '513233',
                            '四川@@甘孜藏族自治州@@康定': '513301', '四川@@甘孜藏族自治州@@泸定县': '513322', '四川@@甘孜藏族自治州@@丹巴县': '513323',
                            '四川@@甘孜藏族自治州@@九龙县': '513324', '四川@@甘孜藏族自治州@@雅江县': '513325', '四川@@甘孜藏族自治州@@道孚县': '513326',
                            '四川@@甘孜藏族自治州@@炉霍县': '513327', '四川@@甘孜藏族自治州@@甘孜县': '513328', '四川@@甘孜藏族自治州@@新龙县': '513329',
                            '四川@@甘孜藏族自治州@@德格县': '513330', '四川@@甘孜藏族自治州@@白玉县': '513331', '四川@@甘孜藏族自治州@@石渠县': '513332',
                            '四川@@甘孜藏族自治州@@色达县': '513333', '四川@@甘孜藏族自治州@@理塘县': '513334', '四川@@甘孜藏族自治州@@巴塘县': '513335',
                            '四川@@甘孜藏族自治州@@乡城县': '513336', '四川@@甘孜藏族自治州@@稻城县': '513337', '四川@@甘孜藏族自治州@@得荣县': '513338',
                            '四川@@凉山彝族自治州@@西昌': '513401', '四川@@凉山彝族自治州@@木里藏族自治县': '513422', '四川@@凉山彝族自治州@@盐源县': '513423',
                            '四川@@凉山彝族自治州@@德昌县': '513424', '四川@@凉山彝族自治州@@会理县': '513425', '四川@@凉山彝族自治州@@会东县': '513426',
                            '四川@@凉山彝族自治州@@宁南县': '513427', '四川@@凉山彝族自治州@@普格县': '513428', '四川@@凉山彝族自治州@@布拖县': '513429',
                            '四川@@凉山彝族自治州@@金阳县': '513430', '四川@@凉山彝族自治州@@昭觉县': '513431', '四川@@凉山彝族自治州@@喜德县': '513432',
                            '四川@@凉山彝族自治州@@冕宁县': '513433', '四川@@凉山彝族自治州@@越西县': '513434', '四川@@凉山彝族自治州@@甘洛县': '513435',
                            '四川@@凉山彝族自治州@@美姑县': '513436', '四川@@凉山彝族自治州@@雷波县': '513437', '贵州@@贵阳@@南明区': '520102',
                            '贵州@@贵阳@@云岩区': '520103', '贵州@@贵阳@@花溪区': '520111', '贵州@@贵阳@@乌当区': '520112',
                            '贵州@@贵阳@@白云区': '520113', '贵州@@贵阳@@观山湖区': '520115', '贵州@@贵阳@@开阳县': '520121',
                            '贵州@@贵阳@@息烽县': '520122', '贵州@@贵阳@@修文县': '520123', '贵州@@贵阳@@清镇': '520181',
                            '贵州@@六盘水@@钟山区': '520201', '贵州@@六盘水@@六枝特区': '520203', '贵州@@六盘水@@水城县': '520221',
                            '贵州@@六盘水@@盘县': '520222', '贵州@@遵义@@红花岗区': '520302', '贵州@@遵义@@汇川区': '520303',
                            '贵州@@遵义@@播州区': '520304', '贵州@@遵义@@桐梓县': '520322', '贵州@@遵义@@绥阳县': '520323',
                            '贵州@@遵义@@正安县': '520324', '贵州@@遵义@@道真仡佬族苗族自治县': '520325', '贵州@@遵义@@务川仡佬族苗族自治县': '520326',
                            '贵州@@遵义@@凤冈县': '520327', '贵州@@遵义@@湄潭县': '520328', '贵州@@遵义@@余庆县': '520329',
                            '贵州@@遵义@@习水县': '520330', '贵州@@遵义@@赤水': '520381', '贵州@@遵义@@仁怀': '520382',
                            '贵州@@安顺@@西秀区': '520402', '贵州@@安顺@@平坝区': '520403', '贵州@@安顺@@普定县': '520422',
                            '贵州@@安顺@@镇宁布依族苗族自治县': '520423', '贵州@@安顺@@关岭布依族苗族自治县': '520424',
                            '贵州@@安顺@@紫云苗族布依族自治县': '520425', '贵州@@毕节@@七星关区': '520502', '贵州@@毕节@@大方县': '520521',
                            '贵州@@毕节@@黔西县': '520522', '贵州@@毕节@@金沙县': '520523', '贵州@@毕节@@织金县': '520524',
                            '贵州@@毕节@@纳雍县': '520525', '贵州@@毕节@@威宁彝族回族苗族自治县': '520526', '贵州@@毕节@@赫章县': '520527',
                            '贵州@@铜仁@@碧江区': '520602', '贵州@@铜仁@@万山区': '520603', '贵州@@铜仁@@江口县': '520621',
                            '贵州@@铜仁@@玉屏侗族自治县': '520622', '贵州@@铜仁@@石阡县': '520623', '贵州@@铜仁@@思南县': '520624',
                            '贵州@@铜仁@@印江土家族苗族自治县': '520625', '贵州@@铜仁@@德江县': '520626', '贵州@@铜仁@@沿河土家族自治县': '520627',
                            '贵州@@铜仁@@松桃苗族自治县': '520628', '贵州@@黔西南布依族苗族自治州@@兴义': '522301',
                            '贵州@@黔西南布依族苗族自治州@@兴仁县': '522322', '贵州@@黔西南布依族苗族自治州@@普安县': '522323',
                            '贵州@@黔西南布依族苗族自治州@@晴隆县': '522324', '贵州@@黔西南布依族苗族自治州@@贞丰县': '522325',
                            '贵州@@黔西南布依族苗族自治州@@望谟县': '522326', '贵州@@黔西南布依族苗族自治州@@册亨县': '522327',
                            '贵州@@黔西南布依族苗族自治州@@安龙县': '522328', '贵州@@黔东南苗族侗族自治州@@凯里': '522601',
                            '贵州@@黔东南苗族侗族自治州@@黄平县': '522622', '贵州@@黔东南苗族侗族自治州@@施秉县': '522623',
                            '贵州@@黔东南苗族侗族自治州@@三穗县': '522624', '贵州@@黔东南苗族侗族自治州@@镇远县': '522625',
                            '贵州@@黔东南苗族侗族自治州@@岑巩县': '522626', '贵州@@黔东南苗族侗族自治州@@天柱县': '522627',
                            '贵州@@黔东南苗族侗族自治州@@锦屏县': '522628', '贵州@@黔东南苗族侗族自治州@@剑河县': '522629',
                            '贵州@@黔东南苗族侗族自治州@@台江县': '522630', '贵州@@黔东南苗族侗族自治州@@黎平县': '522631',
                            '贵州@@黔东南苗族侗族自治州@@榕江县': '522632', '贵州@@黔东南苗族侗族自治州@@从江县': '522633',
                            '贵州@@黔东南苗族侗族自治州@@雷山县': '522634', '贵州@@黔东南苗族侗族自治州@@麻江县': '522635',
                            '贵州@@黔东南苗族侗族自治州@@丹寨县': '522636', '贵州@@黔南布依族苗族自治州@@都匀': '522701',
                            '贵州@@黔南布依族苗族自治州@@福泉': '522702', '贵州@@黔南布依族苗族自治州@@荔波县': '522722',
                            '贵州@@黔南布依族苗族自治州@@贵定县': '522723', '贵州@@黔南布依族苗族自治州@@瓮安县': '522725',
                            '贵州@@黔南布依族苗族自治州@@独山县': '522726', '贵州@@黔南布依族苗族自治州@@平塘县': '522727',
                            '贵州@@黔南布依族苗族自治州@@罗甸县': '522728', '贵州@@黔南布依族苗族自治州@@长顺县': '522729',
                            '贵州@@黔南布依族苗族自治州@@龙里县': '522730', '贵州@@黔南布依族苗族自治州@@惠水县': '522731',
                            '贵州@@黔南布依族苗族自治州@@三都水族自治县': '522732', '云南@@昆明@@五华区': '530102', '云南@@昆明@@盘龙区': '530103',
                            '云南@@昆明@@官渡区': '530111', '云南@@昆明@@西山区': '530112', '云南@@昆明@@东川区': '530113',
                            '云南@@昆明@@呈贡区': '530114', '云南@@昆明@@晋宁县': '530122', '云南@@昆明@@富民县': '530124',
                            '云南@@昆明@@宜良县': '530125', '云南@@昆明@@石林彝族自治县': '530126', '云南@@昆明@@嵩明县': '530127',
                            '云南@@昆明@@禄劝彝族苗族自治县': '530128', '云南@@昆明@@寻甸回族彝族自治县': '530129', '云南@@昆明@@安宁': '530181',
                            '云南@@曲靖@@麒麟区': '530302', '云南@@曲靖@@沾益区': '530303', '云南@@曲靖@@马龙县': '530321',
                            '云南@@曲靖@@陆良县': '530322', '云南@@曲靖@@师宗县': '530323', '云南@@曲靖@@罗平县': '530324',
                            '云南@@曲靖@@富源县': '530325', '云南@@曲靖@@会泽县': '530326', '云南@@曲靖@@宣威': '530381',
                            '云南@@玉溪@@红塔区': '530402', '云南@@玉溪@@江川区': '530403', '云南@@玉溪@@澄江县': '530422',
                            '云南@@玉溪@@通海县': '530423', '云南@@玉溪@@华宁县': '530424', '云南@@玉溪@@易门县': '530425',
                            '云南@@玉溪@@峨山彝族自治县': '530426', '云南@@玉溪@@新平彝族傣族自治县': '530427',
                            '云南@@玉溪@@元江哈尼族彝族傣族自治县': '530428', '云南@@保山@@隆阳区': '530502', '云南@@保山@@施甸县': '530521',
                            '云南@@保山@@龙陵县': '530523', '云南@@保山@@昌宁县': '530524', '云南@@保山@@腾冲': '530581',
                            '云南@@昭通@@昭阳区': '530602', '云南@@昭通@@鲁甸县': '530621', '云南@@昭通@@巧家县': '530622',
                            '云南@@昭通@@盐津县': '530623', '云南@@昭通@@大关县': '530624', '云南@@昭通@@永善县': '530625',
                            '云南@@昭通@@绥江县': '530626', '云南@@昭通@@镇雄县': '530627', '云南@@昭通@@彝良县': '530628',
                            '云南@@昭通@@威信县': '530629', '云南@@昭通@@水富县': '530630', '云南@@丽江@@古城区': '530702',
                            '云南@@丽江@@玉龙纳西族自治县': '530721', '云南@@丽江@@永胜县': '530722', '云南@@丽江@@华坪县': '530723',
                            '云南@@丽江@@宁蒗彝族自治县': '530724', '云南@@普洱@@思茅区': '530802', '云南@@普洱@@宁洱哈尼族彝族自治县': '530821',
                            '云南@@普洱@@墨江哈尼族自治县': '530822', '云南@@普洱@@景东彝族自治县': '530823', '云南@@普洱@@景谷傣族彝族自治县': '530824',
                            '云南@@普洱@@镇沅彝族哈尼族拉祜族自治县': '530825', '云南@@普洱@@江城哈尼族彝族自治县': '530826',
                            '云南@@普洱@@孟连傣族拉祜族佤族自治县': '530827', '云南@@普洱@@澜沧拉祜族自治县': '530828', '云南@@普洱@@西盟佤族自治县': '530829',
                            '云南@@临沧@@临翔区': '530902', '云南@@临沧@@凤庆县': '530921', '云南@@临沧@@云县': '530922',
                            '云南@@临沧@@永德县': '530923', '云南@@临沧@@镇康县': '530924', '云南@@临沧@@双江拉祜族佤族布朗族傣族自治县': '530925',
                            '云南@@临沧@@耿马傣族佤族自治县': '530926', '云南@@临沧@@沧源佤族自治县': '530927', '云南@@楚雄彝族自治州@@楚雄': '532301',
                            '云南@@楚雄彝族自治州@@双柏县': '532322', '云南@@楚雄彝族自治州@@牟定县': '532323', '云南@@楚雄彝族自治州@@南华县': '532324',
                            '云南@@楚雄彝族自治州@@姚安县': '532325', '云南@@楚雄彝族自治州@@大姚县': '532326', '云南@@楚雄彝族自治州@@永仁县': '532327',
                            '云南@@楚雄彝族自治州@@元谋县': '532328', '云南@@楚雄彝族自治州@@武定县': '532329', '云南@@楚雄彝族自治州@@禄丰县': '532331',
                            '云南@@红河哈尼族彝族自治州@@个旧': '532501', '云南@@红河哈尼族彝族自治州@@开远': '532502',
                            '云南@@红河哈尼族彝族自治州@@蒙自': '532503', '云南@@红河哈尼族彝族自治州@@弥勒': '532504',
                            '云南@@红河哈尼族彝族自治州@@屏边苗族自治县': '532523', '云南@@红河哈尼族彝族自治州@@建水县': '532524',
                            '云南@@红河哈尼族彝族自治州@@石屏县': '532525', '云南@@红河哈尼族彝族自治州@@泸西县': '532527',
                            '云南@@红河哈尼族彝族自治州@@元阳县': '532528', '云南@@红河哈尼族彝族自治州@@红河县': '532529',
                            '云南@@红河哈尼族彝族自治州@@金平苗族瑶族傣族自治县': '532530', '云南@@红河哈尼族彝族自治州@@绿春县': '532531',
                            '云南@@红河哈尼族彝族自治州@@河口瑶族自治县': '532532', '云南@@文山壮族苗族自治州@@文山': '532601',
                            '云南@@文山壮族苗族自治州@@砚山县': '532622', '云南@@文山壮族苗族自治州@@西畴县': '532623',
                            '云南@@文山壮族苗族自治州@@麻栗坡县': '532624', '云南@@文山壮族苗族自治州@@马关县': '532625',
                            '云南@@文山壮族苗族自治州@@丘北县': '532626', '云南@@文山壮族苗族自治州@@广南县': '532627',
                            '云南@@文山壮族苗族自治州@@富宁县': '532628', '云南@@西双版纳傣族自治州@@景洪': '532801',
                            '云南@@西双版纳傣族自治州@@勐海县': '532822', '云南@@西双版纳傣族自治州@@勐腊县': '532823', '云南@@大理白族自治州@@大理': '532901',
                            '云南@@大理白族自治州@@漾濞彝族自治县': '532922', '云南@@大理白族自治州@@祥云县': '532923',
                            '云南@@大理白族自治州@@宾川县': '532924', '云南@@大理白族自治州@@弥渡县': '532925',
                            '云南@@大理白族自治州@@南涧彝族自治县': '532926', '云南@@大理白族自治州@@巍山彝族回族自治县': '532927',
                            '云南@@大理白族自治州@@永平县': '532928', '云南@@大理白族自治州@@云龙县': '532929', '云南@@大理白族自治州@@洱源县': '532930',
                            '云南@@大理白族自治州@@剑川县': '532931', '云南@@大理白族自治州@@鹤庆县': '532932', '云南@@德宏傣族景颇族自治州@@瑞丽': '533102',
                            '云南@@德宏傣族景颇族自治州@@芒': '533103', '云南@@德宏傣族景颇族自治州@@梁河县': '533122',
                            '云南@@德宏傣族景颇族自治州@@盈江县': '533123', '云南@@德宏傣族景颇族自治州@@陇川县': '533124',
                            '云南@@怒江傈僳族自治州@@泸水': '533301', '云南@@怒江傈僳族自治州@@福贡县': '533323',
                            '云南@@怒江傈僳族自治州@@贡山独龙族怒族自治县': '533324', '云南@@怒江傈僳族自治州@@兰坪白族普米族自治县': '533325',
                            '云南@@迪庆藏族自治州@@香格里拉': '533401', '云南@@迪庆藏族自治州@@德钦县': '533422',
                            '云南@@迪庆藏族自治州@@维西傈僳族自治县': '533423', '西藏@@拉萨@@城关区': '540102', '西藏@@拉萨@@堆龙德庆区': '540103',
                            '西藏@@拉萨@@林周县': '540121', '西藏@@拉萨@@当雄县': '540122', '西藏@@拉萨@@尼木县': '540123',
                            '西藏@@拉萨@@曲水县': '540124', '西藏@@拉萨@@达孜县': '540126', '西藏@@拉萨@@墨竹工卡县': '540127',
                            '西藏@@日喀则@@桑珠孜区': '540202', '西藏@@日喀则@@南木林县': '540221', '西藏@@日喀则@@江孜县': '540222',
                            '西藏@@日喀则@@定日县': '540223', '西藏@@日喀则@@萨迦县': '540224', '西藏@@日喀则@@拉孜县': '540225',
                            '西藏@@日喀则@@昂仁县': '540226', '西藏@@日喀则@@谢通门县': '540227', '西藏@@日喀则@@白朗县': '540228',
                            '西藏@@日喀则@@仁布县': '540229', '西藏@@日喀则@@康马县': '540230', '西藏@@日喀则@@定结县': '540231',
                            '西藏@@日喀则@@仲巴县': '540232', '西藏@@日喀则@@亚东县': '540233', '西藏@@日喀则@@吉隆县': '540234',
                            '西藏@@日喀则@@聂拉木县': '540235', '西藏@@日喀则@@萨嘎县': '540236', '西藏@@日喀则@@岗巴县': '540237',
                            '西藏@@昌都@@卡若区': '540302', '西藏@@昌都@@江达县': '540321', '西藏@@昌都@@贡觉县': '540322',
                            '西藏@@昌都@@类乌齐县': '540323', '西藏@@昌都@@丁青县': '540324', '西藏@@昌都@@察雅县': '540325',
                            '西藏@@昌都@@八宿县': '540326', '西藏@@昌都@@左贡县': '540327', '西藏@@昌都@@芒康县': '540328',
                            '西藏@@昌都@@洛隆县': '540329', '西藏@@昌都@@边坝县': '540330', '西藏@@林芝@@巴宜区': '540402',
                            '西藏@@林芝@@工布江达县': '540421', '西藏@@林芝@@米林县': '540422', '西藏@@林芝@@墨脱县': '540423',
                            '西藏@@林芝@@波密县': '540424', '西藏@@林芝@@察隅县': '540425', '西藏@@林芝@@朗县': '540426',
                            '西藏@@山南@@乃东区': '540502', '西藏@@山南@@扎囊县': '540521', '西藏@@山南@@贡嘎县': '540522',
                            '西藏@@山南@@桑日县': '540523', '西藏@@山南@@琼结县': '540524', '西藏@@山南@@曲松县': '540525',
                            '西藏@@山南@@措美县': '540526', '西藏@@山南@@洛扎县': '540527', '西藏@@山南@@加查县': '540528',
                            '西藏@@山南@@隆子县': '540529', '西藏@@山南@@错那县': '540530', '西藏@@山南@@浪卡子县': '540531',
                            '西藏@@那曲地区@@那曲县': '542421', '西藏@@那曲地区@@嘉黎县': '542422', '西藏@@那曲地区@@比如县': '542423',
                            '西藏@@那曲地区@@聂荣县': '542424', '西藏@@那曲地区@@安多县': '542425', '西藏@@那曲地区@@申扎县': '542426',
                            '西藏@@那曲地区@@索县': '542427', '西藏@@那曲地区@@班戈县': '542428', '西藏@@那曲地区@@巴青县': '542429',
                            '西藏@@那曲地区@@尼玛县': '542430', '西藏@@那曲地区@@双湖县': '542431', '西藏@@阿里地区@@普兰县': '542521',
                            '西藏@@阿里地区@@札达县': '542522', '西藏@@阿里地区@@噶尔县': '542523', '西藏@@阿里地区@@日土县': '542524',
                            '西藏@@阿里地区@@革吉县': '542525', '西藏@@阿里地区@@改则县': '542526', '西藏@@阿里地区@@措勤县': '542527',
                            '陕西@@西安@@新城区': '610102', '陕西@@西安@@碑林区': '610103', '陕西@@西安@@莲湖区': '610104',
                            '陕西@@西安@@灞桥区': '610111', '陕西@@西安@@未央区': '610112', '陕西@@西安@@雁塔区': '610113',
                            '陕西@@西安@@阎良区': '610114', '陕西@@西安@@临潼区': '610115', '陕西@@西安@@长安区': '610116',
                            '陕西@@西安@@高陵区': '610117', '陕西@@西安@@蓝田县': '610122', '陕西@@西安@@周至县': '610124',
                            '陕西@@西安@@户县': '610125', '陕西@@铜川@@王益区': '610202', '陕西@@铜川@@印台区': '610203',
                            '陕西@@铜川@@耀州区': '610204', '陕西@@铜川@@宜君县': '610222', '陕西@@宝鸡@@渭滨区': '610302',
                            '陕西@@宝鸡@@金台区': '610303', '陕西@@宝鸡@@陈仓区': '610304', '陕西@@宝鸡@@凤翔县': '610322',
                            '陕西@@宝鸡@@岐山县': '610323', '陕西@@宝鸡@@扶风县': '610324', '陕西@@宝鸡@@眉县': '610326',
                            '陕西@@宝鸡@@陇县': '610327', '陕西@@宝鸡@@千阳县': '610328', '陕西@@宝鸡@@麟游县': '610329',
                            '陕西@@宝鸡@@凤县': '610330', '陕西@@宝鸡@@太白县': '610331', '陕西@@咸阳@@秦都区': '610402',
                            '陕西@@咸阳@@杨陵区': '610403', '陕西@@咸阳@@渭城区': '610404', '陕西@@咸阳@@三原县': '610422',
                            '陕西@@咸阳@@泾阳县': '610423', '陕西@@咸阳@@乾县': '610424', '陕西@@咸阳@@礼泉县': '610425',
                            '陕西@@咸阳@@永寿县': '610426', '陕西@@咸阳@@彬县': '610427', '陕西@@咸阳@@长武县': '610428',
                            '陕西@@咸阳@@旬邑县': '610429', '陕西@@咸阳@@淳化县': '610430', '陕西@@咸阳@@武功县': '610431',
                            '陕西@@咸阳@@兴平': '610481', '陕西@@渭南@@临渭区': '610502', '陕西@@渭南@@华州区': '610503',
                            '陕西@@渭南@@潼关县': '610522', '陕西@@渭南@@大荔县': '610523', '陕西@@渭南@@合阳县': '610524',
                            '陕西@@渭南@@澄城县': '610525', '陕西@@渭南@@蒲城县': '610526', '陕西@@渭南@@白水县': '610527',
                            '陕西@@渭南@@富平县': '610528', '陕西@@渭南@@韩城': '610581', '陕西@@渭南@@华阴': '610582',
                            '陕西@@延安@@宝塔区': '610602', '陕西@@延安@@延长县': '610621', '陕西@@延安@@延川县': '610622',
                            '陕西@@延安@@子长县': '610623', '陕西@@延安@@安塞县': '610624', '陕西@@延安@@志丹县': '610625',
                            '陕西@@延安@@吴起县': '610626', '陕西@@延安@@甘泉县': '610627', '陕西@@延安@@富县': '610628',
                            '陕西@@延安@@洛川县': '610629', '陕西@@延安@@宜川县': '610630', '陕西@@延安@@黄龙县': '610631',
                            '陕西@@延安@@黄陵县': '610632', '陕西@@汉中@@汉台区': '610702', '陕西@@汉中@@南郑县': '610721',
                            '陕西@@汉中@@城固县': '610722', '陕西@@汉中@@洋县': '610723', '陕西@@汉中@@西乡县': '610724',
                            '陕西@@汉中@@勉县': '610725', '陕西@@汉中@@宁强县': '610726', '陕西@@汉中@@略阳县': '610727',
                            '陕西@@汉中@@镇巴县': '610728', '陕西@@汉中@@留坝县': '610729', '陕西@@汉中@@佛坪县': '610730',
                            '陕西@@榆林@@榆阳区': '610802', '陕西@@榆林@@横山区': '610803', '陕西@@榆林@@神木县': '610821',
                            '陕西@@榆林@@府谷县': '610822', '陕西@@榆林@@靖边县': '610824', '陕西@@榆林@@定边县': '610825',
                            '陕西@@榆林@@绥德县': '610826', '陕西@@榆林@@米脂县': '610827', '陕西@@榆林@@佳县': '610828',
                            '陕西@@榆林@@吴堡县': '610829', '陕西@@榆林@@清涧县': '610830', '陕西@@榆林@@子洲县': '610831',
                            '陕西@@安康@@汉滨区': '610902', '陕西@@安康@@汉阴县': '610921', '陕西@@安康@@石泉县': '610922',
                            '陕西@@安康@@宁陕县': '610923', '陕西@@安康@@紫阳县': '610924', '陕西@@安康@@岚皋县': '610925',
                            '陕西@@安康@@平利县': '610926', '陕西@@安康@@镇坪县': '610927', '陕西@@安康@@旬阳县': '610928',
                            '陕西@@安康@@白河县': '610929', '陕西@@商洛@@商州区': '611002', '陕西@@商洛@@洛南县': '611021',
                            '陕西@@商洛@@丹凤县': '611022', '陕西@@商洛@@商南县': '611023', '陕西@@商洛@@山阳县': '611024',
                            '陕西@@商洛@@镇安县': '611025', '陕西@@商洛@@柞水县': '611026', '甘肃@@兰州@@城关区': '620102',
                            '甘肃@@兰州@@七里河区': '620103', '甘肃@@兰州@@西固区': '620104', '甘肃@@兰州@@安宁区': '620105',
                            '甘肃@@兰州@@红古区': '620111', '甘肃@@兰州@@永登县': '620121', '甘肃@@兰州@@皋兰县': '620122',
                            '甘肃@@兰州@@榆中县': '620123', '甘肃@@金昌@@金川区': '620302', '甘肃@@金昌@@永昌县': '620321',
                            '甘肃@@白银@@白银区': '620402', '甘肃@@白银@@平川区': '620403', '甘肃@@白银@@靖远县': '620421',
                            '甘肃@@白银@@会宁县': '620422', '甘肃@@白银@@景泰县': '620423', '甘肃@@天水@@秦州区': '620502',
                            '甘肃@@天水@@麦积区': '620503', '甘肃@@天水@@清水县': '620521', '甘肃@@天水@@秦安县': '620522',
                            '甘肃@@天水@@甘谷县': '620523', '甘肃@@天水@@武山县': '620524', '甘肃@@天水@@张家川回族自治县': '620525',
                            '甘肃@@武威@@凉州区': '620602', '甘肃@@武威@@民勤县': '620621', '甘肃@@武威@@古浪县': '620622',
                            '甘肃@@武威@@天祝藏族自治县': '620623', '甘肃@@张掖@@甘州区': '620702', '甘肃@@张掖@@肃南裕固族自治县': '620721',
                            '甘肃@@张掖@@民乐县': '620722', '甘肃@@张掖@@临泽县': '620723', '甘肃@@张掖@@高台县': '620724',
                            '甘肃@@张掖@@山丹县': '620725', '甘肃@@平凉@@崆峒区': '620802', '甘肃@@平凉@@泾川县': '620821',
                            '甘肃@@平凉@@灵台县': '620822', '甘肃@@平凉@@崇信县': '620823', '甘肃@@平凉@@华亭县': '620824',
                            '甘肃@@平凉@@庄浪县': '620825', '甘肃@@平凉@@静宁县': '620826', '甘肃@@酒泉@@肃州区': '620902',
                            '甘肃@@酒泉@@金塔县': '620921', '甘肃@@酒泉@@瓜州县': '620922', '甘肃@@酒泉@@肃北蒙古族自治县': '620923',
                            '甘肃@@酒泉@@阿克塞哈萨克族自治县': '620924', '甘肃@@酒泉@@玉门': '620981', '甘肃@@酒泉@@敦煌': '620982',
                            '甘肃@@庆阳@@西峰区': '621002', '甘肃@@庆阳@@庆城县': '621021', '甘肃@@庆阳@@环县': '621022',
                            '甘肃@@庆阳@@华池县': '621023', '甘肃@@庆阳@@合水县': '621024', '甘肃@@庆阳@@正宁县': '621025',
                            '甘肃@@庆阳@@宁县': '621026', '甘肃@@庆阳@@镇原县': '621027', '甘肃@@定西@@安定区': '621102',
                            '甘肃@@定西@@通渭县': '621121', '甘肃@@定西@@陇西县': '621122', '甘肃@@定西@@渭源县': '621123',
                            '甘肃@@定西@@临洮县': '621124', '甘肃@@定西@@漳县': '621125', '甘肃@@定西@@岷县': '621126',
                            '甘肃@@陇南@@武都区': '621202', '甘肃@@陇南@@成县': '621221', '甘肃@@陇南@@文县': '621222',
                            '甘肃@@陇南@@宕昌县': '621223', '甘肃@@陇南@@康县': '621224', '甘肃@@陇南@@西和县': '621225',
                            '甘肃@@陇南@@礼县': '621226', '甘肃@@陇南@@徽县': '621227', '甘肃@@陇南@@两当县': '621228',
                            '甘肃@@临夏回族自治州@@临夏': '622901', '甘肃@@临夏回族自治州@@临夏县': '622921', '甘肃@@临夏回族自治州@@康乐县': '622922',
                            '甘肃@@临夏回族自治州@@永靖县': '622923', '甘肃@@临夏回族自治州@@广河县': '622924', '甘肃@@临夏回族自治州@@和政县': '622925',
                            '甘肃@@临夏回族自治州@@东乡族自治县': '622926', '甘肃@@临夏回族自治州@@积石山保安族东乡族撒拉族自治县': '622927',
                            '甘肃@@甘南藏族自治州@@合作': '623001', '甘肃@@甘南藏族自治州@@临潭县': '623021', '甘肃@@甘南藏族自治州@@卓尼县': '623022',
                            '甘肃@@甘南藏族自治州@@舟曲县': '623023', '甘肃@@甘南藏族自治州@@迭部县': '623024', '甘肃@@甘南藏族自治州@@玛曲县': '623025',
                            '甘肃@@甘南藏族自治州@@碌曲县': '623026', '甘肃@@甘南藏族自治州@@夏河县': '623027', '青海@@西宁@@城东区': '630102',
                            '青海@@西宁@@城中区': '630103', '青海@@西宁@@城西区': '630104', '青海@@西宁@@城北区': '630105',
                            '青海@@西宁@@大通回族土族自治县': '630121', '青海@@西宁@@湟中县': '630122', '青海@@西宁@@湟源县': '630123',
                            '青海@@海东@@乐都区': '630202', '青海@@海东@@平安区': '630203', '青海@@海东@@民和回族土族自治县': '630222',
                            '青海@@海东@@互助土族自治县': '630223', '青海@@海东@@化隆回族自治县': '630224', '青海@@海东@@循化撒拉族自治县': '630225',
                            '青海@@海北藏族自治州@@门源回族自治县': '632221', '青海@@海北藏族自治州@@祁连县': '632222',
                            '青海@@海北藏族自治州@@海晏县': '632223', '青海@@海北藏族自治州@@刚察县': '632224', '青海@@黄南藏族自治州@@同仁县': '632321',
                            '青海@@黄南藏族自治州@@尖扎县': '632322', '青海@@黄南藏族自治州@@泽库县': '632323',
                            '青海@@黄南藏族自治州@@河南蒙古族自治县': '632324', '青海@@海南藏族自治州@@共和县': '632521',
                            '青海@@海南藏族自治州@@同德县': '632522', '青海@@海南藏族自治州@@贵德县': '632523', '青海@@海南藏族自治州@@兴海县': '632524',
                            '青海@@海南藏族自治州@@贵南县': '632525', '青海@@果洛藏族自治州@@玛沁县': '632621', '青海@@果洛藏族自治州@@班玛县': '632622',
                            '青海@@果洛藏族自治州@@甘德县': '632623', '青海@@果洛藏族自治州@@达日县': '632624', '青海@@果洛藏族自治州@@久治县': '632625',
                            '青海@@果洛藏族自治州@@玛多县': '632626', '青海@@玉树藏族自治州@@玉树': '632701', '青海@@玉树藏族自治州@@杂多县': '632722',
                            '青海@@玉树藏族自治州@@称多县': '632723', '青海@@玉树藏族自治州@@治多县': '632724', '青海@@玉树藏族自治州@@囊谦县': '632725',
                            '青海@@玉树藏族自治州@@曲麻莱县': '632726', '青海@@海西蒙古族藏族自治州@@格尔木': '632801',
                            '青海@@海西蒙古族藏族自治州@@德令哈': '632802', '青海@@海西蒙古族藏族自治州@@乌兰县': '632821',
                            '青海@@海西蒙古族藏族自治州@@都兰县': '632822', '青海@@海西蒙古族藏族自治州@@天峻县': '632823', '宁夏@@银川@@兴庆区': '640104',
                            '宁夏@@银川@@西夏区': '640105', '宁夏@@银川@@金凤区': '640106', '宁夏@@银川@@永宁县': '640121',
                            '宁夏@@银川@@贺兰县': '640122', '宁夏@@银川@@灵武': '640181', '宁夏@@石嘴山@@大武口区': '640202',
                            '宁夏@@石嘴山@@惠农区': '640205', '宁夏@@石嘴山@@平罗县': '640221', '宁夏@@吴忠@@利通区': '640302',
                            '宁夏@@吴忠@@红寺堡区': '640303', '宁夏@@吴忠@@盐池县': '640323', '宁夏@@吴忠@@同心县': '640324',
                            '宁夏@@吴忠@@青铜峡': '640381', '宁夏@@固原@@原州区': '640402', '宁夏@@固原@@西吉县': '640422',
                            '宁夏@@固原@@隆德县': '640423', '宁夏@@固原@@泾源县': '640424', '宁夏@@固原@@彭阳县': '640425',
                            '宁夏@@中卫@@沙坡头区': '640502', '宁夏@@中卫@@中宁县': '640521', '宁夏@@中卫@@海原县': '640522',
                            '新疆@@乌鲁木齐@@天山区': '650102', '新疆@@乌鲁木齐@@沙依巴克区': '650103', '新疆@@乌鲁木齐@@新市区': '650104',
                            '新疆@@乌鲁木齐@@水磨沟区': '650105', '新疆@@乌鲁木齐@@头屯河区': '650106', '新疆@@乌鲁木齐@@达坂城区': '650107',
                            '新疆@@乌鲁木齐@@米东区': '650109', '新疆@@乌鲁木齐@@乌鲁木齐县': '650121', '新疆@@克拉玛依@@独山子区': '650202',
                            '新疆@@克拉玛依@@克拉玛依区': '650203', '新疆@@克拉玛依@@白碱滩区': '650204', '新疆@@克拉玛依@@乌尔禾区': '650205',
                            '新疆@@吐鲁番@@高昌区': '650402', '新疆@@吐鲁番@@鄯善县': '650421', '新疆@@吐鲁番@@托克逊县': '650422',
                            '新疆@@哈密@@伊州区': '650502', '新疆@@哈密@@巴里坤哈萨克自治县': '650521', '新疆@@哈密@@伊吾县': '650522',
                            '新疆@@昌吉回族自治州@@昌吉': '652301', '新疆@@昌吉回族自治州@@阜康': '652302', '新疆@@昌吉回族自治州@@呼图壁县': '652323',
                            '新疆@@昌吉回族自治州@@玛纳斯县': '652324', '新疆@@昌吉回族自治州@@奇台县': '652325', '新疆@@昌吉回族自治州@@吉木萨尔县': '652327',
                            '新疆@@昌吉回族自治州@@木垒哈萨克自治县': '652328', '新疆@@博尔塔拉蒙古自治州@@博乐': '652701',
                            '新疆@@博尔塔拉蒙古自治州@@阿拉山口': '652702', '新疆@@博尔塔拉蒙古自治州@@精河县': '652722',
                            '新疆@@博尔塔拉蒙古自治州@@温泉县': '652723', '新疆@@巴音郭楞蒙古自治州@@库尔勒': '652801',
                            '新疆@@巴音郭楞蒙古自治州@@轮台县': '652822', '新疆@@巴音郭楞蒙古自治州@@尉犁县': '652823',
                            '新疆@@巴音郭楞蒙古自治州@@若羌县': '652824', '新疆@@巴音郭楞蒙古自治州@@且末县': '652825',
                            '新疆@@巴音郭楞蒙古自治州@@焉耆回族自治县': '652826', '新疆@@巴音郭楞蒙古自治州@@和静县': '652827',
                            '新疆@@巴音郭楞蒙古自治州@@和硕县': '652828', '新疆@@巴音郭楞蒙古自治州@@博湖县': '652829', '新疆@@阿克苏地区@@阿克苏': '652901',
                            '新疆@@阿克苏地区@@温宿县': '652922', '新疆@@阿克苏地区@@库车县': '652923', '新疆@@阿克苏地区@@沙雅县': '652924',
                            '新疆@@阿克苏地区@@新和县': '652925', '新疆@@阿克苏地区@@拜城县': '652926', '新疆@@阿克苏地区@@乌什县': '652927',
                            '新疆@@阿克苏地区@@阿瓦提县': '652928', '新疆@@阿克苏地区@@柯坪县': '652929', '新疆@@克孜勒苏柯尔克孜自治州@@阿图什': '653001',
                            '新疆@@克孜勒苏柯尔克孜自治州@@阿克陶县': '653022', '新疆@@克孜勒苏柯尔克孜自治州@@阿合奇县': '653023',
                            '新疆@@克孜勒苏柯尔克孜自治州@@乌恰县': '653024', '新疆@@喀什地区@@喀什': '653101', '新疆@@喀什地区@@疏附县': '653121',
                            '新疆@@喀什地区@@疏勒县': '653122', '新疆@@喀什地区@@英吉沙县': '653123', '新疆@@喀什地区@@泽普县': '653124',
                            '新疆@@喀什地区@@莎车县': '653125', '新疆@@喀什地区@@叶城县': '653126', '新疆@@喀什地区@@麦盖提县': '653127',
                            '新疆@@喀什地区@@岳普湖县': '653128', '新疆@@喀什地区@@伽师县': '653129', '新疆@@喀什地区@@巴楚县': '653130',
                            '新疆@@喀什地区@@塔什库尔干塔吉克自治县': '653131', '新疆@@和田地区@@和田': '653201', '新疆@@和田地区@@和田县': '653221',
                            '新疆@@和田地区@@墨玉县': '653222', '新疆@@和田地区@@皮山县': '653223', '新疆@@和田地区@@洛浦县': '653224',
                            '新疆@@和田地区@@策勒县': '653225', '新疆@@和田地区@@于田县': '653226', '新疆@@和田地区@@民丰县': '653227',
                            '新疆@@伊犁哈萨克自治州@@伊宁': '654002', '新疆@@伊犁哈萨克自治州@@奎屯': '654003', '新疆@@伊犁哈萨克自治州@@霍尔果斯': '654004',
                            '新疆@@伊犁哈萨克自治州@@伊宁县': '654021', '新疆@@伊犁哈萨克自治州@@察布查尔锡伯自治县': '654022',
                            '新疆@@伊犁哈萨克自治州@@霍城县': '654023', '新疆@@伊犁哈萨克自治州@@巩留县': '654024', '新疆@@伊犁哈萨克自治州@@新源县': '654025',
                            '新疆@@伊犁哈萨克自治州@@昭苏县': '654026', '新疆@@伊犁哈萨克自治州@@特克斯县': '654027',
                            '新疆@@伊犁哈萨克自治州@@尼勒克县': '654028', '新疆@@塔城地区@@塔城': '654201', '新疆@@塔城地区@@乌苏': '654202',
                            '新疆@@塔城地区@@额敏县': '654221', '新疆@@塔城地区@@沙湾县': '654223', '新疆@@塔城地区@@托里县': '654224',
                            '新疆@@塔城地区@@裕民县': '654225', '新疆@@塔城地区@@和布克赛尔蒙古自治县': '654226', '新疆@@阿勒泰地区@@阿勒泰': '654301',
                            '新疆@@阿勒泰地区@@布尔津县': '654321', '新疆@@阿勒泰地区@@富蕴县': '654322', '新疆@@阿勒泰地区@@福海县': '654323',
                            '新疆@@阿勒泰地区@@哈巴河县': '654324', '新疆@@阿勒泰地区@@青河县': '654325', '新疆@@阿勒泰地区@@吉木乃县': '654326',
                            '新疆@@自治区直辖县级行政区划@@石河子': '659001', '新疆@@自治区直辖县级行政区划@@阿拉尔': '659002',
                            '新疆@@自治区直辖县级行政区划@@图木舒克': '659003', '新疆@@自治区直辖县级行政区划@@五家渠': '659004',
                            '新疆@@自治区直辖县级行政区划@@北屯': '659005', '新疆@@自治区直辖县级行政区划@@铁门关': '659006',
                            '新疆@@自治区直辖县级行政区划@@双河': '659007', '新疆@@自治区直辖县级行政区划@@可克达拉': '659008'}
    _qualification_to_type = {
        "勘察企业": "QY_ZZ_ZZZD_003",
        "设计企业": "QY_ZZ_ZZZD_004",
        "建筑业企业": "QY_ZZ_ZZZD_001",
        "监理企业": "QY_ZZ_ZZZD_002",
        "设计与施工一体化企业": "QY_ZZ_ZZZD_005",
        "造价咨询企业": "QY_ZZ_ZZZD_007",

    }
    _qualification_to_name = {
        "工程勘察": "B",
        "工程设计": "A",
        "建筑业企业资质": "D",
        "工程监理": "E",
        "工程招标代理": "F",
        "设计与施工一体化": "C",
        "工程招架咨询": "I",
    }
    WAIT_TIME_WHEN_BE_BLOCKED = 20
    ERROR_REGION_ID = "-100"
    ERROR_QY_TYPE = "-101"
    ERROR_APT_CODE = "XXX"
    _DATA_LIMIT = 450
    _ROOT_PATH = Path(sys.argv[0]).parent / 'data'
    _ROOT_PATH.mkdir(exist_ok=True)
    _SEP = "@@"

    # 获取省市code的接口地址
    _region_code_url = urljoin(_base_url, "APi/webApi/asite/region/index")
    # 获取资质名称编码的地址
    _apt_code_url = urljoin(_base_url, "APi/webApi/asite/qualapt/aptData")
    proxy_ip = '127.0.0.1'
    proxy_port = 33210
    _proxies = {
        "http": "http://%s:%s" % (proxy_ip, proxy_port),
        "https": "http://%s:%s" % (proxy_ip, proxy_port),
    }

    def __init__(self) -> None:
        self._df_results = pd.DataFrame()
        self._df_detail_results = pd.DataFrame()
        self._cookie = None
        # self._ips = ProxyHandler().get_latest_kdl_free_ips()

    def _get_selenium_config(self) -> webdriver.ChromeOptions:
        # 浏览器适配对象
        options = webdriver.ChromeOptions()
        # 设置无头
        # options.add_argument("--headless")
        if self._proxies:
            options.add_argument('--proxy-server={}:{}'.format(self.proxy_ip, self.proxy_port))
        # 设置代理，后续完成
        # 屏蔽'CHROME正受到组件控制'的提示
        options.add_experimental_option('excludeSwitches', ['enable-automation'])
        # 屏保保存密码提示框
        prefs = {'credentials_enable_service': False, 'profile.password_manager_enable': False}
        options.add_experimental_option('prefs', prefs)
        # 反爬虫特征处理
        options.add_argument('--disable-blink-features=AutomationControlled')
        return options

    @staticmethod
    def decrypt(data: str, encoding: str = 'utf-8') -> Dict[str, Dict]:
        iv = bytes("0123456789ABCDEF".encode(encoding))
        keys = [bytes(key.encode(encoding)) for key in ("Dt8j9wGw%6HbxfFn", "jo8j9wGw%6HbxfFn")]
        n = binascii.b2a_base64(binascii.unhexlify(data)).decode(encoding)
        for key in keys:
            try:
                aes = AES.new(key=key, mode=AES.MODE_CBC, iv=iv)
                return json.loads(Padding.unpad(aes.decrypt(binascii.a2b_base64(n)), AES.block_size).decode(encoding))
            except (requests.exceptions.ConnectionError, Exception) as _:
                continue

    def _refresh_cookie(self, module: str, query_id: str) -> None:
        self._cookie = None
        options = self._get_selenium_config()
        driver = webdriver.Chrome(options)
        while True:
            try:
                driver.get(urljoin(self._base_url, "data/%s/detail?id=%s" % (module, query_id)))
                break
            except (requests.exceptions.ConnectionError, Exception) as _:
                time_print("爬虫被封，请稍等...")
                time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                continue

        while not driver.execute_script("return window.localStorage.getItem(arguments[0]);", "accessToken"):
            continue
        self._cookie = driver.get_cookies()
        self._access_token = driver.execute_script(
            "return window.localStorage.getItem(arguments[0]);", "accessToken")
        with open(self._ROOT_PATH.parent.parent / 'token.txt', 'w') as f:
            f.write(self._access_token)

    def _get_qy_region_by_province(self, province: str) -> str:
        return self._province_to_region_id.get(province, self.ERROR_REGION_ID)

    def _get_city_qy_regions_by_province(self, province: str) -> Dict[str, str]:
        ans = dict()
        for province_and_city, city_id in self._city_to_region_id.items():
            province_, city = province_and_city.split(self._SEP)
            if province_ == province:
                ans.__setitem__(city, city_id)
        return ans

    def _get_county_qy_regions_by_city(self, province: str, city: str) -> Dict[str, str]:
        ans = dict()
        for province_and_city_and_county, county_id in self._county_to_region_id.items():
            province_, city_, county = province_and_city_and_county.split(self._SEP)
            if province_ == province and city_ == city:
                ans.__setitem__(county, county_id)
        return ans

    def _get_qy_type_by_qualification_type(self, qualification_type: str) -> str:
        return self._qualification_to_type.get(qualification_type, self.ERROR_QY_TYPE)

    def _get_apt_codes_map(self, p: Params = None) -> Dict[str, str]:
        """
        :param p:
        :return: {资质名称: 资质名称编码 + @@ + 资质类型编码, ....}
        """
        params = dict()
        if p and p.qualification_name:
            params.__setitem__("apt_root", self._qualification_to_name.get(p.qualification_name, self.ERROR_APT_CODE))
        while True:
            try:
                response = requests.get(self._apt_code_url, headers=self._headers, params=params, proxies=self._proxies,
                                        verify=False)
                json_data = self.decrypt(response.text)
                return {item['APT_CASENAME'].strip(): item['APT_CODE'].strip() + self._SEP + item['APT_TYPE'] for item
                        in
                        json_data['data']['pageList']}
            except (Exception, requests.exceptions.ConnectionError) as _:
                continue

    def _get_apt_names(self, p: Params) -> List[str]:
        apt_type = self._get_qy_type_by_qualification_type(p.qualification_type)
        if not self._apt_code_map:
            self._apt_code_map = self._get_apt_codes_map(p)
        if apt_type == self.ERROR_QY_TYPE:
            return sorted(self._apt_code_map.keys())
        return sorted(
            set([apt_name for apt_name, apt_code_and_apt_type in self._apt_code_map.items() if
                 apt_code_and_apt_type.split(self._SEP)[1] == apt_type]))

    def _get_apt_cods(self, p: Params) -> List[str]:
        apt_type = self._get_qy_type_by_qualification_type(p.qualification_type)
        if not self._apt_code_map:
            self._apt_code_map = self._get_apt_codes_map(p)
        if apt_type == self.ERROR_QY_TYPE:
            return sorted(set(
                apt_code_and_apt_type.split(self._SEP)[1]
                for apt_name, apt_code_and_apt_type in self._apt_code_map.items()))
        return sorted(
            set([apt_code_and_apt_type.split(self._SEP)[1]
                 for apt_name, apt_code_and_apt_type in self._apt_code_map.items()
                 if apt_code_and_apt_type.split(self._SEP)[1] == apt_type]))

    def _crawl(self, p: Params) -> pd.DataFrame:
        raise NotImplementedError("必须实现_crawl方法")

    def _clean(self, *args, **kwargs) -> pd.DataFrame:
        raise NotImplementedError("必须实现_clean方法")

    def _save(self, p: Params, file_name: str = None, **kwargs) -> None:
        """
        保存表格数据
        :param p:
        :param file_name:
        :param kwargs:
        :return:
        """
        dir_path = self._ROOT_PATH / p.province
        dir_path.mkdir(exist_ok=True)
        if not file_name:
            file_name = "%s.xlsx" % p.city
        df_results = kwargs.pop("df_results", pd.DataFrame())
        df_results.to_excel(str((dir_path / file_name).absolute()), index=False)

    def search(self, social_credit_code: str) -> Dict[str, pd.DataFrame]:
        """
        通过用户的搜索内容来查询表格信息和详情
        :param social_credit_code:
        :return:
        """
        raise NotImplementedError("必须实现search方法")

    def run_detail(self, p: Params) -> None:
        raise NotImplementedError("必须实现run_detail方法")

    def find(self, path: Path, exists: List[str]) -> List[str]:
        for file_or_dir_name in path.iterdir():
            if file_or_dir_name.is_dir():
                self.find(file_or_dir_name, exists)
            else:
                exists.append(str(file_or_dir_name))
        return exists

    def run(self, p: Params) -> None:
        df_results = self._crawl(p)
        df_results = self._clean(df_results)
        self._save(p, df_results=df_results)

    def concurrent_run(self, max_workers: int = 5) -> None:

        def handle_exception(worker: Future) -> None:
            try:
                worker.result()
            except Exception as e:
                time_print(str(e))

        with ThreadPoolExecutor(max_workers=max_workers) as executor:
            tasks = list()
            for province, _ in self._province_to_region_id.items():
                city_region_map = self._get_city_qy_regions_by_province(province)
                for city, _ in city_region_map.items():
                    task = executor.submit(self.run, Params(province=province, city=city))
                    tasks.append(task)
                    task.add_done_callback(handle_exception)
            wait(tasks)

    def batch_run_detail(self):
        exists_file_names = list()
        self.find(self._ROOT_PATH, exists_file_names)
        for file_name in exists_file_names:
            file_name = Path(file_name)
            city = file_name.name[:-len(file_name.suffix)]
            self.run_detail(Params(province=file_name.parent.name, city=city))

    def count(self, dir_path: Path) -> int:
        ans = 0
        for file_or_dir in dir_path.iterdir():
            if file_or_dir.is_dir():
                ans += self.count(file_or_dir)
            else:
                ans += pd.read_excel(str(file_or_dir)).shape[0]
        return ans


class Campany(JZSC):
    """
      建筑建设工程企业处理类
    """

    _table_url = urljoin(JZSC._base_url, "APi/webApi/dataservice/query/comp/list")
    QY_ID = "RY_ID"

    def __init__(self) -> None:
        super().__init__()
        self._apt_code_map = self._get_apt_codes_map()
        with open(self._ROOT_PATH.parent / 'token.txt') as f:
            self._access_token = f.readline().strip()
        self._ROOT_PATH = self._ROOT_PATH / '建设工程企业'
        self._ROOT_PATH.mkdir(exist_ok=True)

    def _clean(self, df_results: pd.DataFrame) -> pd.DataFrame:
        keys = ['RN', 'QY_ID', 'QY_ORG_CODE', 'QY_NAME', 'QY_FR_NAME', 'QY_REGION', 'QY_REGION_NAME', 'OLD_CODE',
                'COLLECT_TIME', 'QY_SRC_TYPE', 'QUALIFICATION_TYPE']
        values = ['序号', self.QY_ID, '统一社会信用代码', '企业名称', '企业法定代表人', '区域代码', '企业注册属地', '原始代码',
                  '注册时间', '数据类型', '资质类别']
        if df_results.empty:
            df_results = pd.DataFrame(columns=keys)
        df_results['COLLECT_TIME'] = df_results['COLLECT_TIME'].apply(
            lambda x: datetime.fromtimestamp(x / 1000).strftime(TIME_FORMAT))
        columns_map = dict(zip(keys, values))
        df_results.drop(columns=['RN'], inplace=True)
        df_results.rename(columns=columns_map, inplace=True)
        df_results.drop_duplicates(inplace=True)
        return df_results[values[1:]]

    def _parse_params(self, p: Params) -> Dict[str, str]:
        params = {"pg": "0", "pgsz": "15", "total": "0"}
        if not p.province and p.city:
            raise ValueError("必须输入province参数后再输入city参数")
        if p.city:
            params.__setitem__("qy_region",
                               self._get_city_qy_regions_by_province(p.province).get(p.city, self.ERROR_REGION_ID))
        if p.qualification_type:
            params.__setitem__("qy_type", self._get_qy_type_by_qualification_type(p.qualification_type))
        if p.qualification_name:
            params.__setitem__(
                "apt_code", self._apt_code_map.get(p.qualification_name, self.ERROR_APT_CODE).split(self._SEP)[0])
        return params

    def _get_total(self, p: Params) -> int:
        params = self._parse_params(p)
        while True:
            try:
                response = requests.get(self._table_url, headers=self._headers, params=params, proxies=self._proxies,
                                        verify=False)
                json_data = self.decrypt(response.text)
                return int(json_data.get('data', dict()).get('total', '0'))
            except (Exception, requests.exceptions.ConnectionError) as _:
                time_print("爬虫被封, 请稍等...")
                time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                continue
        return 0

    def _crawl_single(self, p: Params) -> pd.DataFrame:
        params = self._parse_params(p)
        page = 0
        df_results = pd.DataFrame()
        while True:
            if page > self._DATA_LIMIT // int(params.get('pgsz')):
                time_print("%s条件下的总数超过了%s条" % (p, self._DATA_LIMIT))
                break
            params.__setitem__('pg', str(page))
            try:
                response = requests.get(self._table_url, headers=self._headers, params=params, proxies=self._proxies,
                                        verify=False)
                time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                json_data = self.decrypt(response.text)
            except (Exception, requests.exceptions.ConnectionError) as _:
                # 此时爬虫被封需要等待一段时间继续爬
                time_print("爬虫被封，休息片刻...")
                time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                continue
            df_cur = pd.DataFrame(json_data.get('data', dict()).get('list', list()))
            if p.qualification_type:
                df_cur['QUALIFICATION_TYPE'] = p.qualification_type
            if df_cur.empty:
                break
            df_results = pd.concat([df_results, df_cur])
            page += 1
        return df_results

    def _opt_crawl(self, p: Params) -> pd.DataFrame:
        qualification_types = ("勘察企业", "设计企业", "建筑业企业", "监理企业")
        df_results = pd.DataFrame()
        for qualification_type in qualification_types:
            p.qualification_type = qualification_type
            total = self._get_total(p)
            if total <= self._DATA_LIMIT:
                time_print("无须爬取资质名称：开始爬取%s-%s-%s的数据" % (p.province, p.city, p.qualification_type))
                df_cur = self._crawl_single(p)
                time_print("无须爬取资质名称：成功爬取%s-%s-%s的数据" % (p.province, p.city, p.qualification_type))
            else:
                df_cur = pd.DataFrame()
                apt_names = self._get_apt_names(p)
                for apt_name in apt_names:
                    time_print("开始爬取%s-%s-%s-%s的数据" % (p.province, p.city, p.qualification_type, apt_name))
                    p.__setattr__("qualification_name", apt_name)
                    df_cur = pd.concat([df_cur, self._crawl_single(p)])
                    p.__setattr__("qualification_name", None)
                    time_print("成功爬取%s-%s-%s-%s的数据" % (p.province, p.city, p.qualification_type, apt_name))
            df_results = pd.concat([df_results, df_cur])
        return df_results

    def _crawl(self, p: Params):
        df_results = self._opt_crawl(p)
        self._df_results = df_results

    def get_detail(self, qy_id: str) -> Dict[str, pd.DataFrame]:
        def refresh_headers(query_id: str) -> None:
            self._refresh_cookie('company', query_id)
            headers.__setitem__('accessToken', self._access_token)

        def _crawl_company_detail(query_id: str) -> pd.DataFrame:
            com_detail_url = urljoin(self._base_url, "APi/webApi/dataservice/query/comp/compDetail")
            while True:
                try:
                    response = requests.get(
                        com_detail_url,
                        headers=headers,
                        params={'compId': query_id},
                        proxies=self._proxies,
                        cookies=getattr(self, 'cookies', cookies))
                    time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                    json_data = self.decrypt(response.text)
                    if json_data.get('code') == requests.codes.request_timeout and json_data.get(
                            'message') == 'token失效':
                        refresh_headers(query_id)
                        continue
                    df_cur_company = pd.DataFrame([json_data.get('data', dict()).get('compMap')])
                    df_cur_company['QY_ID'] = query_id
                    return df_cur_company
                except (requests.exceptions.ConnectionError, Exception) as _:
                    time_print("爬虫被封，请稍等...")
                    time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                    continue

        def _crawl_cert_detail(query_id: str, apt_cert_nos: List[str]) -> pd.DataFrame:
            cert_url = urljoin(self._base_url, "APi/webApi/dataservice/query/comp/caCertDetail")
            params = {'qyId': query_id}
            df_cert_nos = pd.DataFrame()
            for cert_no in apt_cert_nos:
                params.__setitem__('certno', cert_no)
                while True:
                    try:
                        response = requests.get(
                            cert_url,
                            headers=headers,
                            params=params,
                            proxies=self._proxies,
                            cookies=getattr(self, 'cookies', cookies))
                        time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                        json_data = self.decrypt(response.text)
                    except (requests.exceptions.ConnectionError, Exception) as _:
                        time_print("爬虫被封，请稍等...")
                        time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                        continue
                    if json_data.get('code') == requests.codes.request_timeout and json_data.get(
                            'message') == 'token失效':
                        refresh_headers(query_id)
                        continue
                    df_single_cert_no = pd.DataFrame([json_data.get('data', dict()).get('rawCaDetail', dict())])
                    df_cert_nos = pd.concat([df_cert_nos, df_single_cert_no])
                    break
            return df_cert_nos

        def _crawl_qualification(query_id: str) -> pd.DataFrame:
            page = 0
            params = {'qyId': query_id, "pg": str(page), "pgsz": "15"}
            qualification_list_url = urljoin(self._base_url, "APi/webApi/dataservice/query/comp/caDetailList")
            df_cur_company = pd.DataFrame()
            while True:
                if page > self._DATA_LIMIT // int(params.get('pgsz')):
                    time_print("%s条件下资质的总数超过了%s条" % (query_id, self._DATA_LIMIT))
                    break
                params.__setitem__('pg', str(page))
                try:
                    # 查询证书列表
                    response = requests.get(
                        qualification_list_url,
                        headers=headers,
                        params=params,
                        proxies=self._proxies,
                        cookies=getattr(self, 'cookies', cookies))
                    time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                    json_data = self.decrypt(response.text)
                except (requests.exceptions.ConnectionError, Exception) as _:
                    time_print("爬虫被封，请稍等...")
                    time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                    continue
                if json_data.get('code') == requests.codes.request_timeout and json_data.get('message') == 'token失效':
                    refresh_headers(query_id)
                    continue
                page += 1
                df_cur_page_company = pd.DataFrame(json_data.get('data', dict()).get('pageList').get('list'))
                if df_cur_page_company.empty:
                    break
                # 查询证书详情
                apt_cert_nos = df_cur_page_company['APT_CERTNO'].unique().tolist()
                df_cert_nos = _crawl_cert_detail(query_id, apt_cert_nos)
                df_cur_page_company['QY_ID'] = query_id
                common_columns = set(df_cur_page_company.columns).intersection(df_cert_nos.columns)
                on = 'APT_CERTNO'
                df_cur_page_company = pd.merge(
                    df_cur_page_company,
                    df_cert_nos.drop(columns=common_columns.difference([on])),
                    'left',
                    on,
                )
                df_cur_company = pd.concat([df_cur_company, df_cur_page_company])
            return df_cur_company

        headers = {**self._headers, 'accessToken': self._access_token, 'v': '231012'}
        cookies = {
            'Hm_lvt_b1b4b9ea61b6f1627192160766a9c55c': '1698365699,1698506447,1699107222,1699279591',
            'Hm_lpvt_b1b4b9ea61b6f1627192160766a9c55c': '1699399352',
        }
        return {
            'company_detail': _crawl_company_detail(qy_id),
            'qualification': _crawl_qualification(qy_id)
        }

    def run_detail(self, p: Params) -> None:
        """爬取详细信息"""
        file_path = self._ROOT_PATH / p.province / ("%s.xlsx" % p.city)
        df_raw = pd.read_excel(file_path, dtype=str)
        try:
            detail_ids = df_raw[self.QY_ID].unique().tolist()
        except KeyError as _:
            detail_ids = df_raw['查询ID'].unique().tolist()
        df_company = pd.DataFrame()
        df_qualification = pd.DataFrame()
        for detail_id in detail_ids:
            time_print("开始爬%s-%s-%s数据" % (p.province, p.city, detail_id))
            detail_result = self.get_detail(qy_id=detail_id)
            # 企业详情
            df_cur_company = detail_result.get('company_detail')
            df_company = pd.concat([df_cur_company, df_company])
            # 企业资质和证书详情
            df_cur_qualification = detail_result.get('qualification')
            df_qualification = pd.concat([df_cur_qualification, df_qualification])
            time_print("成功爬%s-%s-%s数据" % (p.province, p.city, detail_id))
        # 持久化到磁盘
        with pd.ExcelWriter(file_path) as writer:
            df_raw.to_excel(writer, sheet_name="企业数据", index=False)
            df_company.to_excel(writer, sheet_name='公司详情', index=False)
            df_qualification.to_excel(writer, sheet_name='企业资质资格', index=False)

    def run(self, p: Params) -> None:
        time_print("开始爬取“%s-%s”的企业数据" % (p.province, p.city))
        df_results = self._opt_crawl(p)
        df_results = self._clean(df_results=df_results)
        self._save(p, df_results=df_results)
        time_print("成功爬取“%s-%s”的企业数据" % (p.province, p.city))

    def search(self, social_credit_code_or_company: str) -> Dict[str, pd.DataFrame]:
        params = {
            'complexname': social_credit_code_or_company,
            'pg': '0',
            'pgsz': '15',
            'total': '0',
        }
        while True:
            try:
                response = requests.get(
                    urljoin(self._base_url, "APi/webApi/dataservice/query/comp/list"),
                    params=params,
                    headers=self._headers,
                )
                json_data = self.decrypt(response.text)
                df_enterprise_data = pd.DataFrame(json_data.get('data', dict()).get('list', list()))
                if df_enterprise_data.empty:
                    return {
                        "enterprise": df_enterprise_data,
                        "company_detail": pd.DataFrame(),
                        "qualification": pd.DataFrame()
                    }
                query_id = df_enterprise_data['QY_ID'].astype(str).unique().tolist()[0]
                df_enterprise_data['QUALIFICATION_TYPE'] = ''
                df_enterprise_data = self._clean(df_enterprise_data)
                detail = self.get_detail(query_id)
                return {"enterprise": df_enterprise_data, **detail}
            except (requests.exceptions.ConnectionError, Exception) as _:
                time_print("爬虫被封, 请稍等")
                time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                continue


class Person(JZSC):
    """
    从业人员工具处理类
    """
    _table_url = urljoin(JZSC._base_url, "APi/webApi/dataservice/query/staff/list")
    QY_ID = "RY_ID"

    def __init__(self) -> None:
        super().__init__()
        with open(self._ROOT_PATH.parent / 'token.txt') as f:
            self._access_token = f.readline().strip()
        self._JZ_QY_ROOT_PATH = self._ROOT_PATH / '建设工程企业'
        self._ROOT_PATH = self._ROOT_PATH / '从业人员'
        self._ROOT_PATH.mkdir(exist_ok=True)
        self._person_type = {
            "注册建筑师%s一级注册建筑师" % self._SEP: "RY_ZCLB_011",
            "注册建筑师%s二级注册建筑师" % self._SEP: "RY_ZCLB_012",
            "勘察设计注册工程师%s一级注册结构工程师" % self._SEP: "RY_ZCLB_021",
            "勘察设计注册工程师%s二级注册结构师" % self._SEP: "RY_ZCLB_022",
            "勘察设计注册工程师%s注册土木工程师（岩土）" % self._SEP: "RY_ZCLB_031",
            "勘察设计注册工程师%s注册公用设备工程师（暖通空调）" % self._SEP: "RY_ZCLB_032",
            "勘察设计注册工程师%s注册公用设备工程师（给水排水）" % self._SEP: "RY_ZCLB_033",
            "勘察设计注册工程师%s注册公用设备工程师（动力）" % self._SEP: "RY_ZCLB_034",
            "勘察设计注册工程师%s注册电气工程师（发输变电）" % self._SEP: "RY_ZCLB_035",
            "勘察设计注册工程师%s注册电气工程师（供配电）" % self._SEP: "RY_ZCLB_036",
            "勘察设计注册工程师%s注册化工工程师" % self._SEP: "RY_ZCLB_037",
            "注册监理工程师": "RY_ZCLB_051",
            "注册建造师%s一级注册建筑师" % self._SEP: "RY_ZCLB_071",
            "注册建造师%s二级注册建筑师" % self._SEP: "RY_ZCLB_072",
            "注册造价工程师%s一级注册造价工程师" % self._SEP: "RY_ZCLB_081",
            "注册造价工程师%s二级注册造价工程师" % self._SEP: "RY_ZCLB_082",
        }

    def _crawl_by_company(self, company: str) -> pd.DataFrame:
        df_results = pd.DataFrame()

        params = {
            'ry_qymc': company,
            'pg': '0',
            'pgsz': '15',
            'total': '0',
        }
        for _, ry_reg_type in self._person_type.items():
            params.__setitem__('ry_reg_type', ry_reg_type)
            page = 0
            while True:
                if page > self._DATA_LIMIT // int(params.get('pgsz')):
                    time_print("%s的注册人员总数超过了%s条" % (company, self._DATA_LIMIT))
                    break
                params.__setitem__('pg', str(page))
                try:
                    response = requests.get(self._table_url, headers=self._headers, params=params,
                                            proxies=self._proxies,
                                            verify=False)
                    time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                    json_data = self.decrypt(response.text)
                except (Exception, requests.exceptions.ConnectionError) as _:
                    # 此时爬虫被封需要等待一段时间继续爬
                    time_print("爬虫被封，休息片刻...")
                    time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                    continue
                df_cur = pd.DataFrame(json_data.get('data', dict()).get('list', list()))
                if df_cur.empty:
                    break
                df_results = pd.concat([df_results, df_cur])
                page += 1
        return df_results

    def _crawl(self, p: Params) -> pd.DataFrame:
        """
        爬取单个地级市人员基本信息
        :param p:
        :return:
        """
        df_company = pd.read_excel(self._JZ_QY_ROOT_PATH / p.province / ("%s.xlsx" % p.city), usecols='企业名称', dtype=str)
        companies = df_company['企业名称'].unique().tolist()
        df_results = pd.DataFrame()
        for company in companies:
            df_cur = self._crawl_by_company(company)
            df_cur['QY_REGION_NAME'] = "%s-%s" % (p.province, p.city)
            df_results = pd.concat([df_cur, df_results])
        return df_results

    def _clean(self, df_results: pd.DataFrame) -> pd.DataFrame:
        if 'RN' in df_results.columns:
            df_results.drop(columns=['RN'], inplace=True)
        return df_results.drop_duplicates()

    def run(self, p: Params) -> None:
        """
        根据省份和城市批量爬取人员信息
        :param p:
        :return:
        """
        time_print("开始爬取“%s-%s”的人员数据" % (p.province, p.city))
        if (self._ROOT_PATH / p.province / ("%s.xlsx" % p.city)).exists():
            time_print("已经爬取过“%s-%s”的人员数据" % (p.province, p.city))
            return
        df_results = self._crawl(p)
        df_results = self._clean(df_results)
        self._save(p, df_results=df_results)
        time_print("成功爬取“%s-%s”的人员数据" % (p.province, p.city))

    def get_detail(self, ry_id: str) -> Dict[str, pd.DataFrame]:
        headers = {**self._headers, 'accessToken': self._access_token, 'v': '231012'}
        cookies = {
            'Hm_lvt_b1b4b9ea61b6f1627192160766a9c55c': '1698365699,1698506447,1699107222,1699279591',
            'Hm_lpvt_b1b4b9ea61b6f1627192160766a9c55c': '1699399352',
        }

        def refresh_headers(region_id_: str) -> None:
            self._refresh_cookie('person', region_id_)
            headers.__setitem__('accessToken', self._access_token)

        def get_staff_detail() -> (pd.DataFrame, pd.DataFrame):
            staff_detail_url = urljoin(self._base_url, "APi/webApi/dataservice/query/staff/staffDetail")
            while True:
                try:
                    response = requests.get(
                        staff_detail_url,
                        headers=headers,
                        params={'staffId': ry_id},
                        proxies=self._proxies,
                        cookies=getattr(self, 'cookies', cookies))
                    time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                    json_data = self.decrypt(response.text)
                    if json_data.get('code') == requests.codes.request_timeout and json_data.get(
                            'message') == 'token失效':
                        refresh_headers(ry_id)
                        continue
                    result = json_data.get('data', dict())
                    if not result:
                        break
                    df_person_ = pd.DataFrame([result.get('staffMap', dict())])
                    df_person_[self.QY_ID] = ry_id
                    df_practice_registration_ = pd.DataFrame(result.get('regCertList', dict()))
                    df_practice_registration_[self.QY_ID] = ry_id
                    return df_person_, df_practice_registration_
                except (requests.exceptions.ConnectionError, Exception) as _:
                    time_print("爬虫被封，请稍等...")
                    time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                    continue

        def get_record_list() -> pd.DataFrame:
            record_url = urljoin(self._base_url, "APi/webApi/dataservice/query/staff/staffWorkRecordList")
            while True:
                try:
                    response = requests.get(
                        record_url,
                        headers=headers,
                        params={'staffId': ry_id},
                        proxies=self._proxies,
                        cookies=getattr(self, 'cookies', cookies))
                    time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                    json_data = self.decrypt(response.text)
                    if json_data.get('code') == requests.codes.request_timeout and \
                            json_data.get('message') == 'token失效':
                        refresh_headers(ry_id)
                        continue
                    return pd.DataFrame(json_data.get('data', dict()).get("dbMapList", list()))
                except (requests.exceptions.ConnectionError, Exception) as _:
                    time_print("爬虫被封，请稍等...")
                    time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                    continue

        df_person, df_practice_registration = get_staff_detail()
        df_record = get_record_list()
        # df_practice_registration（执业注册信息）的REG_CERTNO字段 和 df_record（证书变更记录）的ZCBH字段 关联
        return {
            'person_detail': df_person,
            'practice_registration': df_practice_registration,
            'record_list': df_record
        }

    def run_detail(self, p: Params) -> None:
        """爬取详细信息"""
        file_path = self._ROOT_PATH / p.province / ("%s.xlsx" % p.city)
        df_raw = pd.read_excel(file_path, dtype=str)
        detail_ids = df_raw[self.QY_ID].unique().tolist()
        df_person, df_practice_registration, df_record = pd.DataFrame(), pd.DataFrame(), pd.DataFrame()
        for detail_id in detail_ids:
            time_print("开始爬%s-%s-%s数据" % (p.province, p.city, detail_id))
            detail_result = self.get_detail(ry_id=detail_id)
            # 人员信息详情
            df_cur_person = detail_result.get('person_detail')
            df_person = pd.concat([df_cur_person, df_person])
            # 执业注册信息
            df_cur_practice_registration = detail_result.get('practice_registration')
            df_practice_registration = pd.concat([df_cur_practice_registration, df_practice_registration])
            # 证书变更信息
            df_cur_record = detail_result.get('record_list')
            df_record = pd.concat([df_cur_record, df_record])
            time_print("成功爬%s-%s-%s数据" % (p.province, p.city, detail_id))
        # 持久化到磁盘
        with pd.ExcelWriter(file_path) as writer:
            df_raw.to_excel(writer, sheet_name="人员数据", index=False)
            df_person.to_excel(writer, sheet_name='人员详情-人员信息', index=False)
            df_practice_registration.to_excel(writer, sheet_name='人员详情-执业注册信息', index=False)
            df_record.to_excel(writer, sheet_name="人员详情-证书变更记录", index=False)

    def search(self, person_name_or_id_card: str) -> Dict[str, pd.DataFrame]:
        params = {
            'complexname': person_name_or_id_card,
            'pg': '0',
            'pgsz': '15',
            'total': '0',
        }
        while True:
            try:
                response = requests.get(
                    urljoin(self._base_url, "APi/webApi/dataservice/query/staff/list"),
                    params=params,
                    headers=self._headers,
                )
                json_data = self.decrypt(response.text)
                df_person_data = pd.DataFrame(json_data.get('data', dict()).get('list', list()))
                if df_person_data.empty:
                    return {
                        "person": df_person_data,
                        "person_detail": pd.DataFrame(),
                        "practice_registration": pd.DataFrame(),
                        "record_list": pd.DataFrame()
                    }
                ry_id = df_person_data[self.QY_ID].astype(str).unique().tolist()[0]
                df_person_data = self._clean(df_person_data)
                detail = self.get_detail(ry_id)
                return {"person": df_person_data, **detail}
            except (requests.exceptions.ConnectionError, Exception) as _:
                time_print("爬虫被封, 请稍等")
                time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                continue


class Project(JZSC):
    """
    建设项目工具处理类
    """

    _project_type = {
        "房屋建筑工程": "01",
        "市政工程": "02",
        "其他": "99",
    }
    QY_ID = 'ID'

    def __init__(self) -> None:
        super().__init__()
        with open(self._ROOT_PATH.parent / 'token.txt') as f:
            self._access_token = f.readline().strip()
        self._ROOT_PATH = self._ROOT_PATH / '建设项目'
        self._ROOT_PATH.mkdir(exist_ok=True)

    def _single_crawl(self, params: Dict[str, str], region: str) -> pd.DataFrame:
        page = 0
        df_results = pd.DataFrame()
        while True:
            if page > self._DATA_LIMIT // int(params.get('pgsz')):
                time_print("%s的项目总数超过了%s条" % (region, self._DATA_LIMIT))
                break
            params.__setitem__('pg', str(page))
            try:
                response = requests.get(
                    urljoin(self._base_url, "APi/webApi/dataservice/query/project/list"),
                    params=params,
                    headers=self._headers,
                    proxies=self._proxies,
                    verify=False
                )
                time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                json_data = self.decrypt(response.text)
            except (Exception, requests.exceptions.ConnectionError) as _:
                # 此时爬虫被封需要等待一段时间继续爬
                time_print("爬虫被封，休息片刻...")
                time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                continue
            df_cur = pd.DataFrame(json_data.get('data', dict()).get('list', list()))
            if df_cur.empty:
                break
            df_results = pd.concat([df_results, df_cur])
            page += 1
        df_results['QY_REGION_NAME'] = region
        return df_results

    def _crawl(self, p: Params, *args, **kwargs) -> pd.DataFrame:
        params = {
            'projectType': '99',
            'projectRegionId': '140500',
            'pg': '0',
            'pgsz': '15',
            'total': '0',
        }
        df_results = pd.DataFrame()
        county_id_map = self._get_county_qy_regions_by_city(province=p.province, city=p.city)
        for county, county_id in county_id_map.items():
            params.__setitem__('projectRegionId', county_id)
            region = "%s-%s-%s" % (p.province, p.city, county)
            for _, project_type_id in self._project_type.items():
                params.__setitem__('projectType', project_type_id)
                df_results = pd.concat([df_results, self._single_crawl(params, region)])
        return df_results

    def _clean(self, df_results: pd.DataFrame) -> pd.DataFrame:
        if 'RN' in df_results.columns:
            df_results.drop(columns=['RN'], inplace=True)
        return df_results.drop_duplicates()

    def run(self, p: Params) -> None:
        """
        根据省份和城市批量爬取人员信息
        :param p:
        :return:
        """
        time_print("开始爬取“%s-%s”的项目数据" % (p.province, p.city))
        if (self._ROOT_PATH / p.province / ("%s.xlsx" % p.city)).exists():
            time_print("已经爬取过“%s-%s”的项目数据" % (p.province, p.city))
            return
        df_results = self._crawl(p)
        df_results = self._clean(df_results)
        self._save(p, df_results=df_results)
        time_print("成功爬取“%s-%s”的项目数据" % (p.province, p.city))

    def get_detail(self, qy_id: str) -> Dict[str, pd.DataFrame]:
        headers = {**self._headers, 'accessToken': self._access_token, 'v': '231012'}
        cookies = {
            'Hm_lvt_b1b4b9ea61b6f1627192160766a9c55c': '1698365699,1698506447,1699107222,1699279591',
            'Hm_lpvt_b1b4b9ea61b6f1627192160766a9c55c': '1699399352',
        }

        def refresh_headers(id_: str) -> None:
            self._refresh_cookie('project', id_)
            headers.__setitem__('accessToken', self._access_token)

        def _get_info(url: str, params: Dict[str, str]) -> pd.DataFrame:
            page = 0
            df_result_ = pd.DataFrame()
            while True:
                if page > self._DATA_LIMIT // int(params.get('pgsz')):
                    time_print("%s的总数超过了%s条" % (params, self._DATA_LIMIT))
                    break
                params.__setitem__('pg', str(page))
                try:
                    response = requests.get(
                        url,
                        params=params,
                        cookies=cookies,
                        headers=headers,
                    )
                    time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                    json_data = self.decrypt(response.text)
                except (Exception, requests.exceptions.ConnectionError) as _:
                    # 此时爬虫被封需要等待一段时间继续爬
                    time_print("爬虫被封，休息片刻...")
                    time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                    continue
                df_cur = pd.DataFrame(json_data.get('data', dict()).get('list', list()))
                if df_cur.empty:
                    break
                df_result_ = pd.concat([df_result_, df_cur])
                page += 1
            df_result_ = self._clean(df_result_)
            return df_result_

        def get_project_base_info() -> pd.DataFrame:
            url = urljoin(self._base_url, "APi/webApi/dataservice/query/project/projectDetail")
            while True:
                try:
                    response = requests.get(
                        url,
                        headers=headers,
                        params={'id': qy_id},
                        proxies=self._proxies,
                        cookies=getattr(self, 'cookies', cookies))
                    time.sleep(secrets.choice([interval // 100 for interval in range(10)]))
                    json_data = self.decrypt(response.text)
                    if json_data.get('code') == requests.codes.request_timeout and json_data.get(
                            'message') == 'token失效':
                        refresh_headers(qy_id)
                        continue
                    result = json_data.get('data', dict())
                    if not result:
                        break
                    df_project_base_info_ = pd.DataFrame([result])
                    df_project_base_info_[self.QY_ID] = qy_id
                    return df_project_base_info_
                except (requests.exceptions.ConnectionError, Exception) as _:
                    time_print("爬虫被封，请稍等...")
                    time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                    continue

        def get_tender_info(pj_num: str) -> pd.DataFrame:
            params = {
                'jsxmCode': pj_num,
                'pg': '0',
                'pgsz': '15',
            }
            url = urljoin(self._base_url, "APi/webApi/dataservice/query/project/tenderInfo")
            return _get_info(url, params)

        def get_contract_record(pj_num: str) -> pd.DataFrame:
            params = {
                'jsxmCode': pj_num,
                'pg': '0',
                'pgsz': '15',
            }
            url = urljoin(self._base_url, "APi/webApi/dataservice/query/project/contractRecordManage")
            return _get_info(url, params)

        def get_censor_info(pj_num: str) -> pd.DataFrame:
            params = {
                'jsxmCode': pj_num,
                'pg': '0',
                'pgsz': '15',
            }
            url = urljoin(self._base_url, "APi/webApi/dataservice/query/project/projectCensorInfo")
            return _get_info(url, params)

        def get_builder_licence(pj_num: str) -> pd.DataFrame:
            params = {
                'jsxmCode': pj_num,
                'pg': '0',
                'pgsz': '15',
            }
            url = urljoin(self._base_url, "APi/webApi/dataservice/query/project/builderLicenceManage")
            return _get_info(url, params)

        def get_project_finish_manage(pj_num: str) -> pd.DataFrame:
            params = {
                'jsxmCode': pj_num,
                'pg': '0',
                'pgsz': '15',
            }
            url = urljoin(self._base_url, "APi/webApi/dataservice/query/project/projectFinishManage")
            return _get_info(url, params)

        df_project_base_info = get_project_base_info()
        project_num = df_project_base_info['PRJNUM'].astype(str).unique().tolist()[0]
        return {
            'project_base_info': df_project_base_info,
            'tender_info': get_tender_info(project_num),
            'contract_record': get_contract_record(project_num),
            'censor_info': get_censor_info(project_num),
            'builder_licence': get_builder_licence(project_num),
            'project_finish_manage': get_project_finish_manage(project_num),
        }

    def run_detail(self, p: Params) -> None:
        """爬取详细信息"""
        file_path = self._ROOT_PATH / p.province / ("%s.xlsx" % p.city)
        df_raw = pd.read_excel(file_path, dtype=str)
        detail_ids = df_raw[self.QY_ID].unique().tolist()
        df_project_base_info, df_tender_info, df_contract_record = pd.DataFrame(), pd.DataFrame(), pd.DataFrame()
        df_censor_info, df_builder_licence, df_project_finish_manage = pd.DataFrame(), pd.DataFrame(), pd.DataFrame()
        for detail_id in detail_ids:
            time_print("开始爬取%s-%s-%s数据" % (p.province, p.city, detail_id))
            detail_result = self.get_detail(qy_id=detail_id)
            # 工程基本信息
            df_cur_project_base_info = detail_result.get('project_base_info')
            df_project_base_info = pd.concat([df_cur_project_base_info, df_project_base_info])
            # 招投标信息
            df_cur_tender_info = detail_result.get('tender_info')
            df_tender_info = pd.concat([df_cur_tender_info, df_tender_info])
            # 合同登记信息
            df_cur_contract_record = detail_result.get('contract_record')
            df_contract_record = pd.concat([df_cur_contract_record, df_contract_record])
            # 施工图审查
            df_cur_censor_info = detail_result.get('censor_info')
            df_censor_info = pd.concat([df_cur_censor_info, df_censor_info])
            # 施工许可
            df_cur_builder_licence = detail_result.get('builder_licence')
            df_builder_licence = pd.concat([df_cur_builder_licence, df_builder_licence])
            # 竣工验收
            df_cur_project_finish_manage = detail_result.get('project_finish_manage')
            df_project_finish_manage = pd.concat([df_cur_project_finish_manage, df_project_finish_manage])
            time_print("成功爬取%s-%s-%s数据" % (p.province, p.city, detail_id))
        # 持久化到磁盘
        with pd.ExcelWriter(file_path) as writer:
            df_raw.to_excel(writer, sheet_name="项目数据", index=False)
            df_project_base_info.to_excel(writer, sheet_name='项目详情-工程基本信息', index=False)
            df_tender_info.to_excel(writer, sheet_name='项目详情-招投标信息', index=False)
            df_contract_record.to_excel(writer, sheet_name="项目详情-合同登记信息", index=False)
            df_censor_info.to_excel(writer, sheet_name="项目详情-施工图审查", index=False)
            df_builder_licence.to_excel(writer, sheet_name="项目详情-施工许可", index=False)
            df_project_finish_manage.to_excel(writer, sheet_name="项目详情-竣工验收", index=False)

    def search(self, project_name_or_project_code: str) -> Dict[str, pd.DataFrame]:
        params = {
            'complexname': project_name_or_project_code,
            'pg': '0',
            'pgsz': '15',
            'total': '450',
        }
        while True:
            try:
                response = requests.get(
                    urljoin(self._base_url, "APi/webApi/dataservice/query/project/list"),
                    params=params,
                    headers=self._headers,
                )
                json_data = self.decrypt(response.text)
                df_project_data = pd.DataFrame(json_data.get('data', dict()).get('list', list()))
                if df_project_data.empty:
                    return {
                        "project": df_project_data,
                        'project_base_info': pd.DataFrame(),
                        'tender_info': pd.DataFrame(),
                        'contract_record': pd.DataFrame(),
                        'censor_info': pd.DataFrame(),
                        'builder_licence': pd.DataFrame(),
                        'project_finish_manage': pd.DataFrame(),
                    }
                qy_id = df_project_data[self.QY_ID].astype(str).unique().tolist()[0]
                df_project_data = self._clean(df_project_data)
                detail = self.get_detail(qy_id)
                return {"project": df_project_data, **detail}
            except (requests.exceptions.ConnectionError, Exception) as _:
                time_print("爬虫被封, 请稍等")
                time.sleep(self.WAIT_TIME_WHEN_BE_BLOCKED)
                continue


if __name__ == '__main__':
    project = Project()
    project.concurrent_run(max_workers=2)
